<?xml version="1.0" encoding="UTF-8"?>
<project name="XCC" default="compile" basedir=".">
    <property file="build.properties" />

    <patternset id="excluded.from.compilation.xcc">
        <exclude name="**/backend/target/x86/**"/>
    </patternset>

    <!-- =================================================================== -->
    <!-- Initialization target                                               -->
    <!-- =================================================================== -->
    <target name="init">
        <echo message="Java version: ${java.version}"/>
        <tstamp/>

        <mkdir dir="${output.dir}"/>
        <mkdir dir="${output.classes}"/>
        <mkdir dir="${output.gen_tlegen_srcs}"/>
        <mkdir dir="${output.javadocs}"/>
        <mkdir dir="${output.libs}"/>
        <mkdir dir="${output.bin}"/>
        <copy todir="${output.libs}">
            <fileset dir="${libs}"/>
        </copy>
    </target>

    <target name="build_tblgen" depends="init"
            description="compile sources files except that target specific files">
        <javac destdir="${output.classes}"
                classpath="${output.libs}/${trove_name}"
                debug="${debug}"
                target="1.8">
            <src path="${src}"/>
            <patternset refid="excluded.from.compilation.xcc"/>
        </javac>
    </target>


    <!-- =================================================================== -->
    <!-- Generating target-specific sources from td file                     -->
    <!-- =================================================================== -->
    <target name="generate_target_specific_files" depends="build_tblgen"
            description="Generates target specific sources from td file">
        <java classname="utils.tablegen.TableGen" dir="${output.classes}" fork="true">
            <arg value="${basedir}/${td_files}/X86/X86.td"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}/X86"/>
            <arg value="-gen-asm-printer"/>
            <arg value="-o"/>
            <arg value="${basedir}/${output.gen_tlegen_srcs}/X86GenATTAsmPrinter.java"/>
            <classpath>
                <pathelement path="${output.classes}"/>
                <path path="${output.libs}/${trove_name}"/>
            </classpath>
        </java>

        <java classname="utils.tablegen.TableGen" dir="${output.classes}" fork="true">
            <arg value="${basedir}/${td_files}/X86/X86.td"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}/X86"/>
            <arg value="-gen-register-info"/>
            <arg value="-o"/>
            <arg value="${basedir}/${output.gen_tlegen_srcs}/X86GenRegisterInfo.java"/>
            <classpath>
                <pathelement path="${output.classes}"/>
                <path path="${output.libs}/${trove_name}"/>
            </classpath>
        </java>

        <java classname="utils.tablegen.TableGen" dir="${output.classes}" fork="true">
            <arg value="${basedir}/${td_files}/X86/X86.td"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}/X86"/>
            <arg value="-gen-register-names"/>
            <arg value="-o"/>
            <arg value="${basedir}/${output.gen_tlegen_srcs}/X86GenRegisterNames.java"/>
            <classpath>
                <pathelement path="${output.classes}"/>
                <path path="${output.libs}/${trove_name}"/>
            </classpath>
        </java>

        <java classname="utils.tablegen.TableGen" dir="${output.classes}" fork="true">
            <arg value="${basedir}/${td_files}/X86/X86.td"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}/X86"/>
            <arg value="-gen-instr-info"/>
            <arg value="-o"/>
            <arg value="${basedir}/${output.gen_tlegen_srcs}/X86GenInstrInfo.java"/>
            <classpath>
                <pathelement path="${output.classes}"/>
                <path path="${output.libs}/${trove_name}"/>
            </classpath>
        </java>

        <java classname="utils.tablegen.TableGen" dir="${output.classes}" fork="true">
            <arg value="${basedir}/${td_files}/X86/X86.td"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}/X86"/>
            <arg value="-gen-fast-isel"/>
            <arg value="-o"/>
            <arg value="${basedir}/${output.gen_tlegen_srcs}/X86GenFastISel.java"/>
            <classpath>
                <pathelement path="${output.classes}"/>
                <path path="${output.libs}/${trove_name}"/>
            </classpath>
        </java>

        <java classname="utils.tablegen.TableGen" dir="${output.classes}" fork="true">
            <arg value="${basedir}/${td_files}/X86/X86.td"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}/X86"/>
            <arg value="-gen-instr-names"/>
            <arg value="-o"/>
            <arg value="${basedir}/${output.gen_tlegen_srcs}/X86GenInstrNames.java"/>
            <classpath>
                <pathelement path="${output.classes}"/>
                <path path="${output.libs}/${trove_name}"/>
            </classpath>
        </java>

        <java classname="utils.tablegen.TableGen" dir="${output.classes}" fork="true">
            <arg value="${basedir}/${td_files}/X86/X86.td"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}/X86"/>
            <arg value="-gen-subtarget"/>
            <arg value="-o"/>
            <arg value="${basedir}/${output.gen_tlegen_srcs}/X86GenSubtarget.java"/>
            <classpath>
                <pathelement path="${output.classes}"/>
                <path path="${output.libs}/${trove_name}"/>
            </classpath>
        </java>

        <java classname="utils.tablegen.TableGen" dir="${output.classes}" fork="true">
            <arg value="${basedir}/${td_files}/X86/X86.td"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}"/>
            <arg value="-I"/>
            <arg value="${basedir}/${td_files}/X86"/>
            <arg value="-gen-callingconv"/>
            <arg value="-o"/>
            <arg value="${basedir}/${output.gen_tlegen_srcs}/X86GenCallingConv.java"/>
            <classpath>
                <pathelement path="${output.classes}"/>
                <path path="${output.libs}/${trove_name}"/>
            </classpath>
        </java>
    </target>

    <path id="xcc.module.sourcepath">
        <dirset dir="${basedir}">
            <include name="${basedir}/out/gen_tblgen_srcs/backend/target/x86/"/>
            <include name="${basedir}/java/backend/target/x86/"/>
        </dirset>
    </path>

    <target name="compile" depends="generate_target_specific_files">
        <javac destdir="${output.classes}"
               debug="${debug}"
               target="1.8">
            <src path="${target_dir_exclude}:${output.gen_tlegen_srcs}"/>
            <classpath>
                <pathelement path="${output.classes}"/>
                <path path="${output.libs}/${trove_name}"/>
            </classpath>
        </javac>
    </target>


    <!-- =============================================================== -->
    <!-- Build the main jar.                                             -->
    <!-- =============================================================== -->
    <target name="jar" depends="compile" description="jar the compiled classes">
        <jar destfile="${output.libs}/${xcc.name}-${version}.jar">
            <fileset dir="${xcc_jar}/">
                <!--<exclude name="utils/tablegen/**"/>-->
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Title" value="${xcc.name}"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Sealed" value="false"/>
                <attribute name="Main-Class" value="xcc.Jlang">
                </attribute>
            </manifest>
        </jar>
        <!--
        <jar destfile="${output.libs}/${tblgen.name}-${version}.jar">
            <fileset dir="${tblgen_jar}/">
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Title" value="${tblgen.name}"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Sealed" value="false"/>
                <attribute name="JlangCC-Class" value="utils.tablegen.TableGen">
                </attribute>
            </manifest>
        </jar>
        -->
    </target>

    <!-- =============================================================== -->
    <!-- Create the javadocs.                                            -->
    <!-- =============================================================== -->
    <target name="javadoc" depends="compile" description="generates java documents">
        <javadoc destdir="${output.javadocs}"
            maxmemory="256m"
            windowtitle="${fullname} ${version}"
            doctitle="${fullname} ${version}">
            <sourcepath>
                <path location="${src}"/>
                <path location="${output.gen_tlegen_srcs}"/>
            </sourcepath>
        </javadoc>
    </target>


    <!-- =============================================================== -->
    <!-- Clean all output                                                -->
    <!-- =============================================================== -->
    <target name="clean" depends="init" description="remove temporary directories">
        <delete dir="${output.dir}"/>
    </target>

    <!-- =============================================================== -->
    <!-- The main target for building a release. This will perform a     -->
    <!-- "clean" followed by a "dist".                                   -->
    <!-- =============================================================== -->
    <target name="release">

    </target>
</project>
