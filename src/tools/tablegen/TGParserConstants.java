/* Generated By:JavaCC: Do not edit this line. TGParserConstants.java */
package tools.tablegen;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TGParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SPACES = 1;
  /** RegularExpression Id. */
  int LINE_COMMENT = 2;
  /** RegularExpression Id. */
  int BLOCK_COMMENT = 3;
  /** RegularExpression Id. */
  int BIT = 4;
  /** RegularExpression Id. */
  int BITS = 5;
  /** RegularExpression Id. */
  int INT = 6;
  /** RegularExpression Id. */
  int STRING = 7;
  /** RegularExpression Id. */
  int LIST = 8;
  /** RegularExpression Id. */
  int CODE = 9;
  /** RegularExpression Id. */
  int DAG = 10;
  /** RegularExpression Id. */
  int CLASS = 11;
  /** RegularExpression Id. */
  int DEF = 12;
  /** RegularExpression Id. */
  int FIELD = 13;
  /** RegularExpression Id. */
  int LET = 14;
  /** RegularExpression Id. */
  int IN = 15;
  /** RegularExpression Id. */
  int SRATOK = 16;
  /** RegularExpression Id. */
  int SRLTOK = 17;
  /** RegularExpression Id. */
  int SHLTOK = 18;
  /** RegularExpression Id. */
  int STRCONCATTOK = 19;
  /** RegularExpression Id. */
  int INTVAL = 20;
  /** RegularExpression Id. */
  int IDENTIFIER = 21;
  /** RegularExpression Id. */
  int DIGIT = 22;
  /** RegularExpression Id. */
  int ALPHA = 23;
  /** RegularExpression Id. */
  int VARNAME = 24;
  /** RegularExpression Id. */
  int STRINGVAL = 25;
  /** RegularExpression Id. */
  int INCLUDE_STR = 26;
  /** RegularExpression Id. */
  int CODE_FRAGMENT = 27;
  /** RegularExpression Id. */
  int PLUS = 28;
  /** RegularExpression Id. */
  int MINUS = 29;
  /** RegularExpression Id. */
  int LBRAKET = 30;
  /** RegularExpression Id. */
  int RBRAKET = 31;
  /** RegularExpression Id. */
  int LBRACE = 32;
  /** RegularExpression Id. */
  int RBRACE = 33;
  /** RegularExpression Id. */
  int LPAREN = 34;
  /** RegularExpression Id. */
  int RPAREN = 35;
  /** RegularExpression Id. */
  int COLON = 36;
  /** RegularExpression Id. */
  int SEMI = 37;
  /** RegularExpression Id. */
  int DOT = 38;
  /** RegularExpression Id. */
  int COMMA = 39;
  /** RegularExpression Id. */
  int EQ = 40;
  /** RegularExpression Id. */
  int QUESTION = 41;
  /** RegularExpression Id. */
  int POUND = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<SPACES>",
    "<LINE_COMMENT>",
    "<BLOCK_COMMENT>",
    "\"bit\"",
    "\"bits\"",
    "\"int\"",
    "\"string\"",
    "\"list\"",
    "\"code\"",
    "\"dag\"",
    "\"class\"",
    "\"def\"",
    "\"field\"",
    "\"let\"",
    "\"in\"",
    "\"!sra\"",
    "\"!srl\"",
    "\"!shl\"",
    "\"!strconcat\"",
    "<INTVAL>",
    "<IDENTIFIER>",
    "<DIGIT>",
    "<ALPHA>",
    "<VARNAME>",
    "<STRINGVAL>",
    "<INCLUDE_STR>",
    "<CODE_FRAGMENT>",
    "\"+\"",
    "\"-\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\":\"",
    "\";\"",
    "\".\"",
    "\",\"",
    "\"=\"",
    "\"?\"",
    "\"#\"",
    "\"<\"",
    "\">\"",
  };

}
