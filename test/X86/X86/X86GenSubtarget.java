package backend.target.x86;

/**
 * TableGen created file.
 * <p>
 * Subtarget Enumeration Source Fragment
 * Automatically generated by .td file, do not edit!
 * Powered by Xlous zeng
 * </p>
 */
import backend.target.SubtargetFeatureKV;
import backend.target.SubtargetFeatures;

import static backend.target.x86.X86Subtarget.X863DNowEnum.*;
import static backend.target.x86.X86Subtarget.X86SSEEnum.*;

public final class X86GenSubtarget extends X86Subtarget {

	public static final int Feature3DNow = 1 << 0;
	public static final int Feature3DNowA = 1 << 0;
	public static final int Feature64Bit = 1 << 0;
	public static final int FeatureAVX = 1 << 0;
	public static final int FeatureFMA3 = 1 << 0;
	public static final int FeatureFMA4 = 1 << 0;
	public static final int FeatureMMX = 1 << 0;
	public static final int FeatureSSE1 = 1 << 0;
	public static final int FeatureSSE2 = 1 << 0;
	public static final int FeatureSSE3 = 1 << 0;
	public static final int FeatureSSE41 = 1 << 0;
	public static final int FeatureSSE42 = 1 << 0;
	public static final int FeatureSSE4A = 1 << 0;
	public static final int FeatureSSSE3 = 1 << 0;
	public static final int FeatureSlowBTMem = 1 << 0;

	// Sorted (by key) array of values for CPU features.
	public static final SubtargetFeatureKV[] featureKV = {
		new SubtargetFeatureKV("3dnow", "Enable 3DNow! instructions", Feature3DNow, 0),
		new SubtargetFeatureKV("3dnowa", "Enable 3DNow! Athlon instructions", Feature3DNowA, Feature3DNow),
		new SubtargetFeatureKV("64bit", "Support 64-bit instructions", Feature64Bit, 0),
		new SubtargetFeatureKV("avx", "Enable AVX instructions", FeatureAVX, 0),
		new SubtargetFeatureKV("fma3", "Enable three-operand fused multiple-add", FeatureFMA3, 0),
		new SubtargetFeatureKV("fma4", "Enable four-operand fused multiple-add", FeatureFMA4, 0),
		new SubtargetFeatureKV("mmx", "Enable MMX instructions", FeatureMMX, 0),
		new SubtargetFeatureKV("sse", "Enable SSE instructions", FeatureSSE1, FeatureMMX),
		new SubtargetFeatureKV("sse2", "Enable SSE2 instructions", FeatureSSE2, FeatureSSE1),
		new SubtargetFeatureKV("sse3", "Enable SSE3 instructions", FeatureSSE3, FeatureSSE2),
		new SubtargetFeatureKV("sse41", "Enable SSE 4.1 instructions", FeatureSSE41, FeatureSSSE3),
		new SubtargetFeatureKV("sse42", "Enable SSE 4.2 instructions", FeatureSSE42, FeatureSSE41),
		new SubtargetFeatureKV("sse4a", "Support SSE 4a instructions", FeatureSSE4A, 0),
		new SubtargetFeatureKV("ssse3", "Enable SSSE3 instructions", FeatureSSSE3, FeatureSSE3),
		new SubtargetFeatureKV("slow-bt-mem", "Bit testing of memory is slow", FeatureSlowBTMem, 0)
	};

	// Sorted (by key) array of values for CPU subtype.
	public static final SubtargetFeatureKV[] subTypeKV = {
		new SubtargetFeatureKV("generic", "Select the generic processor", 0, 0),
		new SubtargetFeatureKV("i386", "Select the i386 processor", 0, 0),
		new SubtargetFeatureKV("i486", "Select the i486 processor", 0, 0),
		new SubtargetFeatureKV("i586", "Select the i586 processor", 0, 0),
		new SubtargetFeatureKV("pentium", "Select the pentium processor", 0, 0),
		new SubtargetFeatureKV("pentium-mmx", "Select the pentium-mmx processor", FeatureMMX, 0),
		new SubtargetFeatureKV("i686", "Select the i686 processor", 0, 0),
		new SubtargetFeatureKV("pentiumpro", "Select the pentiumpro processor", 0, 0),
		new SubtargetFeatureKV("pentium2", "Select the pentium2 processor", FeatureMMX, 0),
		new SubtargetFeatureKV("pentium3", "Select the pentium3 processor", FeatureSSE1, 0),
		new SubtargetFeatureKV("pentium-m", "Select the pentium-m processor", FeatureSSE2 | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("pentium4", "Select the pentium4 processor", FeatureSSE2, 0),
		new SubtargetFeatureKV("x86-64", "Select the x86-64 processor", FeatureSSE2 | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("yonah", "Select the yonah processor", FeatureSSE3 | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("prescott", "Select the prescott processor", FeatureSSE3 | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("nocona", "Select the nocona processor", FeatureSSE3 | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("core2", "Select the core2 processor", FeatureSSSE3 | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("penryn", "Select the penryn processor", FeatureSSE41 | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("atom", "Select the atom processor", FeatureSSE3 | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("corei7", "Select the corei7 processor", FeatureSSE42 | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("nehalem", "Select the nehalem processor", FeatureSSE42 | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("sandybridge", "Select the sandybridge processor", FeatureSSE42 | FeatureAVX | Feature64Bit, 0),
		new SubtargetFeatureKV("k6", "Select the k6 processor", FeatureMMX, 0),
		new SubtargetFeatureKV("k6-2", "Select the k6-2 processor", FeatureMMX | Feature3DNow, 0),
		new SubtargetFeatureKV("k6-3", "Select the k6-3 processor", FeatureMMX | Feature3DNow, 0),
		new SubtargetFeatureKV("athlon", "Select the athlon processor", FeatureMMX | Feature3DNowA | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("athlon-tbird", "Select the athlon-tbird processor", FeatureMMX | Feature3DNowA | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("athlon-4", "Select the athlon-4 processor", FeatureSSE1 | Feature3DNowA | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("athlon-xp", "Select the athlon-xp processor", FeatureSSE1 | Feature3DNowA | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("athlon-mp", "Select the athlon-mp processor", FeatureSSE1 | Feature3DNowA | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("k8", "Select the k8 processor", FeatureSSE2 | Feature3DNowA | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("opteron", "Select the opteron processor", FeatureSSE2 | Feature3DNowA | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("athlon64", "Select the athlon64 processor", FeatureSSE2 | Feature3DNowA | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("athlon-fx", "Select the athlon-fx processor", FeatureSSE2 | Feature3DNowA | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("k8-sse3", "Select the k8-sse3 processor", FeatureSSE3 | Feature3DNowA | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("opteron-sse3", "Select the opteron-sse3 processor", FeatureSSE3 | Feature3DNowA | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("athlon64-sse3", "Select the athlon64-sse3 processor", FeatureSSE3 | Feature3DNowA | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("amdfam10", "Select the amdfam10 processor", FeatureSSE3 | FeatureSSE4A | Feature3DNowA | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("barcelona", "Select the barcelona processor", FeatureSSE3 | FeatureSSE4A | Feature3DNowA | Feature64Bit | FeatureSlowBTMem, 0),
		new SubtargetFeatureKV("istanbul", "Select the istanbul processor", Feature3DNowA | Feature64Bit | FeatureSSE4A | Feature3DNowA, 0),
		new SubtargetFeatureKV("shanghai", "Select the shanghai processor", Feature3DNowA | Feature64Bit | FeatureSSE4A | Feature3DNowA, 0),
		new SubtargetFeatureKV("winchip-c6", "Select the winchip-c6 processor", FeatureMMX, 0),
		new SubtargetFeatureKV("winchip2", "Select the winchip2 processor", FeatureMMX | Feature3DNow, 0),
		new SubtargetFeatureKV("c3", "Select the c3 processor", FeatureMMX | Feature3DNow, 0),
		new SubtargetFeatureKV("c3-2", "Select the c3-2 processor", FeatureSSE1, 0)
	};


	/**
	 * Parses features string setting specified subtarget options.
	 */
	public String parseSubtargetFeatures(String fs, String cpu) {
		SubtargetFeatures features = new SubtargetFeatures(fs);
		features.setCPUIfNone(cpu);
		int bits = features.getBits(subTypeKV,featureKV);
		if ((bits & Feature3DNow) != 0 && X863DNowLevel.compareTo(ThreeDNow) < 0)
			X863DNowLevel = ThreeDNow;
		if ((bits & Feature3DNowA) != 0 && X863DNowLevel.compareTo(ThreeDNowA) < 0)
			X863DNowLevel = ThreeDNowA;
		if ((bits & Feature64Bit) != 0)
			HasX86_64 = true;
		if ((bits & FeatureAVX) != 0)
			HasAVX = true;
		if ((bits & FeatureFMA3) != 0)
			HasFMA3 = true;
		if ((bits & FeatureFMA4) != 0)
			HasFMA4 = true;
		if ((bits & FeatureMMX) != 0 && X86SSELevel.compareTo(MMX) < 0)
			X86SSELevel = MMX;
		if ((bits & FeatureSSE1) != 0 && X86SSELevel.compareTo(SSE1) < 0)
			X86SSELevel = SSE1;
		if ((bits & FeatureSSE2) != 0 && X86SSELevel.compareTo(SSE2) < 0)
			X86SSELevel = SSE2;
		if ((bits & FeatureSSE3) != 0 && X86SSELevel.compareTo(SSE3) < 0)
			X86SSELevel = SSE3;
		if ((bits & FeatureSSE41) != 0 && X86SSELevel.compareTo(SSE41) < 0)
			X86SSELevel = SSE41;
		if ((bits & FeatureSSE42) != 0 && X86SSELevel.compareTo(SSE42) < 0)
			X86SSELevel = SSE42;
		if ((bits & FeatureSSE4A) != 0)
			HasSSE4A = true;
		if ((bits & FeatureSSSE3) != 0 && X86SSELevel.compareTo(SSSE3) < 0)
			X86SSELevel = SSSE3;
		if ((bits & FeatureSlowBTMem) != 0)
			IsBTMemSlow = true;
		return features.getCPU();
	}

	public X86GenSubtarget(String tt, String fs, boolean is64Bit)
	{
		super(tt, fs, is64Bit);
	}
}