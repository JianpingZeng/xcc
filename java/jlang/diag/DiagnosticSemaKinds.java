package jlang.diag;
import static jlang.diag.Diagnostic.DiagnosticClass.*;
import static jlang.diag.Diagnostic.Mapping.*;

public enum DiagnosticSemaKinds implements DiagnosticSemaTag
{
	ERR_ABSTRACT_TYPE_IN_DECL(err_abstract_type_in_decl,CLASS_ERROR, MAP_ERROR, "%select{return|parameter|variable|field}1 type %0 is an abstract class"),
	ERR_ADDR_OF_LABEL_IN_PROTECTED_SCOPE(err_addr_of_label_in_protected_scope,CLASS_ERROR, MAP_ERROR, "address taken of label in protected scope, jump to it would have unknown effect on scope"),
	ERR_ADDR_OVL_AMBIGUOUS(err_addr_ovl_ambiguous,CLASS_ERROR, MAP_ERROR, "address of overloaded function %0 is ambiguous"),
	ERR_ALIGNOF_INCOMPLETE_TYPE(err_alignof_incomplete_type,CLASS_ERROR, MAP_ERROR, "invalid application of '__alignof' to an incomplete type %0"),
	ERR_ALLOCATION_OF_ABSTRACT_TYPE(err_allocation_of_abstract_type,CLASS_ERROR, MAP_ERROR, "allocation of an object of abstract type %0"),
	ERR_ALTIVEC_EMPTY_INITIALIZER(err_altivec_empty_initializer,CLASS_ERROR, MAP_ERROR, "expected initializer"),
	ERR_AMBIGUOUS_BASE_TO_DERIVED_CAST(err_ambiguous_base_to_derived_cast,CLASS_ERROR, MAP_ERROR, "ambiguous cast from base %0 to derived %1:%2"),
	ERR_AMBIGUOUS_DERIVED_TO_BASE_CONV(err_ambiguous_derived_to_base_conv,CLASS_ERROR, MAP_ERROR, "ambiguous conversion from derived class %0 to base class %1:%2"),
	ERR_AMBIGUOUS_MEMBER_MULTIPLE_SUBOBJECT_TYPES(err_ambiguous_member_multiple_subobject_types,CLASS_ERROR, MAP_ERROR, "member %0 found in multiple base classes of different types"),
	ERR_AMBIGUOUS_MEMBER_MULTIPLE_SUBOBJECTS(err_ambiguous_member_multiple_subobjects,CLASS_ERROR, MAP_ERROR, "non-static member %0 found in multiple base-class subobjects of type %1:%2"),
	ERR_AMBIGUOUS_MEMPTR_CONV(err_ambiguous_memptr_conv,CLASS_ERROR, MAP_ERROR, "ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3"),
	ERR_AMBIGUOUS_REFERENCE(err_ambiguous_reference,CLASS_ERROR, MAP_ERROR, "reference to %0 is ambiguous"),
	ERR_ANON_BITFIELD_HAS_NEGATIVE_WIDTH(err_anon_bitfield_has_negative_width,CLASS_ERROR, MAP_ERROR, "anonymous bit-field has negative width (%0)"),
	ERR_ANON_BITFIELD_WIDTH_EXCEEDS_TYPE_SIZE(err_anon_bitfield_width_exceeds_type_size,CLASS_ERROR, MAP_ERROR, "size of anonymous bitfield exceeds size of its type (%0 bits)"),
	ERR_ANONYMOUS_RECORD_BAD_MEMBER(err_anonymous_record_bad_member,CLASS_ERROR, MAP_ERROR, "anonymous %select{struct|union}0 can only contain non-static data members"),
	ERR_ANONYMOUS_RECORD_NONPUBLIC_MEMBER(err_anonymous_record_nonpublic_member,CLASS_ERROR, MAP_ERROR, "anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member"),
	ERR_ANONYMOUS_RECORD_WITH_FUNCTION(err_anonymous_record_with_function,CLASS_ERROR, MAP_ERROR, "functions cannot be declared in an anonymous %select{struct|union}0"),
	ERR_ANONYMOUS_RECORD_WITH_STATIC(err_anonymous_record_with_static,CLASS_ERROR, MAP_ERROR, "static members cannot be declared in an anonymous %select{struct|union}0"),
	ERR_ANONYMOUS_RECORD_WITH_TYPE(err_anonymous_record_with_type,CLASS_ERROR, MAP_ERROR, "types cannot be declared in an anonymous %select{struct|union}0"),
	ERR_ANONYMOUS_STRUCT_MEMBER_REDECL(err_anonymous_struct_member_redecl,CLASS_ERROR, MAP_ERROR, "member of anonymous struct redeclares %0"),
	ERR_ANONYMOUS_STRUCT_NOT_MEMBER(err_anonymous_struct_not_member,CLASS_ERROR, MAP_ERROR, "anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members"),
	ERR_ANONYMOUS_UNION_MEMBER_REDECL(err_anonymous_union_member_redecl,CLASS_ERROR, MAP_ERROR, "member of anonymous union redeclares %0"),
	ERR_ANONYMOUS_UNION_NOT_STATIC(err_anonymous_union_not_static,CLASS_ERROR, MAP_ERROR, "anonymous unions at namespace or global scope must be declared 'static'"),
	ERR_ANONYMOUS_UNION_WITH_STORAGE_SPEC(err_anonymous_union_with_storage_spec,CLASS_ERROR, MAP_ERROR, "anonymous union at class scope must not have a storage specifier"),
	ERR_ARGUMENT_INVALID_RANGE(err_argument_invalid_range,CLASS_ERROR, MAP_ERROR, "argument should be a value from %0 to %1"),
	ERR_ARITHMETIC_NONFRAGILE_INTERFACE(err_arithmetic_nonfragile_interface,CLASS_ERROR, MAP_ERROR, "arithmetic on pointer to interface %0, which is not a constant size in non-fragile ABI"),
	ERR_ARRAY_DESIGNATOR_EMPTY_RANGE(err_array_designator_empty_range,CLASS_ERROR, MAP_ERROR, "array designator range [%0, %1] is empty"),
	ERR_ARRAY_DESIGNATOR_NEGATIVE(err_array_designator_negative,CLASS_ERROR, MAP_ERROR, "array designator value '%0' is negative"),
	ERR_ARRAY_DESIGNATOR_NON_ARRAY(err_array_designator_non_array,CLASS_ERROR, MAP_ERROR, "array designator cannot initialize non-array type %0"),
	ERR_ARRAY_DESIGNATOR_TOO_LARGE(err_array_designator_too_large,CLASS_ERROR, MAP_ERROR, "array designator index (%0) exceeds array bounds (%1)"),
	ERR_ARRAY_INIT_LIST_REQUIRED(err_array_init_list_required,CLASS_ERROR, MAP_ERROR, "initialization with '{...}' expected for array"),
	ERR_ARRAY_NEW_NEEDS_SIZE(err_array_new_needs_size,CLASS_ERROR, MAP_ERROR, "array size must be specified in new expressions"),
	ERR_ARRAY_SIZE_NON_INT(err_array_size_non_int,CLASS_ERROR, MAP_ERROR, "size of array has non-integer type %0"),
	ERR_ARRAY_SIZE_NOT_INTEGRAL(err_array_size_not_integral,CLASS_ERROR, MAP_ERROR, "array size expression must have integral or enumerated type, not %0"),
	ERR_ARRAY_STAR_OUTSIDE_PROTOTYPE(err_array_star_outside_prototype,CLASS_ERROR, MAP_ERROR, "star modifier used outside of function prototype"),
	ERR_AS_QUALIFIED_AUTO_DECL(err_as_qualified_auto_decl,CLASS_ERROR, MAP_ERROR, "automatic variable qualified with an address space"),
	ERR_ASM_INVALID_INPUT_CONSTRAINT(err_asm_invalid_input_constraint,CLASS_ERROR, MAP_ERROR, "invalid input constraint '%0' in asm"),
	ERR_ASM_INVALID_LVALUE_IN_INPUT(err_asm_invalid_lvalue_in_input,CLASS_ERROR, MAP_ERROR, "invalid lvalue in asm input for constraint '%0'"),
	ERR_ASM_INVALID_LVALUE_IN_OUTPUT(err_asm_invalid_lvalue_in_output,CLASS_ERROR, MAP_ERROR, "invalid lvalue in asm output"),
	ERR_ASM_INVALID_OUTPUT_CONSTRAINT(err_asm_invalid_output_constraint,CLASS_ERROR, MAP_ERROR, "invalid output constraint '%0' in asm"),
	ERR_ASM_INVALID_TYPE_IN_INPUT(err_asm_invalid_type_in_input,CLASS_ERROR, MAP_ERROR, "invalid type %0 in asm input for constraint '%1'"),
	ERR_ASM_TYING_INCOMPATIBLE_TYPES(err_asm_tying_incompatible_types,CLASS_ERROR, MAP_ERROR, "unsupported inline asm: input with type %0 matching output with type %1"),
	ERR_ASM_UNKNOWN_REGISTER_NAME(err_asm_unknown_register_name,CLASS_ERROR, MAP_ERROR, "unknown register asmName '%0' in asm"),
	ERR_ASM_WIDE_CHARACTER(err_asm_wide_character,CLASS_ERROR, MAP_ERROR, "wide string is invalid in 'asm'"),
	ERR_AT_LEAST_ONE_INITIALIZER_NEEDED_TO_SIZE_ARRAY(err_at_least_one_initializer_needed_to_size_array,CLASS_ERROR, MAP_ERROR, "at least one initializer value required to size array"),
	ERR_ATDEF_NONFRAGILE_INTERFACE(err_atdef_nonfragile_interface,CLASS_ERROR, MAP_ERROR, "invalid application of @defs in non-fragile ABI"),
	ERR_ATOMIC_BUILTIN_MUST_BE_POINTER(err_atomic_builtin_must_be_pointer,CLASS_ERROR, MAP_ERROR, "first argument to atomic builtin must be a pointer (%0 invalid)"),
	ERR_ATOMIC_BUILTIN_MUST_BE_POINTER_INTPTR(err_atomic_builtin_must_be_pointer_intptr,CLASS_ERROR, MAP_ERROR, "first argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)"),
	ERR_ATOMIC_BUILTIN_POINTER_SIZE(err_atomic_builtin_pointer_size,CLASS_ERROR, MAP_ERROR, "first argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)"),
	ERR_ATTR_WRONG_DECL(err_attr_wrong_decl,CLASS_ERROR, MAP_ERROR, "'%0' attribute invalid on this declaration, requires typedef or value"),
	ERR_ATTRIBUTE_ADDRESS_MULTIPLE_QUALIFIERS(err_attribute_address_multiple_qualifiers,CLASS_ERROR, MAP_ERROR, "multiple address spaces specified for type"),
	ERR_ATTRIBUTE_ADDRESS_SPACE_NEGATIVE(err_attribute_address_space_negative,CLASS_ERROR, MAP_ERROR, "address space is negative"),
	ERR_ATTRIBUTE_ADDRESS_SPACE_NOT_INT(err_attribute_address_space_not_int,CLASS_ERROR, MAP_ERROR, "address space attribute requires an integer constant"),
	ERR_ATTRIBUTE_ADDRESS_SPACE_TOO_HIGH(err_attribute_address_space_too_high,CLASS_ERROR, MAP_ERROR, "address space is larger than the maximum supported (%0)"),
	ERR_ATTRIBUTE_ALIGNED_NOT_POWER_OF_TWO(err_attribute_aligned_not_power_of_two,CLASS_ERROR, MAP_ERROR, "requested alignment is not a power of 2"),
	ERR_ATTRIBUTE_ARGUMENT_N_NOT_INT(err_attribute_argument_n_not_int,CLASS_ERROR, MAP_ERROR, "'%0' attribute requires parameter %1 to be an integer constant"),
	ERR_ATTRIBUTE_ARGUMENT_N_NOT_STRING(err_attribute_argument_n_not_string,CLASS_ERROR, MAP_ERROR, "'%0' attribute requires parameter %1 to be a string"),
	ERR_ATTRIBUTE_ARGUMENT_NOT_INT(err_attribute_argument_not_int,CLASS_ERROR, MAP_ERROR, "'%0' attribute requires integer constant"),
	ERR_ATTRIBUTE_ARGUMENT_OUT_OF_BOUNDS(err_attribute_argument_out_of_bounds,CLASS_ERROR, MAP_ERROR, "'%0' attribute parameter %1 is out of bounds"),
	ERR_ATTRIBUTE_CAN_BE_APPLIED_ONLY_TO_SYMBOL_DECLARATION(err_attribute_can_be_applied_only_to_symbol_declaration,CLASS_ERROR, MAP_ERROR, "%0 attribute can be applied only to symbol declaration"),
	ERR_ATTRIBUTE_CLEANUP_ARG_NOT_FOUND(err_attribute_cleanup_arg_not_found,CLASS_ERROR, MAP_ERROR, "'cleanup' argument %0 not found"),
	ERR_ATTRIBUTE_CLEANUP_ARG_NOT_FUNCTION(err_attribute_cleanup_arg_not_function,CLASS_ERROR, MAP_ERROR, "'cleanup' argument %0 is not a function"),
	ERR_ATTRIBUTE_CLEANUP_FUNC_ARG_INCOMPATIBLE_TYPE(err_attribute_cleanup_func_arg_incompatible_type,CLASS_ERROR, MAP_ERROR, "'cleanup' function %0 parameter has type %1 which is incompatible with type %2"),
	ERR_ATTRIBUTE_CLEANUP_FUNC_MUST_TAKE_ONE_ARG(err_attribute_cleanup_func_must_take_one_arg,CLASS_ERROR, MAP_ERROR, "'cleanup' function %0 must take 1 parameter"),
	ERR_ATTRIBUTE_IBOUTLET(err_attribute_iboutlet,CLASS_ERROR, MAP_ERROR, "'iboutlet' attribute can only be applied to instance variables or properties"),
	ERR_ATTRIBUTE_INVALID_SIZE(err_attribute_invalid_size,CLASS_ERROR, MAP_ERROR, "vector size not an integral multiple of component size"),
	ERR_ATTRIBUTE_INVALID_VECTOR_TYPE(err_attribute_invalid_vector_type,CLASS_ERROR, MAP_ERROR, "invalid vector type %0"),
	ERR_ATTRIBUTE_MISSING_PARAMETER_NAME(err_attribute_missing_parameter_name,CLASS_ERROR, MAP_ERROR, "attribute requires unquoted parameter"),
	ERR_ATTRIBUTE_MULTIPLE_OBJC_GC(err_attribute_multiple_objc_gc,CLASS_ERROR, MAP_ERROR, "multiple garbage collection attributes specified for type"),
	ERR_ATTRIBUTE_NOT_STRING(err_attribute_not_string,CLASS_ERROR, MAP_ERROR, "argument to %0 attribute was not a string literal"),
	ERR_ATTRIBUTE_OVERLOADABLE_MISSING(err_attribute_overloadable_missing,CLASS_ERROR, MAP_ERROR, "%select{overloaded function|redeclaration of}0 %1 must have the 'overloadable' attribute"),
	ERR_ATTRIBUTE_OVERLOADABLE_NO_PROTOTYPE(err_attribute_overloadable_no_prototype,CLASS_ERROR, MAP_ERROR, "'overloadable' function %0 must have a prototype"),
	ERR_ATTRIBUTE_OVERLOADABLE_NOT_FUNCTION(err_attribute_overloadable_not_function,CLASS_ERROR, MAP_ERROR, "'overloadable' attribute can only be applied to a function"),
	ERR_ATTRIBUTE_REGPARM_INVALID_NUMBER(err_attribute_regparm_invalid_number,CLASS_ERROR, MAP_ERROR, "'regparm' parameter must be between 0 and %0 inclusive"),
	ERR_ATTRIBUTE_REGPARM_WRONG_PLATFORM(err_attribute_regparm_wrong_platform,CLASS_ERROR, MAP_ERROR, "'regparm' is not valid on this platform"),
	ERR_ATTRIBUTE_REQUIRES_OBJC_INTERFACE(err_attribute_requires_objc_interface,CLASS_ERROR, MAP_ERROR, "attribute may only be applied to an Objective-C interface"),
	ERR_ATTRIBUTE_SECTION_INVALID_FOR_TARGET(err_attribute_section_invalid_for_target,CLASS_ERROR, MAP_ERROR, "argument to 'section' attribute is not valid for this target: %0"),
	ERR_ATTRIBUTE_SENTINEL_LESS_THAN_ZERO(err_attribute_sentinel_less_than_zero,CLASS_ERROR, MAP_ERROR, "'sentinel' parameter 1 less than zero"),
	ERR_ATTRIBUTE_SENTINEL_NOT_ZERO_OR_ONE(err_attribute_sentinel_not_zero_or_one,CLASS_ERROR, MAP_ERROR, "'sentinel' parameter 2 not 0 or 1"),
	ERR_ATTRIBUTE_WEAK_STATIC(err_attribute_weak_static,CLASS_ERROR, MAP_ERROR, "weak declaration of '%0' must be public"),
	ERR_ATTRIBUTE_WRONG_NUMBER_ARGUMENTS(err_attribute_wrong_number_arguments,CLASS_ERROR, MAP_ERROR, "attribute requires %0 argument(s)"),
	ERR_ATTRIBUTE_ZERO_SIZE(err_attribute_zero_size,CLASS_ERROR, MAP_ERROR, "zero vector size"),
	ERR_ATTRIBUTES_ARE_NOT_COMPATIBLE(err_attributes_are_not_compatible,CLASS_ERROR, MAP_ERROR, "%0 and %1 attributes are not compatible"),
	ERR_AUTO_NOT_ALLOWED(err_auto_not_allowed,CLASS_ERROR, MAP_ERROR, "'auto' not allowed in %select{function prototype|struct member|union member|class member|exception declaration|template parameter|block literal}0"),
	ERR_AUTO_VAR_REQUIRES_INIT(err_auto_var_requires_init,CLASS_ERROR, MAP_ERROR, "declaration of variable %0 with type %1 requires an initializer"),
	ERR_AUTO_VARIABLE_CANNOT_APPEAR_IN_OWN_INITIALIZER(err_auto_variable_cannot_appear_in_own_initializer,CLASS_ERROR, MAP_ERROR, "variable %0 declared with 'auto' type cannot appear in its own initializer"),
	ERR_BAD_CONST_CAST_DEST(err_bad_const_cast_dest,CLASS_ERROR, MAP_ERROR, "%select{const_cast||||C-style cast|functional-style cast}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member"),
	ERR_BAD_CXX_CAST_CONST_AWAY(err_bad_cxx_cast_const_away,CLASS_ERROR, MAP_ERROR, "%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 casts away constness"),
	ERR_BAD_CXX_CAST_GENERIC(err_bad_cxx_cast_generic,CLASS_ERROR, MAP_ERROR, "%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 is not allowed"),
	ERR_BAD_CXX_CAST_RVALUE(err_bad_cxx_cast_rvalue,CLASS_ERROR, MAP_ERROR, "%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from rvalue to reference type %2"),
	ERR_BAD_DYNAMIC_CAST_INCOMPLETE(err_bad_dynamic_cast_incomplete,CLASS_ERROR, MAP_ERROR, "%0 is an incomplete type"),
	ERR_BAD_DYNAMIC_CAST_NOT_CLASS(err_bad_dynamic_cast_not_class,CLASS_ERROR, MAP_ERROR, "%0 is not a class"),
	ERR_BAD_DYNAMIC_CAST_NOT_POLYMORPHIC(err_bad_dynamic_cast_not_polymorphic,CLASS_ERROR, MAP_ERROR, "%0 is not polymorphic"),
	ERR_BAD_DYNAMIC_CAST_NOT_PTR(err_bad_dynamic_cast_not_ptr,CLASS_ERROR, MAP_ERROR, "%0 is not a pointer"),
	ERR_BAD_DYNAMIC_CAST_NOT_REF_OR_PTR(err_bad_dynamic_cast_not_ref_or_ptr,CLASS_ERROR, MAP_ERROR, "%0 is not a reference or pointer"),
	ERR_BAD_LANGUAGE(err_bad_language,CLASS_ERROR, MAP_ERROR, "unknown linkage language"),
	ERR_BAD_LVALUE_TO_RVALUE_CAST(err_bad_lvalue_to_rvalue_cast,CLASS_ERROR, MAP_ERROR, "cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible"),
	ERR_BAD_MEMPTR_LHS(err_bad_memptr_lhs,CLASS_ERROR, MAP_ERROR, "left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2"),
	ERR_BAD_MEMPTR_RHS(err_bad_memptr_rhs,CLASS_ERROR, MAP_ERROR, "right hand operand to %0 has non pointer-to-member type %1"),
	ERR_BAD_NEW_TYPE(err_bad_new_type,CLASS_ERROR, MAP_ERROR, "cannot allocate %select{function|reference}1 type %0 with new"),
	ERR_BAD_RECEIVER_TYPE(err_bad_receiver_type,CLASS_ERROR, MAP_ERROR, "bad receiver type %0"),
	ERR_BAD_REINTERPRET_CAST_SMALL_INT(err_bad_reinterpret_cast_small_int,CLASS_ERROR, MAP_ERROR, "cast from pointer to smaller type %2 loses information"),
	ERR_BAD_STATIC_CAST_MEMBER_POINTER_NONMP(err_bad_static_cast_member_pointer_nonmp,CLASS_ERROR, MAP_ERROR, "cannot cast from type %1 to member pointer type %2"),
	ERR_BAD_STATIC_CAST_POINTER_NONPOINTER(err_bad_static_cast_pointer_nonpointer,CLASS_ERROR, MAP_ERROR, "cannot cast from type %1 to pointer type %2"),
	ERR_BAD_VARIABLE_NAME(err_bad_variable_name,CLASS_ERROR, MAP_ERROR, "'%0' cannot be the asmName of a variable or data member"),
	ERR_BASE_CLAUSE_ON_UNION(err_base_clause_on_union,CLASS_ERROR, MAP_ERROR, "unions cannot have base classes"),
	ERR_BASE_INIT_DIRECT_AND_VIRTUAL(err_base_init_direct_and_virtual,CLASS_ERROR, MAP_ERROR, "base class initializer %0 names both a direct base class and an inherited virtual base class"),
	ERR_BASE_INIT_DOES_NOT_NAME_CLASS(err_base_init_does_not_name_class,CLASS_ERROR, MAP_ERROR, "constructor initializer %0 does not asmName a class"),
	ERR_BASE_MUST_BE_CLASS(err_base_must_be_class,CLASS_ERROR, MAP_ERROR, "base specifier must asmName a class"),
	ERR_BITFIELD_HAS_NEGATIVE_WIDTH(err_bitfield_has_negative_width,CLASS_ERROR, MAP_ERROR, "bit-field %0 has negative width (%1)"),
	ERR_BITFIELD_HAS_ZERO_WIDTH(err_bitfield_has_zero_width,CLASS_ERROR, MAP_ERROR, "named bit-field %0 has zero width"),
	ERR_BITFIELD_WIDTH_EXCEEDS_TYPE_SIZE(err_bitfield_width_exceeds_type_size,CLASS_ERROR, MAP_ERROR, "size of bit-field %0 exceeds size of its type (%1 bits)"),
	ERR_BLOCK_DECL_REF_NOT_MODIFIABLE_LVALUE(err_block_decl_ref_not_modifiable_lvalue,CLASS_ERROR, MAP_ERROR, "variable is not assignable (missing __block type specifier)"),
	ERR_BLOCK_EXTERN_CANT_INIT(err_block_extern_cant_init,CLASS_ERROR, MAP_ERROR, "'extern' variable cannot have an initializer"),
	ERR_BLOCK_ON_NONLOCAL(err_block_on_nonlocal,CLASS_ERROR, MAP_ERROR, "__block attribute not allowed, only allowed on local variables"),
	ERR_BLOCK_ON_VM(err_block_on_vm,CLASS_ERROR, MAP_ERROR, "__block attribute not allowed on declaration with a variably modified type"),
	ERR_BLOCK_RETURN_MISSING_EXPR(err_block_return_missing_expr,CLASS_ERROR, MAP_ERROR, "non-void block should return a value"),
	ERR_BLOCK_RETURNS_ARRAY(err_block_returns_array,CLASS_ERROR, MAP_ERROR, "block declared as returning an array"),
	ERR_BLOCK_WITH_RETURN_TYPE_REQUIRES_ARGS(err_block_with_return_type_requires_args,CLASS_ERROR, MAP_ERROR, "block with explicit return type requires argument list"),
	ERR_BLOCKS_DISABLE(err_blocks_disable,CLASS_ERROR, MAP_ERROR, "blocks support disabled - compile with -fblocks or pick a deployment target that supports them"),
	ERR_BREAK_NOT_IN_LOOP_OR_SWITCH(err_break_not_in_loop_or_switch,CLASS_ERROR, MAP_ERROR, "'break' statement not in loop or switch statement"),
	ERR_BUILTIN_DEFINITION(err_builtin_definition,CLASS_ERROR, MAP_ERROR, "definition of builtin function %0"),
	ERR_BUILTIN_DIRECT_INIT_MORE_THAN_ONE_ARG(err_builtin_direct_init_more_than_one_arg,CLASS_ERROR, MAP_ERROR, "initializer of a builtin type can only take one argument"),
	ERR_BUILTIN_FUNC_CAST_MORE_THAN_ONE_ARG(err_builtin_func_cast_more_than_one_arg,CLASS_ERROR, MAP_ERROR, "function-style cast to a builtin type can only take one argument"),
	ERR_BUILTIN_LONGJMP_INVALID_VAL(err_builtin_longjmp_invalid_val,CLASS_ERROR, MAP_ERROR, "argument to __builtin_longjmp must be a constant 1"),
	ERR_CALL_FUNCTION_INCOMPLETE_RETURN(err_call_function_incomplete_return, CLASS_ERROR, MAP_ERROR, "calling %0 with incomplete return type %1"),
	ERR_CALL_INCOMPLETE_ARGUMENT(err_call_incomplete_argument,CLASS_ERROR, MAP_ERROR, "argument type %0 is incomplete"),
	ERR_CALL_INCOMPLETE_RETURN(err_call_incomplete_return,CLASS_ERROR, MAP_ERROR, "return type of called function (%0) is incomplete"),
	ERR_CANNOT_DETERMINE_DECLARED_TYPE_OF_OVERLOADED_FUNCTION(err_cannot_determine_declared_type_of_overloaded_function,CLASS_ERROR, MAP_ERROR, "can't determine the declared type of an overloaded function"),
	ERR_CANNOT_FORM_POINTER_TO_MEMBER_OF_REFERENCE_TYPE(err_cannot_form_pointer_to_member_of_reference_type,CLASS_ERROR, MAP_ERROR, "cannot form a pointer-to-member to member %0 of reference type %1"),
	ERR_CANNOT_INITIALIZE_DECL(err_cannot_initialize_decl,CLASS_ERROR, MAP_ERROR, "cannot initialize %0 with an %select{rvalue|lvalue}1 of type %2"),
	ERR_CANNOT_INITIALIZE_DECL_NONAME(err_cannot_initialize_decl_noname,CLASS_ERROR, MAP_ERROR, "cannot initialize a value of type %0 with an %select{rvalue|lvalue}1 of type %2"),
	ERR_CANNOT_PASS_OBJC_INTERFACE_TO_VARARG(err_cannot_pass_objc_interface_to_vararg,CLASS_ERROR, MAP_ERROR, "cannot pass object with interface type %0 by-value through variadic %select{function|block|method}1"),
	ERR_CASE_NOT_IN_SWITCH(err_case_not_in_switch,CLASS_ERROR, MAP_ERROR, "'case' statement not in switch statement"),
	ERR_CAST_POINTER_FROM_NON_POINTER_INT(err_cast_pointer_from_non_pointer_int,CLASS_ERROR, MAP_ERROR, "operand of type %0 cannot be cast to a pointer type"),
	ERR_CAST_POINTER_TO_NON_POINTER_INT(err_cast_pointer_to_non_pointer_int,CLASS_ERROR, MAP_ERROR, "pointer cannot be cast to type %0"),
	ERR_CAST_SELECTOR_EXPR(err_cast_selector_expr,CLASS_ERROR, MAP_ERROR, "cannot type cast @selector expression"),
	ERR_CATCH_INCOMPLETE(err_catch_incomplete,CLASS_ERROR, MAP_ERROR, "cannot catch incomplete type %0"),
	ERR_CATCH_INCOMPLETE_PTR(err_catch_incomplete_ptr,CLASS_ERROR, MAP_ERROR, "cannot catch pointer to incomplete type %0"),
	ERR_CATCH_INCOMPLETE_REF(err_catch_incomplete_ref,CLASS_ERROR, MAP_ERROR, "cannot catch reference to incomplete type %0"),
	ERR_CATCH_PARAM_NOT_OBJC_TYPE(err_catch_param_not_objc_type,CLASS_ERROR, MAP_ERROR, "@catch parameter is not a pointer to an interface type"),
	ERR_CATCH_RVALUE_REF(err_catch_rvalue_ref,CLASS_ERROR, MAP_ERROR, "cannot catch exceptions by rvalue reference"),
	ERR_CFSTRING_LITERAL_NOT_STRING_CONSTANT(err_cfstring_literal_not_string_constant,CLASS_ERROR, MAP_ERROR, "CFString literal is not a string constant"),
	ERR_CLASS_REDECLARED_WITH_DIFFERENT_ACCESS(err_class_redeclared_with_different_access,CLASS_ERROR, MAP_ERROR, "%0 redeclared with '%1' access"),
	ERR_COLLECTION_EXPR_TYPE(err_collection_expr_type,CLASS_ERROR, MAP_ERROR, "collection expression type %0 is not a valid object"),
	ERR_CONDITIONAL_AMBIGUOUS(err_conditional_ambiguous,CLASS_ERROR, MAP_ERROR, "conditional expression is ambiguous; %0 can be converted to %1 and vice versa"),
	ERR_CONDITIONAL_AMBIGUOUS_OVL(err_conditional_ambiguous_ovl,CLASS_ERROR, MAP_ERROR, "conditional expression is ambiguous; %0 and %1 can be converted to several common types"),
	ERR_CONDITIONAL_VOID_NONVOID(err_conditional_void_nonvoid,CLASS_ERROR, MAP_ERROR, "%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0"),
	ERR_CONFLICTING_ALIASING_TYPE(err_conflicting_aliasing_type,CLASS_ERROR, MAP_ERROR, "conflicting types for alias %0"),
	ERR_CONFLICTING_IVAR_BITWIDTH(err_conflicting_ivar_bitwidth,CLASS_ERROR, MAP_ERROR, "instance variable %0 has conflicting bitfield width"),
	ERR_CONFLICTING_IVAR_NAME(err_conflicting_ivar_name,CLASS_ERROR, MAP_ERROR, "conflicting instance variable names: %0 vs %1"),
	ERR_CONFLICTING_IVAR_TYPE(err_conflicting_ivar_type,CLASS_ERROR, MAP_ERROR, "instance variable %0 has conflicting type: %1 vs %2"),
	ERR_CONFLICTING_SUPER_CLASS(err_conflicting_super_class,CLASS_ERROR, MAP_ERROR, "conflicting super class asmName %0"),
	ERR_CONFLICTING_TYPES(err_conflicting_types,CLASS_ERROR, MAP_ERROR, "conflicting types for %0"),
	ERR_CONST_VAR_REQUIRES_INIT(err_const_var_requires_init,CLASS_ERROR, MAP_ERROR, "declaration of const variable '%0' requires an initializer"),
	ERR_CONSTRUCTOR_BYVALUE_ARG(err_constructor_byvalue_arg,CLASS_ERROR, MAP_ERROR, "copy constructor must pass its first argument by reference"),
	ERR_CONSTRUCTOR_CANNOT_BE(err_constructor_cannot_be,CLASS_ERROR, MAP_ERROR, "constructor cannot be declared '%0'"),
	ERR_CONSTRUCTOR_REDECLARED(err_constructor_redeclared,CLASS_ERROR, MAP_ERROR, "constructor cannot be redeclared"),
	ERR_CONSTRUCTOR_RETURN_TYPE(err_constructor_return_type,CLASS_ERROR, MAP_ERROR, "constructor cannot have a return type"),
	ERR_CONTINUATION_CLASS(err_continuation_class,CLASS_ERROR, MAP_ERROR, "continuation class has no primary class"),
	ERR_CONTINUE_NOT_IN_LOOP(err_continue_not_in_loop,CLASS_ERROR, MAP_ERROR, "'continue' statement not in loop statement"),
	ERR_CONV_FUNCTION_NOT_MEMBER(err_conv_function_not_member,CLASS_ERROR, MAP_ERROR, "conversion function must be a non-static member function"),
	ERR_CONV_FUNCTION_REDECLARED(err_conv_function_redeclared,CLASS_ERROR, MAP_ERROR, "conversion function cannot be redeclared"),
	ERR_CONV_FUNCTION_RETURN_TYPE(err_conv_function_return_type,CLASS_ERROR, MAP_ERROR, "conversion function cannot have a return type"),
	ERR_CONV_FUNCTION_TO_ARRAY(err_conv_function_to_array,CLASS_ERROR, MAP_ERROR, "conversion function cannot convert to an array type"),
	ERR_CONV_FUNCTION_TO_FUNCTION(err_conv_function_to_function,CLASS_ERROR, MAP_ERROR, "conversion function cannot convert to a function type"),
	ERR_CONV_FUNCTION_VARIADIC(err_conv_function_variadic,CLASS_ERROR, MAP_ERROR, "conversion function cannot be variadic"),
	ERR_CONV_FUNCTION_WITH_PARAMS(err_conv_function_with_params,CLASS_ERROR, MAP_ERROR, "conversion function cannot have any parameters"),
	ERR_CONV_TO_INACCESSIBLE_BASE(err_conv_to_inaccessible_base,CLASS_ERROR, MAP_ERROR, "conversion from %0 to inaccessible base class %1"),
	ERR_COVARIANT_RETURN_AMBIGUOUS_DERIVED_TO_BASE_CONV(err_covariant_return_ambiguous_derived_to_base_conv,CLASS_ERROR, MAP_ERROR, "return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)"),
	ERR_COVARIANT_RETURN_INACCESSIBLE_BASE(err_covariant_return_inaccessible_base,CLASS_ERROR, MAP_ERROR, "return type of virtual function %2 is not covariant with the return type of the function it overrides (conversion from %0 to inaccessible base class %1)"),
	ERR_COVARIANT_RETURN_NOT_DERIVED(err_covariant_return_not_derived,CLASS_ERROR, MAP_ERROR, "return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)"),
	ERR_COVARIANT_RETURN_TYPE_CLASS_TYPE_MORE_QUALIFIED(err_covariant_return_type_class_type_more_qualified,CLASS_ERROR, MAP_ERROR, "return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2"),
	ERR_COVARIANT_RETURN_TYPE_DIFFERENT_QUALIFICATIONS(err_covariant_return_type_different_qualifications,CLASS_ERROR, MAP_ERROR, "return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)"),
	ERR_DECIMAL_UNSUPPORTED(err_decimal_unsupported,CLASS_ERROR, MAP_ERROR, "GNU decimal type extension not supported"),
	ERR_DECLARATOR_NEED_IDENT(err_declarator_need_ident,CLASS_ERROR, MAP_ERROR, "declarator requires an identifier"),
	ERR_DECREMENT_BOOL(err_decrement_bool,CLASS_ERROR, MAP_ERROR, "cannot decrement expression of type bool"),
	ERR_DEFAULT_ARG_IN_PARTIAL_SPEC(err_default_arg_in_partial_spec,CLASS_ERROR, MAP_ERROR, "default template argument in a class template partial specialization"),
	ERR_DEFAULT_NOT_IN_SWITCH(err_default_not_in_switch,CLASS_ERROR, MAP_ERROR, "'default' statement not in switch statement"),
	ERR_DEFINING_DEFAULT_CTOR(err_defining_default_ctor,CLASS_ERROR, MAP_ERROR, "cannot define the implicit default constructor for %0, because %select{base class|member}1 %2 does not have any default constructor"),
	ERR_DELETE_OPERAND(err_delete_operand,CLASS_ERROR, MAP_ERROR, "cannot delete expression of type %0"),
	ERR_DELETED_DECL_NOT_FIRST(err_deleted_decl_not_first,CLASS_ERROR, MAP_ERROR, "deleted definition must be first declaration"),
	ERR_DELETED_FUNCTION_USE(err_deleted_function_use,CLASS_ERROR, MAP_ERROR, "attempt to use a deleted function"),
	ERR_DELETED_NON_FUNCTION(err_deleted_non_function,CLASS_ERROR, MAP_ERROR, "only functions can have deleted definitions"),
	ERR_DEPENDENT_NON_TYPE_ARG_IN_PARTIAL_SPEC(err_dependent_non_type_arg_in_partial_spec,CLASS_ERROR, MAP_ERROR, "non-type template argument depends on a template parameter of the partial specialization"),
	ERR_DEPENDENT_TYPED_NON_TYPE_ARG_IN_PARTIAL_SPEC(err_dependent_typed_non_type_arg_in_partial_spec,CLASS_ERROR, MAP_ERROR, "non-type template argument specializes a template parameter with dependent type %0"),
	ERR_DESIGNATOR_FOR_SCALAR_INIT(err_designator_for_scalar_init,CLASS_ERROR, MAP_ERROR, "designator in initializer for scalar type %0"),
	ERR_DESIGNATOR_INTO_FLEXIBLE_ARRAY_MEMBER(err_designator_into_flexible_array_member,CLASS_ERROR, MAP_ERROR, "designator into flexible array member subobject"),
	ERR_DESTRUCTOR_CANNOT_BE(err_destructor_cannot_be,CLASS_ERROR, MAP_ERROR, "destructor cannot be declared '%0'"),
	ERR_DESTRUCTOR_NAME(err_destructor_name,CLASS_ERROR, MAP_ERROR, "expected the class asmName after '~' to asmName the enclosing class"),
	ERR_DESTRUCTOR_NOT_MEMBER(err_destructor_not_member,CLASS_ERROR, MAP_ERROR, "destructor must be a non-static member function"),
	ERR_DESTRUCTOR_REDECLARED(err_destructor_redeclared,CLASS_ERROR, MAP_ERROR, "destructor cannot be redeclared"),
	ERR_DESTRUCTOR_RETURN_TYPE(err_destructor_return_type,CLASS_ERROR, MAP_ERROR, "destructor cannot have a return type"),
	ERR_DESTRUCTOR_TYPEDEF_NAME(err_destructor_typedef_name,CLASS_ERROR, MAP_ERROR, "destructor cannot be declared using a typedef %0 of the class asmName"),
	ERR_DESTRUCTOR_VARIADIC(err_destructor_variadic,CLASS_ERROR, MAP_ERROR, "destructor cannot be variadic"),
	ERR_DESTRUCTOR_WITH_PARAMS(err_destructor_with_params,CLASS_ERROR, MAP_ERROR, "destructor cannot have any parameters"),
	ERR_DIFFERENT_RETURN_TYPE_FOR_OVERRIDING_VIRTUAL_FUNCTION(err_different_return_type_for_overriding_virtual_function,CLASS_ERROR, MAP_ERROR, "virtual function %0 has a different return type (%1) than the function it overrides (which has return type %2)"),
	ERR_DISTANT_EXCEPTION_SPEC(err_distant_exception_spec,CLASS_ERROR, MAP_ERROR, "exception specifications are not allowed beyond a single level of indirection"),
	ERR_DOWNCAST_FROM_INACCESSIBLE_BASE(err_downcast_from_inaccessible_base,CLASS_ERROR, MAP_ERROR, "cannot cast %1 to %0 due to inaccessible conversion path"),
	ERR_DUP_IMPLEMENTATION_CATEGORY(err_dup_implementation_category,CLASS_ERROR, MAP_ERROR, "reimplementation of category %1 for class %0"),
	ERR_DUP_IMPLEMENTATION_CLASS(err_dup_implementation_class,CLASS_ERROR, MAP_ERROR, "reimplementation of class %0"),
	ERR_DUPLICATE_BASE_CLASS(err_duplicate_base_class,CLASS_ERROR, MAP_ERROR, "base class %0 specified more than once as a direct base class"),
	ERR_DUPLICATE_CASE(err_duplicate_case,CLASS_ERROR, MAP_ERROR, "duplicate case value '%0'"),
	ERR_DUPLICATE_CLASS_DEF(err_duplicate_class_def,CLASS_ERROR, MAP_ERROR, "duplicate interface definition for class %0"),
	ERR_DUPLICATE_MEMBER(err_duplicate_member,CLASS_ERROR, MAP_ERROR, "duplicate member %0"),
	ERR_DUPLICATE_METHOD_DECL(err_duplicate_method_decl,CLASS_ERROR, MAP_ERROR, "duplicate declaration of method %0"),
	ERR_EARLY_CATCH_ALL(err_early_catch_all,CLASS_ERROR, MAP_ERROR, "catch-all handler must come last"),
	ERR_ELLIPSIS_FIRST_ARG(err_ellipsis_first_arg,CLASS_ERROR, MAP_ERROR, "ISO C requires a named argument before '...'"),
	ERR_EMPTY_SCALAR_INITIALIZER(err_empty_scalar_initializer,CLASS_ERROR, MAP_ERROR, "scalar initializer cannot be empty"),
	ERR_EXCEPTION_SPEC_IN_TYPEDEF(err_exception_spec_in_typedef,CLASS_ERROR, MAP_ERROR, "exception specifications are not allowed in typedefs"),
	ERR_EXCESS_INITIALIZERS(err_excess_initializers,CLASS_ERROR, MAP_ERROR, "excess elements in %select{array|vector|scalar|union|struct}0 initializer"),
	ERR_EXCESS_INITIALIZERS_IN_CHAR_ARRAY_INITIALIZER(err_excess_initializers_in_char_array_initializer,CLASS_ERROR, MAP_ERROR, "excess elements in char array initializer"),
	ERR_EXPECTED_BLOCK_LBRACE(err_expected_block_lbrace,CLASS_ERROR, MAP_ERROR, "expected '{' in block literal"),
	ERR_EXPECTED_CLASS_OR_NAMESPACE(err_expected_class_or_namespace,CLASS_ERROR, MAP_ERROR, "expected a class or namespace"),
	ERR_EXPLICIT_INSTANTIATION_DUPLICATE(err_explicit_instantiation_duplicate,CLASS_ERROR, MAP_ERROR, "duplicate explicit instantiation of %0"),
	ERR_EXPLICIT_INSTANTIATION_ENUM(err_explicit_instantiation_enum,CLASS_ERROR, MAP_ERROR, "explicit instantiation of enumeration type %0"),
	ERR_EXPLICIT_INSTANTIATION_NONTEMPLATE_TYPE(err_explicit_instantiation_nontemplate_type,CLASS_ERROR, MAP_ERROR, "explicit instantiation of non-templated type %0"),
	ERR_EXPLICIT_INSTANTIATION_OUT_OF_SCOPE(err_explicit_instantiation_out_of_scope,CLASS_ERROR, MAP_ERROR, "explicit instantiation of %0 not in a namespace enclosing %1"),
	ERR_EXPLICIT_NON_FUNCTION(err_explicit_non_function,CLASS_ERROR, MAP_ERROR, "'explicit' can only appear on non-static member functions"),
	ERR_EXPR_NOT_ICE(err_expr_not_ice,CLASS_ERROR, MAP_ERROR, "expression is not an integer constant expression"),
	ERR_EXT_VECTOR_COMPONENT_EXCEEDS_LENGTH(err_ext_vector_component_exceeds_length,CLASS_ERROR, MAP_ERROR, "vector component access exceeds type %0"),
	ERR_EXT_VECTOR_COMPONENT_NAME_ILLEGAL(err_ext_vector_component_name_illegal,CLASS_ERROR, MAP_ERROR, "illegal vector component asmName '%0'"),
	ERR_EXT_VECTOR_COMPONENT_REQUIRES_EVEN(err_ext_vector_component_requires_even,CLASS_ERROR, MAP_ERROR, "vector component access invalid for odd-sized type %0"),
	ERR_FALLOFF_NONVOID_BLOCK(err_falloff_nonvoid_block,CLASS_ERROR, MAP_ERROR, "control reaches end of non-void block"),
	ERR_FIELD_DECLARED_AS_FUNCTION(err_field_declared_as_function,CLASS_ERROR, MAP_ERROR, "field %0 declared as a function"),
	ERR_FIELD_DESIGNATOR_NON_AGGR(err_field_designator_non_aggr,CLASS_ERROR, MAP_ERROR, "field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1"),
	ERR_FIELD_DESIGNATOR_NONFIELD(err_field_designator_nonfield,CLASS_ERROR, MAP_ERROR, "field designator %0 does not refer to a non-static data member"),
	ERR_FIELD_DESIGNATOR_UNKNOWN(err_field_designator_unknown,CLASS_ERROR, MAP_ERROR, "field designator %0 does not refer to any field in type %1"),
	ERR_FIELD_INCOMPLETE(err_field_incomplete,CLASS_ERROR, MAP_ERROR, "field has incomplete type %0"),
	ERR_FIELD_INSTANTIATES_TO_FUNCTION(err_field_instantiates_to_function,CLASS_ERROR, MAP_ERROR, "data member instantiated with function type %0"),
	ERR_FIRST_ARGUMENT_TO_VA_ARG_NOT_OF_TYPE_VA_LIST(err_first_argument_to_va_arg_not_of_type_va_list,CLASS_ERROR, MAP_ERROR, "first argument to 'va_arg' is of type %0 and not 'va_list'"),
	ERR_FLEXIBLE_ARRAY_EMPTY_STRUCT(err_flexible_array_empty_struct,CLASS_ERROR, MAP_ERROR, "flexible array %0 not allowed in otherwise empty struct"),
	ERR_FLEXIBLE_ARRAY_INIT_NEEDS_BRACES(err_flexible_array_init_needs_braces,CLASS_ERROR, MAP_ERROR, "flexible array requires brace-enclosed initializer"),
	ERR_FLEXIBLE_ARRAY_INIT_NONEMPTY(err_flexible_array_init_nonempty,CLASS_ERROR, MAP_ERROR, "non-empty initialization of flexible array member inside subobject"),
	ERR_FORMAT_ATTRIBUTE_NOT(err_format_attribute_not,CLASS_ERROR, MAP_ERROR, "format argument not %0"),
	ERR_FORMAT_ATTRIBUTE_REQUIRES_VARIADIC(err_format_attribute_requires_variadic,CLASS_ERROR, MAP_ERROR, "format attribute requires variadic function"),
	ERR_FORMAT_ATTRIBUTE_RESULT_NOT(err_format_attribute_result_not,CLASS_ERROR, MAP_ERROR, "function does not return %0"),
	ERR_FORMAT_STRFTIME_THIRD_PARAMETER(err_format_strftime_third_parameter,CLASS_ERROR, MAP_ERROR, "strftime format attribute requires 3rd parameter to be 0"),
	ERR_FORWARD_REF_ENUM(err_forward_ref_enum,CLASS_ERROR, MAP_ERROR, "ISO C++ forbids forward references to 'enum' types"),
	ERR_FRIEND_DECL_DEFINES_CLASS(err_friend_decl_defines_class,CLASS_ERROR, MAP_ERROR, "cannot define a type in a friend declaration"),
	ERR_FRIEND_IS_MEMBER(err_friend_is_member,CLASS_ERROR, MAP_ERROR, "friends cannot be members of the declaring class"),
	ERR_FUNC_DEF_INCOMPLETE_RESULT(err_func_def_incomplete_result,CLASS_ERROR, MAP_ERROR, "incomplete result type %0 in function definition"),
	ERR_FUNC_RETURNING_ARRAY_FUNCTION(err_func_returning_array_function,CLASS_ERROR, MAP_ERROR, "function cannot return array or function type %0"),
	ERR_GOTO_IN_BLOCK(err_goto_in_block,CLASS_ERROR, MAP_ERROR, "goto not allowed in block literal"),
	ERR_GOTO_INTO_PROTECTED_SCOPE(err_goto_into_protected_scope,CLASS_ERROR, MAP_ERROR, "illegal goto into protected scope"),
	ERR_IDENT_LIST_IN_FN_DECLARATION(err_ident_list_in_fn_declaration,CLASS_ERROR, MAP_ERROR, "a parameter list without types is only allowed in a function definition"),
	ERR_ILLEGAL_DECL_ARRAY_INCOMPLETE_TYPE(err_illegal_decl_array_incomplete_type,CLASS_ERROR, MAP_ERROR, "array has incomplete element type %0"),
	ERR_ILLEGAL_DECL_ARRAY_OF_AUTO(err_illegal_decl_array_of_auto,CLASS_ERROR, MAP_ERROR, "'%0' declared as array of 'auto'"),
	ERR_ILLEGAL_DECL_ARRAY_OF_FUNCTIONS(err_illegal_decl_array_of_functions,CLASS_ERROR, MAP_ERROR, "'%0' declared as array of functions"),
	ERR_ILLEGAL_DECL_ARRAY_OF_REFERENCES(err_illegal_decl_array_of_references,CLASS_ERROR, MAP_ERROR, "'%0' declared as array of references"),
	ERR_ILLEGAL_DECL_MEMPOINTER_IN_NONCLASS(err_illegal_decl_mempointer_in_nonclass,CLASS_ERROR, MAP_ERROR, "'%0' does not point into a class"),
	ERR_ILLEGAL_DECL_MEMPOINTER_TO_REFERENCE(err_illegal_decl_mempointer_to_reference,CLASS_ERROR, MAP_ERROR, "'%0' declared as a member pointer to a reference"),
	ERR_ILLEGAL_DECL_MEMPOINTER_TO_VOID(err_illegal_decl_mempointer_to_void,CLASS_ERROR, MAP_ERROR, "'%0' declared as a member pointer to void"),
	ERR_ILLEGAL_DECL_POINTER_TO_REFERENCE(err_illegal_decl_pointer_to_reference,CLASS_ERROR, MAP_ERROR, "'%0' declared as a pointer to a reference"),
	ERR_ILLEGAL_INITIALIZER(err_illegal_initializer,CLASS_ERROR, MAP_ERROR, "illegal initializer (only variables can be initialized)"),
	ERR_ILLEGAL_INITIALIZER_TYPE(err_illegal_initializer_type,CLASS_ERROR, MAP_ERROR, "illegal initializer type %0"),
	ERR_ILLEGAL_QUALIFIERS_ON_CATCH_PARM(err_illegal_qualifiers_on_catch_parm,CLASS_ERROR, MAP_ERROR, "illegal qualifiers on @catch parameter"),
	ERR_ILLEGAL_SUPER_CAST(err_illegal_super_cast,CLASS_ERROR, MAP_ERROR, "cannot cast 'super' (it isn't an expression)"),
	ERR_ILLEGAL_UNION_MEMBER(err_illegal_union_member,CLASS_ERROR, MAP_ERROR, "union member %0 has a non-trivial %select{constructor|copy constructor|copy assignment operator|destructor}1"),
	ERR_IMPLICIT_DECL_REQUIRES_SETJMP(err_implicit_decl_requires_setjmp,CLASS_ERROR, MAP_ERROR, "implicit declaration of '%0' requires inclusion of the header <setjmp.h>"),
	ERR_IMPLICIT_DECL_REQUIRES_STDIO(err_implicit_decl_requires_stdio,CLASS_ERROR, MAP_ERROR, "implicit declaration of '%0' requires inclusion of the header <stdio.h>"),
	ERR_IMPLICIT_EMPTY_INITIALIZER(err_implicit_empty_initializer,CLASS_ERROR, MAP_ERROR, "initializer for aggregate with no elements requires explicit braces"),
	ERR_IMPLICIT_INSTANTIATE_MEMBER_UNDEFINED(err_implicit_instantiate_member_undefined,CLASS_ERROR, MAP_ERROR, "implicit instantiation of undefined member %0"),
	ERR_IMPLICIT_OBJECT_PARAMETER_INIT(err_implicit_object_parameter_init,CLASS_ERROR, MAP_ERROR, "cannot initialize object parameter of type %0 with an expression of type %1"),
	ERR_IMPLICIT_POINTER_ADDRESS_SPACE_CAST(err_implicit_pointer_address_space_cast,CLASS_ERROR, MAP_ERROR, "illegal implicit cast between two pointers with different address spaces"),
	ERR_IN_CLASS_INITIALIZER_NON_CONSTANT(err_in_class_initializer_non_constant,CLASS_ERROR, MAP_ERROR, "in-class initializer is not an integral constant expression"),
	ERR_IN_CLASS_INITIALIZER_NON_INTEGRAL_TYPE(err_in_class_initializer_non_integral_type,CLASS_ERROR, MAP_ERROR, "in-class initializer has non-integral, non-enumeration type %0"),
	ERR_INCOMPLETE_BASE_CLASS(err_incomplete_base_class,CLASS_ERROR, MAP_ERROR, "base class has incomplete type"),
	ERR_INCOMPLETE_IN_EXCEPTION_SPEC(err_incomplete_in_exception_spec,CLASS_ERROR, MAP_ERROR, "%select{|pointer to |reference to }1incomplete type %0 is not allowed in exception specification"),
	ERR_INCOMPLETE_NESTED_NAME_SPEC(err_incomplete_nested_name_spec,CLASS_ERROR, MAP_ERROR, "incomplete type %0 named in nested asmName specifier"),
	ERR_INCOMPLETE_TYPE_USED_IN_TYPE_TRAIT_EXPR(err_incomplete_type_used_in_type_trait_expr,CLASS_ERROR, MAP_ERROR, "incomplete type %0 used in type trait expression"),
	ERR_INCONSISTANT_IVAR_COUNT(err_inconsistant_ivar_count,CLASS_ERROR, MAP_ERROR, "inconsistent number of instance variables specified"),
	ERR_INDIRECT_GOTO_IN_PROTECTED_SCOPE(err_indirect_goto_in_protected_scope,CLASS_ERROR, MAP_ERROR, "illegal indirect goto in protected scope, unknown effect on scopes"),
	ERR_INIT_ELEMENT_NOT_CONSTANT(err_init_element_not_constant,CLASS_ERROR, MAP_ERROR, "initializer element is not a compile-time constant"),
	ERR_INIT_NON_AGGR_INIT_LIST(err_init_non_aggr_init_list,CLASS_ERROR, MAP_ERROR, "initialization of non-aggregate type %0 with an initializer list"),
	ERR_INIT_REFERENCE_MEMBER_UNINITIALIZED(err_init_reference_member_uninitialized,CLASS_ERROR, MAP_ERROR, "reference member of type %0 uninitialized"),
	ERR_INLINE_NON_FUNCTION(err_inline_non_function,CLASS_ERROR, MAP_ERROR, "'inline' can only appear on functions"),
	ERR_INT_TO_BLOCK_POINTER(err_int_to_block_pointer,CLASS_ERROR, MAP_ERROR, "invalid conversion %2 integer %1, expected block pointer %0"),
	ERR_INTRODUCING_SPECIAL_FRIEND(err_introducing_special_friend,CLASS_ERROR, MAP_ERROR, "must use a qualified asmName when declaring a %select{constructor|destructor|conversion operator}0 as a friend"),
	ERR_INVALID_ASM_CAST_LVALUE(err_invalid_asm_cast_lvalue,CLASS_ERROR, MAP_ERROR, "invalid use of a cast in a inline asm context requiring an l-value: remove the cast or build with -fheinous-gnu-extensions"),
	ERR_INVALID_CONVERSION_BETWEEN_EXT_VECTORS(err_invalid_conversion_between_ext_vectors,CLASS_ERROR, MAP_ERROR, "invalid conversion between ext-vector type %0 and %1"),
	ERR_INVALID_CONVERSION_BETWEEN_VECTOR_AND_INTEGER(err_invalid_conversion_between_vector_and_integer,CLASS_ERROR, MAP_ERROR, "invalid conversion between vector type %0 and integer type %1 of different size"),
	ERR_INVALID_CONVERSION_BETWEEN_VECTOR_AND_SCALAR(err_invalid_conversion_between_vector_and_scalar,CLASS_ERROR, MAP_ERROR, "invalid conversion between vector type %0 and scalar type %1"),
	ERR_INVALID_CONVERSION_BETWEEN_VECTORS(err_invalid_conversion_between_vectors,CLASS_ERROR, MAP_ERROR, "invalid conversion between vector type %0 and %1 of different size"),
	ERR_INVALID_DECLARATOR_GLOBAL_SCOPE(err_invalid_declarator_global_scope,CLASS_ERROR, MAP_ERROR, "definition or redeclaration of %0 cannot asmName the global scope"),
	ERR_INVALID_DECLARATOR_IN_FUNCTION(err_invalid_declarator_in_function,CLASS_ERROR, MAP_ERROR, "definition or redeclaration of %0 not allowed inside a function"),
	ERR_INVALID_DECLARATOR_SCOPE(err_invalid_declarator_scope,CLASS_ERROR, MAP_ERROR, "definition or redeclaration of %0 not in a namespace enclosing %1"),
	ERR_INVALID_INCOMPLETE_TYPE_USE(err_invalid_incomplete_type_use,CLASS_ERROR, MAP_ERROR, "invalid use of incomplete type %0"),
	ERR_INVALID_MEMBER_USE_IN_STATIC_METHOD(err_invalid_member_use_in_static_method,CLASS_ERROR, MAP_ERROR, "invalid use of member %0 in static member function"),
	ERR_INVALID_NON_STATIC_MEMBER_USE(err_invalid_non_static_member_use,CLASS_ERROR, MAP_ERROR, "invalid use of nonstatic data member %0"),
	ERR_INVALID_PROTOCOL_QUALIFIERS(err_invalid_protocol_qualifiers,CLASS_ERROR, MAP_ERROR, "invalid protocol qualifiers on non-ObjC type"),
	ERR_INVALID_QUALIFIED_CONSTRUCTOR(err_invalid_qualified_constructor,CLASS_ERROR, MAP_ERROR, "'%0' qualifier is not allowed on a constructor"),
	ERR_INVALID_QUALIFIED_DESTRUCTOR(err_invalid_qualified_destructor,CLASS_ERROR, MAP_ERROR, "'%0' qualifier is not allowed on a destructor"),
	ERR_INVALID_QUALIFIED_FUNCTION_TYPE(err_invalid_qualified_function_type,CLASS_ERROR, MAP_ERROR, "type qualifier is not allowed on this function"),
	ERR_INVALID_QUALIFIED_TYPEDEF_FUNCTION_TYPE_USE(err_invalid_qualified_typedef_function_type_use,CLASS_ERROR, MAP_ERROR, "a qualified function type cannot be used to declare a nonmember function or a static member function"),
	ERR_INVALID_RECEIVER_TO_MESSAGE(err_invalid_receiver_to_message,CLASS_ERROR, MAP_ERROR, "invalid receiver to message expression"),
	ERR_INVALID_THIS_USE(err_invalid_this_use,CLASS_ERROR, MAP_ERROR, "invalid use of 'this' outside of a nonstatic member function"),
	ERR_INVALID_THREAD(err_invalid_thread,CLASS_ERROR, MAP_ERROR, "'__thread' is only allowed on variable declarations"),
	ERR_INVALID_USE_OF_ARRAY_TYPE(err_invalid_use_of_array_type,CLASS_ERROR, MAP_ERROR, "an array type is not allowed here"),
	ERR_INVALID_USE_OF_FUNCTION_TYPE(err_invalid_use_of_function_type,CLASS_ERROR, MAP_ERROR, "a function type is not allowed here"),
	ERR_LVALUE_TO_RVALUE_REF(err_lvalue_to_rvalue_ref,CLASS_ERROR, MAP_ERROR, "rvalue reference cannot bind to lvalue"),
	ERR_MAIN_ARG_WRONG(err_main_arg_wrong,CLASS_ERROR, MAP_ERROR, "%select{first|second|third}0 argument of 'main' should be of type %1"),
	ERR_MAIN_RETURNS_NONINT(err_main_returns_nonint,CLASS_ERROR, MAP_ERROR, "'main' must return 'int'"),
	ERR_MAIN_SURPLUS_ARGS(err_main_surplus_args,CLASS_ERROR, MAP_ERROR, "%0 is too many arguments for 'main': must be 0, 2, or 3"),
	ERR_MANY_BRACES_AROUND_SCALAR_INIT(err_many_braces_around_scalar_init,CLASS_ERROR, MAP_ERROR, "too many braces around scalar initializer"),
	ERR_MAYBE_FALLOFF_NONVOID_BLOCK(err_maybe_falloff_nonvoid_block,CLASS_ERROR, MAP_ERROR, "control may reach end of non-void block"),
	ERR_MEM_INIT_NOT_MEMBER_OR_CLASS(err_mem_init_not_member_or_class,CLASS_ERROR, MAP_ERROR, "member initializer %0 does not asmName a non-static data member or base class"),
	ERR_MEM_INITIALIZER_MISMATCH(err_mem_initializer_mismatch,CLASS_ERROR, MAP_ERROR, "Too many arguments for member initializer %0"),
	ERR_MEMBER_CALL_WITHOUT_OBJECT(err_member_call_without_object,CLASS_ERROR, MAP_ERROR, "call to non-static member function without an object argument"),
	ERR_MEMBER_DEF_DOES_NOT_MATCH(err_member_def_does_not_match,CLASS_ERROR, MAP_ERROR, "out-of-line definition does not match any declaration in %0"),
	ERR_MEMBER_FUNCTION_INITIALIZATION(err_member_function_initialization,CLASS_ERROR, MAP_ERROR, "initializer on function does not look like a pure-specifier"),
	ERR_MEMBER_INITIALIZATION(err_member_initialization,CLASS_ERROR, MAP_ERROR, "%0 can only be initialized if it is a static const integral data member"),
	ERR_MEMBER_REDECLARED(err_member_redeclared,CLASS_ERROR, MAP_ERROR, "class member cannot be redeclared"),
	ERR_MEMPOINTER_IN_NONCLASS_TYPE(err_mempointer_in_nonclass_type,CLASS_ERROR, MAP_ERROR, "member pointer refers into non-class type %0"),
	ERR_MEMPTR_CONV_VIA_VIRTUAL(err_memptr_conv_via_virtual,CLASS_ERROR, MAP_ERROR, "conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed"),
	ERR_MISMATCHED_EXCEPTION_SPEC(err_mismatched_exception_spec,CLASS_ERROR, MAP_ERROR, "exception specification in declaration does not match previous declaration"),
	ERR_MISSING_DEFAULT_CONSTRUCTOR(err_missing_default_constructor,CLASS_ERROR, MAP_ERROR, "default constructor for %1 is missing in initialization of %select{base class|member}0"),
	ERR_MISSING_PARAM_DECLSPEC(err_missing_param_declspec,CLASS_ERROR, MAP_ERROR, "parameter requires a declaration specifier"),
	ERR_MISSING_TYPE_SPECIFIER(err_missing_type_specifier,CLASS_ERROR, MAP_ERROR, "C++ requires a type specifier for all declarations"),
	ERR_MODE_NOT_PRIMITIVE(err_mode_not_primitive,CLASS_ERROR, MAP_ERROR, "mode attribute only supported for integer and floating-point types"),
	ERR_MODE_WRONG_TYPE(err_mode_wrong_type,CLASS_ERROR, MAP_ERROR, "type of machine mode does not match type of base type"),
	ERR_MULTIPLE_DEFAULT_LABELS_DEFINED(err_multiple_default_labels_defined,CLASS_ERROR, MAP_ERROR, "multiple default labels in one switch"),
	ERR_MUTABLE_CONST(err_mutable_const,CLASS_ERROR, MAP_ERROR, "'mutable' and 'const' cannot be mixed"),
	ERR_MUTABLE_FUNCTION(err_mutable_function,CLASS_ERROR, MAP_ERROR, "'mutable' cannot be applied to functions"),
	ERR_MUTABLE_NONMEMBER(err_mutable_nonmember,CLASS_ERROR, MAP_ERROR, "'mutable' can only be applied to member variables"),
	ERR_MUTABLE_REFERENCE(err_mutable_reference,CLASS_ERROR, MAP_ERROR, "'mutable' cannot be applied to references"),
	ERR_NEED_HEADER_BEFORE_TYPEID(err_need_header_before_typeid,CLASS_ERROR, MAP_ERROR, "you need to include <typeinfo> before using the 'typeid' operator"),
	ERR_NESTED_NAME_SPEC_NON_TAG(err_nested_name_spec_non_tag,CLASS_ERROR, MAP_ERROR, "type %0 cannot be used prior to '::' because it has no members"),
	ERR_NESTED_REDEFINITION(err_nested_redefinition,CLASS_ERROR, MAP_ERROR, "nested redefinition of %0"),
	ERR_NEW_ARRAY_NONCONST(err_new_array_nonconst,CLASS_ERROR, MAP_ERROR, "only the first dimension of an allocated array may be non-const"),
	ERR_NEW_INCOMPLETE_TYPE(err_new_incomplete_type,CLASS_ERROR, MAP_ERROR, "allocation of incomplete type %0"),
	ERR_NEW_UNINITIALIZED_CONST(err_new_uninitialized_const,CLASS_ERROR, MAP_ERROR, "must provide an initializer if the allocated object is 'const'"),
	ERR_NO_MEMBER(err_no_member, CLASS_ERROR, MAP_ERROR, "no member named %0 in %1"),
	ERR_NON_STATIC_STATIC(err_non_static_static,CLASS_ERROR, MAP_ERROR, "non-static declaration of %0 follows static declaration"),
	ERR_NON_THREAD_THREAD(err_non_thread_thread,CLASS_ERROR, MAP_ERROR, "non-thread-local declaration of %0 follows thread-local declaration"),
	ERR_NON_VARIABLE_DECL_IN_FOR(err_non_variable_decl_in_for,CLASS_ERROR, MAP_ERROR, "declaration of non-local variable in 'for' loop"),
	ERR_NON_VIRTUAL_PURE(err_non_virtual_pure,CLASS_ERROR, MAP_ERROR, "%0 is not virtual and cannot be declared pure"),
	ERR_NONFUNCTION_BLOCK_TYPE(err_nonfunction_block_type,CLASS_ERROR, MAP_ERROR, "block pointer to non-function type is invalid"),
	ERR_NONNULL_POINTERS_ONLY(err_nonnull_pointers_only,CLASS_ERROR, MAP_ERROR, "nonnull attribute only applies to pointer arguments"),
	ERR_NONSTATIC_MEMBER_OUT_OF_LINE(err_nonstatic_member_out_of_line,CLASS_ERROR, MAP_ERROR, "non-static data member defined out-of-line"),
	ERR_NORETURN_BLOCK_HAS_RETURN_EXPR(err_noreturn_block_has_return_expr,CLASS_ERROR, MAP_ERROR, "block declared 'noreturn' should not return"),
	ERR_NOT_DIRECT_BASE_OR_VIRTUAL(err_not_direct_base_or_virtual,CLASS_ERROR, MAP_ERROR, "type %0 is not a direct or virtual base of '%1'"),
	ERR_NOT_INTEGRAL_TYPE_ANON_BITFIELD(err_not_integral_type_anon_bitfield,CLASS_ERROR, MAP_ERROR, "anonymous bit-field has non-integral type %0"),
	ERR_NOT_INTEGRAL_TYPE_BITFIELD(err_not_integral_type_bitfield,CLASS_ERROR, MAP_ERROR, "bit-field %0 has non-integral type %1"),
	ERR_NOT_REFERENCE_TO_CONST_INIT(err_not_reference_to_const_init,CLASS_ERROR, MAP_ERROR, "non-const lvalue reference to type %0 cannot be initialized with a %1 of type %2"),
	ERR_NOT_TAG_IN_SCOPE(err_not_tag_in_scope,CLASS_ERROR, MAP_ERROR, "%0 does not asmName a tc member in the specified scope"),
	ERR_NSOBJECT_ATTRIBUTE(err_nsobject_attribute,CLASS_ERROR, MAP_ERROR, "__attribute ((NSObject)) is for pointer types only"),
	ERR_OBJC_ARRAY_OF_INTERFACES(err_objc_array_of_interfaces,CLASS_ERROR, MAP_ERROR, "array of interface %0 is invalid (probably should be an array of pointers)"),
	ERR_OBJC_DECLS_MAY_ONLY_APPEAR_IN_GLOBAL_SCOPE(err_objc_decls_may_only_appear_in_global_scope,CLASS_ERROR, MAP_ERROR, "Objective-C declarations may only appear in global scope"),
	ERR_OBJC_PROPERTY_ATTR_MUTUALLY_EXCLUSIVE(err_objc_property_attr_mutually_exclusive,CLASS_ERROR, MAP_ERROR, "property attributes '%0' and '%1' are mutually exclusive"),
	ERR_OBJC_PROPERTY_REQUIRES_OBJECT(err_objc_property_requires_object,CLASS_ERROR, MAP_ERROR, "property with '%0' attribute must be of object type"),
	ERR_OBJC_VAR_DECL_INCLASS(err_objc_var_decl_inclass,CLASS_ERROR, MAP_ERROR, "cannot declare variable inside @interface or @protocol"),
	ERR_OBJECT_CANNOT_BE_PASSED_RETURNED_BY_VALUE(err_object_cannot_be_passed_returned_by_value,CLASS_ERROR, MAP_ERROR, "interface type %1 cannot be %select{returned|passed}0 by value"),
	ERR_OBJECT_SIZE_INVALID_ARGUMENT(err_object_size_invalid_argument,CLASS_ERROR, MAP_ERROR, "argument to __builtin_object_size must be a constant integer"),
	ERR_OFFSETOF_ARRAY_TYPE(err_offsetof_array_type,CLASS_ERROR, MAP_ERROR, "offsetof requires array type, %0 invalid"),
	ERR_OFFSETOF_RECORD_TYPE(err_offsetof_record_type,CLASS_ERROR, MAP_ERROR, "offsetof requires struct, union, or class type, %0 invalid"),
	ERR_ONLY_CONSTRUCTORS_TAKE_BASE_INITS(err_only_constructors_take_base_inits,CLASS_ERROR, MAP_ERROR, "only constructors take base initializers"),
	ERR_OPERATOR_OVERLOAD_DEFAULT_ARG(err_operator_overload_default_arg,CLASS_ERROR, MAP_ERROR, "parameter of overloaded %0 cannot have a default argument"),
	ERR_OPERATOR_OVERLOAD_MUST_BE(err_operator_overload_must_be,CLASS_ERROR, MAP_ERROR, "overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)"),
	ERR_OPERATOR_OVERLOAD_MUST_BE_MEMBER(err_operator_overload_must_be_member,CLASS_ERROR, MAP_ERROR, "overloaded %0 must be a non-static member function"),
	ERR_OPERATOR_OVERLOAD_NEEDS_CLASS_OR_ENUM(err_operator_overload_needs_class_or_enum,CLASS_ERROR, MAP_ERROR, "overloaded %0 must have at least one parameter of class or enumeration type"),
	ERR_OPERATOR_OVERLOAD_POST_INCDEC_MUST_BE_INT(err_operator_overload_post_incdec_must_be_int,CLASS_ERROR, MAP_ERROR, "parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)"),
	ERR_OPERATOR_OVERLOAD_STATIC(err_operator_overload_static,CLASS_ERROR, MAP_ERROR, "overloaded %0 cannot be a static member function"),
	ERR_OPERATOR_OVERLOAD_VARIADIC(err_operator_overload_variadic,CLASS_ERROR, MAP_ERROR, "overloaded %0 cannot be variadic"),
	ERR_OUT_OF_LINE_DECLARATION(err_out_of_line_declaration,CLASS_ERROR, MAP_ERROR, "out-of-line declaration of a member must be a definition"),
	ERR_OVERLOAD_EXPR_REQUIRES_NON_ZERO_CONSTANT(err_overload_expr_requires_non_zero_constant,CLASS_ERROR, MAP_ERROR, "overload requires a non-zero constant expression as first argument"),
	ERR_OVERLOAD_INCORRECT_FNTYPE(err_overload_incorrect_fntype,CLASS_ERROR, MAP_ERROR, "argument is not a function, or has wrong number of parameters"),
	ERR_OVERLOAD_MULTIPLE_MATCH(err_overload_multiple_match,CLASS_ERROR, MAP_ERROR, "more than one matching function found in __builtin_overload"),
	ERR_OVERLOAD_NO_MATCH(err_overload_no_match,CLASS_ERROR, MAP_ERROR, "no matching overload found for arguments of type '%0'"),
	ERR_OVERRIDE_EXCEPTION_SPEC(err_override_exception_spec,CLASS_ERROR, MAP_ERROR, "exception specification of overriding function is more lax than base version"),
	ERR_OVL_AMBIGUOUS_CALL(err_ovl_ambiguous_call,CLASS_ERROR, MAP_ERROR, "call to %0 is ambiguous"),
	ERR_OVL_AMBIGUOUS_INIT(err_ovl_ambiguous_init,CLASS_ERROR, MAP_ERROR, "call to constructor of %0 is ambiguous"),
	ERR_OVL_AMBIGUOUS_MEMBER_CALL(err_ovl_ambiguous_member_call,CLASS_ERROR, MAP_ERROR, "call to member function %0 is ambiguous"),
	ERR_OVL_AMBIGUOUS_OBJECT_CALL(err_ovl_ambiguous_object_call,CLASS_ERROR, MAP_ERROR, "call to object of type %0 is ambiguous"),
	ERR_OVL_AMBIGUOUS_OPER(err_ovl_ambiguous_oper,CLASS_ERROR, MAP_ERROR, "use of overloaded operator '%0' is ambiguous"),
	ERR_OVL_BUILTIN_CANDIDATE(err_ovl_builtin_candidate, CLASS_NOTE, MAP_FATAL, "built-in candidate function %0"),
	ERR_OVL_CANDIDATE(err_ovl_candidate, CLASS_NOTE, MAP_FATAL, "candidate function"),
	ERR_OVL_CANDIDATE_DELETED(err_ovl_candidate_deleted, CLASS_NOTE, MAP_FATAL, "candidate function has been explicitly %select{made unavailable|deleted}0"),
	ERR_OVL_DELETED_CALL(err_ovl_deleted_call,CLASS_ERROR, MAP_ERROR, "call to %select{unavailable|deleted}0 function %1"),
	ERR_OVL_DELETED_INIT(err_ovl_deleted_init,CLASS_ERROR, MAP_ERROR, "call to %select{unavailable|deleted}0 constructor of %1"),
	ERR_OVL_DELETED_MEMBER_CALL(err_ovl_deleted_member_call,CLASS_ERROR, MAP_ERROR, "call to %select{unavailable|deleted}0 member function %1"),
	ERR_OVL_DELETED_OBJECT_CALL(err_ovl_deleted_object_call,CLASS_ERROR, MAP_ERROR, "call to %select{unavailable|deleted}0 function call operator in type %1"),
	ERR_OVL_DELETED_OPER(err_ovl_deleted_oper,CLASS_ERROR, MAP_ERROR, "overload resolution selected %select{unavailable|deleted}0 operator '%1'"),
	ERR_OVL_DIFF_RETURN_TYPE(err_ovl_diff_return_type,CLASS_ERROR, MAP_ERROR, "functions that differ only in their return type cannot be overloaded"),
	ERR_OVL_NO_VIABLE_FUNCTION_IN_CALL(err_ovl_no_viable_function_in_call,CLASS_ERROR, MAP_ERROR, "no matching function for call to %0"),
	ERR_OVL_NO_VIABLE_FUNCTION_IN_INIT(err_ovl_no_viable_function_in_init,CLASS_ERROR, MAP_ERROR, "no matching constructor for initialization of %0"),
	ERR_OVL_NO_VIABLE_MEMBER_FUNCTION_IN_CALL(err_ovl_no_viable_member_function_in_call,CLASS_ERROR, MAP_ERROR, "no matching member function for call to %0"),
	ERR_OVL_NO_VIABLE_OBJECT_CALL(err_ovl_no_viable_object_call,CLASS_ERROR, MAP_ERROR, "no matching function for call to object of type %0"),
	ERR_OVL_NO_VIABLE_OPER(err_ovl_no_viable_oper,CLASS_ERROR, MAP_ERROR, "no viable overloaded '%0'"),
	ERR_OVL_STATIC_NONSTATIC_MEMBER(err_ovl_static_nonstatic_member,CLASS_ERROR, MAP_ERROR, "static and non-static member functions with the same parameter types cannot be overloaded"),
	ERR_OVL_SURROGATE_CAND(err_ovl_surrogate_cand, CLASS_NOTE, MAP_FATAL, "conversion candidate of type %0"),
	ERR_PARAM_DEFAULT_ARGUMENT(err_param_default_argument,CLASS_ERROR, MAP_ERROR, "C does not support default arguments"),
	ERR_PARAM_DEFAULT_ARGUMENT_MISSING(err_param_default_argument_missing,CLASS_ERROR, MAP_ERROR, "missing default argument on parameter"),
	ERR_PARAM_DEFAULT_ARGUMENT_MISSING_NAME(err_param_default_argument_missing_name,CLASS_ERROR, MAP_ERROR, "missing default argument on parameter %0"),
	ERR_PARAM_DEFAULT_ARGUMENT_NONFUNC(err_param_default_argument_nonfunc,CLASS_ERROR, MAP_ERROR, "default arguments can only be specified for parameters in a function declaration"),
	ERR_PARAM_DEFAULT_ARGUMENT_REDEFINITION(err_param_default_argument_redefinition,CLASS_ERROR, MAP_ERROR, "redefinition of default argument"),
	ERR_PARAM_DEFAULT_ARGUMENT_REFERENCES_LOCAL(err_param_default_argument_references_local,CLASS_ERROR, MAP_ERROR, "default argument references local variable %0 of enclosing function"),
	ERR_PARAM_DEFAULT_ARGUMENT_REFERENCES_PARAM(err_param_default_argument_references_param,CLASS_ERROR, MAP_ERROR, "default argument references parameter %0"),
	ERR_PARAM_DEFAULT_ARGUMENT_REFERENCES_THIS(err_param_default_argument_references_this,CLASS_ERROR, MAP_ERROR, "default argument references 'this'"),
	ERR_PARAM_TYPEDEF_OF_VOID(err_param_typedef_of_void,CLASS_ERROR, MAP_ERROR, "empty parameter list defined with a typedef of 'void' not allowed in C++"),
	ERR_PARAM_WITH_VOID_TYPE(err_param_with_void_type,CLASS_ERROR, MAP_ERROR, "argument may not have 'void' type"),
	ERR_PARAMETER_NAME_OMITTED(err_parameter_name_omitted,CLASS_ERROR, MAP_ERROR, "parameter asmName omitted"),
	ERR_PARTIAL_SPEC_ARGS_MATCH_PRIMARY_TEMPLATE(err_partial_spec_args_match_primary_template,CLASS_ERROR, MAP_ERROR, "class template partial specialization does not specialize any template argument; to %select{declare|define}0 the primary template, remove the template argument list"),
	ERR_PREFETCH_INVALID_ARGUMENT(err_prefetch_invalid_argument,CLASS_ERROR, MAP_ERROR, "argument to __builtin_prefetch must be a constant integer"),
	ERR_PROPERTY_NOT_FOUND(err_property_not_found,CLASS_ERROR, MAP_ERROR, "property %0 not found on object of type %1"),
	ERR_PROPERTY_TYPE(err_property_type,CLASS_ERROR, MAP_ERROR, "property cannot have array or function type %0"),
	ERR_PROTOCOL_HAS_CIRCULAR_DEPENDENCY(err_protocol_has_circular_dependency,CLASS_ERROR, MAP_ERROR, "protocol has circular dependency"),
	ERR_QUALIFIED_BLOCK_POINTER_TYPE(err_qualified_block_pointer_type,CLASS_ERROR, MAP_ERROR, "qualifier specification on block pointer type not allowed"),
	ERR_QUALIFIED_CATCH_DECLARATOR(err_qualified_catch_declarator,CLASS_ERROR, MAP_ERROR, "exception declarator cannot be qualified"),
	ERR_QUALIFIED_FRIEND_NOT_FOUND(err_qualified_friend_not_found,CLASS_ERROR, MAP_ERROR, "no function named %0 with type %1 was found in the specified scope"),
	ERR_QUALIFIED_PARAM_DECLARATOR(err_qualified_param_declarator,CLASS_ERROR, MAP_ERROR, "parameter declarator cannot be qualified"),
	ERR_QUALIFIED_TYPEDEF_DECLARATOR(err_qualified_typedef_declarator,CLASS_ERROR, MAP_ERROR, "typedef declarator cannot be qualified"),
	ERR_REALIMAG_INVALID_TYPE(err_realimag_invalid_type,CLASS_ERROR, MAP_ERROR, "invalid type %0 to %1 operator"),
	ERR_RECURSIVE_SUPERCLASS(err_recursive_superclass,CLASS_ERROR, MAP_ERROR, "trying to recursively use %0 as superclass of %1"),
	ERR_REDEFINITION(err_redefinition,CLASS_ERROR, MAP_ERROR, "redefinition of %0"),
	ERR_REDEFINITION_DIFFERENT_KIND(err_redefinition_different_kind,CLASS_ERROR, MAP_ERROR, "redefinition of %0 as different kind of symbol"),
	ERR_REDEFINITION_DIFFERENT_TYPE(err_redefinition_different_type,CLASS_ERROR, MAP_ERROR, "redefinition of %0 with a different type"),
	ERR_REDEFINITION_DIFFERENT_TYPEDEF(err_redefinition_different_typedef,CLASS_ERROR, MAP_ERROR, "typedef redefinition with different types (%0 vs %1)"),
	ERR_REDEFINITION_EXTERN_INLINE(err_redefinition_extern_inline, CLASS_ERROR, MAP_ERROR, "redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1"),
	ERR_REDEFINITION_OF_ENUMERATOR(err_redefinition_of_enumerator,CLASS_ERROR, MAP_ERROR, "redefinition of enumerator %0"),
	ERR_REDEFINITION_OF_LABEL(err_redefinition_of_label,CLASS_ERROR, MAP_ERROR, "redefinition of label '%0'"),
	ERR_REFERENCE_INIT_DROPS_QUALS(err_reference_init_drops_quals,CLASS_ERROR, MAP_ERROR, "initialization of reference to type %0 with a %1 of type %2 drops qualifiers"),
	ERR_REFERENCE_TO_LOCAL_VAR_IN_ENCLOSING_FUNCTION(err_reference_to_local_var_in_enclosing_function,CLASS_ERROR, MAP_ERROR, "reference to local variable %0 declared in enclosed function %1"),
	ERR_REFERENCE_TO_VOID(err_reference_to_void,CLASS_ERROR, MAP_ERROR, "cannot form a reference to 'void'"),
	ERR_REFERENCE_VAR_REQUIRES_INIT(err_reference_var_requires_init,CLASS_ERROR, MAP_ERROR, "declaration of reference variable %0 requires an initializer"),
	ERR_REF_NON_VALUE(err_ref_non_value, CLASS_ERROR, MAP_ERROR, "%0 does not refer to a value"),
	ERR_RET_LOCAL_BLOCK(err_ret_local_block,CLASS_ERROR, MAP_ERROR, "returning block that lives on the local stack"),
	ERR_RETURN_BLOCK_HAS_EXPR(err_return_block_has_expr,CLASS_ERROR, MAP_ERROR, "void block should not return a value"),
	ERR_RETURN_IN_BLOCK_EXPRESSION(err_return_in_block_expression,CLASS_ERROR, MAP_ERROR, "return not allowed in block expression literal"),
	ERR_RETURN_IN_CONSTRUCTOR_HANDLER(err_return_in_constructor_handler,CLASS_ERROR, MAP_ERROR, "return in the catch of a function try block of a constructor is illegal"),
	ERR_SELECTOR_ELEMENT_NOT_LVALUE(err_selector_element_not_lvalue,CLASS_ERROR, MAP_ERROR, "selector element is not a valid lvalue"),
	ERR_SELECTOR_ELEMENT_TYPE(err_selector_element_type,CLASS_ERROR, MAP_ERROR, "selector element type %0 is not a valid object"),
	ERR_SETTER_TYPE_VOID(err_setter_type_void,CLASS_ERROR, MAP_ERROR, "type of setter must be void"),
	ERR_SHUFFLEVECTOR_ARGUMENT_TOO_LARGE(err_shufflevector_argument_too_large,CLASS_ERROR, MAP_ERROR, "index for __builtin_shufflevector must be less than the total number of vector elements"),
	ERR_SHUFFLEVECTOR_INCOMPATIBLE_VECTOR(err_shufflevector_incompatible_vector,CLASS_ERROR, MAP_ERROR, "first two arguments to __builtin_shufflevector must have the same type"),
	ERR_SHUFFLEVECTOR_NON_VECTOR(err_shufflevector_non_vector,CLASS_ERROR, MAP_ERROR, "first two arguments to __builtin_shufflevector must be vectors"),
	ERR_SHUFFLEVECTOR_NONCONSTANT_ARGUMENT(err_shufflevector_nonconstant_argument,CLASS_ERROR, MAP_ERROR, "index for __builtin_shufflevector must be a constant integer"),
	ERR_SIZEOF_ALIGNOF_BITFIELD(err_sizeof_alignof_bitfield,CLASS_ERROR, MAP_ERROR, "invalid application of '%select{sizeof|__alignof}0' to bitfield"),
	ERR_SIZEOF_INCOMPLETE_TYPE(err_sizeof_incomplete_type,CLASS_ERROR, MAP_ERROR, "invalid application of 'sizeof' to an incomplete type %0"),
	ERR_SIZEOF_NONFRAGILE_INTERFACE(err_sizeof_nonfragile_interface,CLASS_ERROR, MAP_ERROR, "invalid application of '%select{alignof|sizeof}1' to interface %0 in non-fragile ABI"),
	ERR_STACK_CONST_LEVEL(err_stack_const_level,CLASS_ERROR, MAP_ERROR, "level argument for a stack address builtin must be constant"),
	ERR_STATIC_ASSERT_EXPRESSION_IS_NOT_CONSTANT(err_static_assert_expression_is_not_constant,CLASS_ERROR, MAP_ERROR, "static_assert expression is not an integral constant expression"),
	ERR_STATIC_ASSERT_FAILED(err_static_assert_failed,CLASS_ERROR, MAP_ERROR, "static_assert failed '%0'"),
	ERR_STATIC_BLOCK_FUNC(err_static_block_func,CLASS_ERROR, MAP_ERROR, "function declared in block scope cannot have 'static' storage class"),
	ERR_STATIC_DATA_MEMBER_NOT_ALLOWED_IN_LOCAL_CLASS(err_static_data_member_not_allowed_in_local_class,CLASS_ERROR, MAP_ERROR, "static data member %0 not allowed in local class %1"),
	ERR_STATIC_DOWNCAST_VIA_VIRTUAL(err_static_downcast_via_virtual,CLASS_ERROR, MAP_ERROR, "cannot cast %0 to %1 via virtual base %2"),
	ERR_STATIC_ILLEGAL_IN_NEW(err_static_illegal_in_new,CLASS_ERROR, MAP_ERROR, "the 'static' modifier for the array size is not legal in new expressions"),
	ERR_STATIC_NON_STATIC(err_static_non_static,CLASS_ERROR, MAP_ERROR, "static declaration of %0 follows non-static declaration"),
	ERR_STATIC_NOT_BITFIELD(err_static_not_bitfield,CLASS_ERROR, MAP_ERROR, "static member %0 cannot be a bit-field"),
	ERR_STATIC_OUT_OF_LINE(err_static_out_of_line,CLASS_ERROR, MAP_ERROR, "'static' can only be specified inside the class definition"),
	ERR_STATICALLY_ALLOCATED_OBJECT(err_statically_allocated_object,CLASS_ERROR, MAP_ERROR, "interface type cannot be statically allocated"),
	ERR_STMTEXPR_FILE_SCOPE(err_stmtexpr_file_scope,CLASS_ERROR, MAP_ERROR, "statement expression not allowed at file scope"),
	ERR_STORAGECLASS_INVALID_FOR_MEMBER(err_storageclass_invalid_for_member,CLASS_ERROR, MAP_ERROR, "storage class specified for a member declaration"),
	ERR_SUBSCRIPT_FUNCTION_TYPE(err_subscript_function_type,CLASS_ERROR, MAP_ERROR, "subscript of pointer to function type %0"),
	ERR_SUBSCRIPT_INCOMPLETE_TYPE(err_subscript_incomplete_type,CLASS_ERROR, MAP_ERROR, "subscript of pointer to incomplete type %0"),
	ERR_SUBSCRIPT_NONFRAGILE_INTERFACE(err_subscript_nonfragile_interface,CLASS_ERROR, MAP_ERROR, "subscript requires size of interface %0, which is not constant in non-fragile ABI"),
	ERR_SWITCH_INTO_PROTECTED_SCOPE(err_switch_into_protected_scope,CLASS_ERROR, MAP_ERROR, "illegal switch case into protected scope"),
	ERR_TAG_DEFINITION_OF_TYPEDEF(err_tag_definition_of_typedef,CLASS_ERROR, MAP_ERROR, "definition of type %0 conflicts with typedef of the same asmName"),
	ERR_TEMPLATE_ARG_EXTRA_PARENS(err_template_arg_extra_parens,CLASS_ERROR, MAP_ERROR, "non-type template argument cannot be surrounded by parentheses"),
	ERR_TEMPLATE_ARG_FIELD(err_template_arg_field,CLASS_ERROR, MAP_ERROR, "non-type template argument refers to non-static data member %0"),
	ERR_TEMPLATE_ARG_FUNCTION_NOT_EXTERN(err_template_arg_function_not_extern,CLASS_ERROR, MAP_ERROR, "non-template argument refers to function %0 with internal linkage"),
	ERR_TEMPLATE_ARG_LIST_DIFFERENT_ARITY(err_template_arg_list_different_arity,CLASS_ERROR, MAP_ERROR, "%select{too few|too many}0 template arguments for %select{class template|function template|template template parameter|template}1 %2"),
	ERR_TEMPLATE_ARG_LOCAL_TYPE(err_template_arg_local_type,CLASS_ERROR, MAP_ERROR, "template argument uses local type %0"),
	ERR_TEMPLATE_ARG_METHOD(err_template_arg_method,CLASS_ERROR, MAP_ERROR, "non-type template argument refers to non-static member function %0"),
	ERR_TEMPLATE_ARG_MUST_BE_EXPR(err_template_arg_must_be_expr,CLASS_ERROR, MAP_ERROR, "template argument for non-type template parameter must be an expression"),
	ERR_TEMPLATE_ARG_MUST_BE_TEMPLATE(err_template_arg_must_be_template,CLASS_ERROR, MAP_ERROR, "template argument for template template parameter must be a class template"),
	ERR_TEMPLATE_ARG_MUST_BE_TYPE(err_template_arg_must_be_type,CLASS_ERROR, MAP_ERROR, "template argument for template type parameter must be a type"),
	ERR_TEMPLATE_ARG_NEGATIVE(err_template_arg_negative,CLASS_ERROR, MAP_ERROR, "non-type template argument provides negative value '%0' for unsigned template parameter of type %1"),
	ERR_TEMPLATE_ARG_NO_REF_BIND(err_template_arg_no_ref_bind,CLASS_ERROR, MAP_ERROR, "non-type template parameter of reference type %0 cannot bind to template argument of type %1"),
	ERR_TEMPLATE_ARG_NONTYPE_AMBIG(err_template_arg_nontype_ambig,CLASS_ERROR, MAP_ERROR, "template argument for non-type template parameter is treated as type %0"),
	ERR_TEMPLATE_ARG_NOT_CLASS_TEMPLATE(err_template_arg_not_class_template,CLASS_ERROR, MAP_ERROR, "template argument does not refer to a class template or template template parameter"),
	ERR_TEMPLATE_ARG_NOT_CONVERTIBLE(err_template_arg_not_convertible,CLASS_ERROR, MAP_ERROR, "non-type template argument of type %0 cannot be converted to a value of type %1"),
	ERR_TEMPLATE_ARG_NOT_ICE(err_template_arg_not_ice,CLASS_ERROR, MAP_ERROR, "non-type template argument of type %0 is not an integral constant expression"),
	ERR_TEMPLATE_ARG_NOT_INTEGRAL_OR_ENUMERAL(err_template_arg_not_integral_or_enumeral,CLASS_ERROR, MAP_ERROR, "non-type template argument of type %0 must have an integral or enumeration type"),
	ERR_TEMPLATE_ARG_NOT_OBJECT_OR_FUNC(err_template_arg_not_object_or_func,CLASS_ERROR, MAP_ERROR, "non-type template argument does not refer to an object or function"),
	ERR_TEMPLATE_ARG_NOT_OBJECT_OR_FUNC_FORM(err_template_arg_not_object_or_func_form,CLASS_ERROR, MAP_ERROR, "non-type template argument does not directly refer to an object or function"),
	ERR_TEMPLATE_ARG_NOT_POINTER_TO_MEMBER_FORM(err_template_arg_not_pointer_to_member_form,CLASS_ERROR, MAP_ERROR, "non-type template argument is not a pointer to member constant"),
	ERR_TEMPLATE_ARG_OBJECT_NOT_EXTERN(err_template_arg_object_not_extern,CLASS_ERROR, MAP_ERROR, "non-template argument refers to object %0 that does not have external linkage"),
	ERR_TEMPLATE_ARG_REF_BIND_IGNORES_QUALS(err_template_arg_ref_bind_ignores_quals,CLASS_ERROR, MAP_ERROR, "reference binding of non-type template parameter of type %0 to template argument of type %1 ignores qualifiers"),
	ERR_TEMPLATE_ARG_TEMPLATE_PARAMS_MISMATCH(err_template_arg_template_params_mismatch,CLASS_ERROR, MAP_ERROR, "template template argument has different template parameters than its corresponding template template parameter"),
	ERR_TEMPLATE_ARG_TOO_LARGE(err_template_arg_too_large,CLASS_ERROR, MAP_ERROR, "non-type template argument value '%0' is too large for template parameter of type %1"),
	ERR_TEMPLATE_ARG_UNNAMED_TYPE(err_template_arg_unnamed_type,CLASS_ERROR, MAP_ERROR, "template argument uses unnamed type"),
	ERR_TEMPLATE_INSTANTIATE_UNDEFINED(err_template_instantiate_undefined,CLASS_ERROR, MAP_ERROR, "%select{implicit|explicit}0 instantiation of undefined template %1"),
	ERR_TEMPLATE_KW_REFERS_TO_FUNCTION_TEMPLATE(err_template_kw_refers_to_function_template,CLASS_ERROR, MAP_ERROR, "%0 following the 'template' keyword refers to a function template"),
	ERR_TEMPLATE_KW_REFERS_TO_NON_TEMPLATE(err_template_kw_refers_to_non_template,CLASS_ERROR, MAP_ERROR, "%0 following the 'template' keyword does not refer to a template"),
	ERR_TEMPLATE_LINKAGE(err_template_linkage,CLASS_ERROR, MAP_ERROR, "templates must have C++ linkage"),
	ERR_TEMPLATE_NONTYPE_PARM_BAD_TYPE(err_template_nontype_parm_bad_type,CLASS_ERROR, MAP_ERROR, "a non-type template parameter cannot have type %0"),
	ERR_TEMPLATE_NONTYPE_PARM_DIFFERENT_TYPE(err_template_nontype_parm_different_type,CLASS_ERROR, MAP_ERROR, "template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration"),
	ERR_TEMPLATE_OUTSIDE_NAMESPACE_OR_CLASS_SCOPE(err_template_outside_namespace_or_class_scope,CLASS_ERROR, MAP_ERROR, "templates can only be declared in namespace or class scope"),
	ERR_TEMPLATE_PARAM_DEFAULT_ARG_MISSING(err_template_param_default_arg_missing,CLASS_ERROR, MAP_ERROR, "template parameter missing a default argument"),
	ERR_TEMPLATE_PARAM_DEFAULT_ARG_REDEFINITION(err_template_param_default_arg_redefinition,CLASS_ERROR, MAP_ERROR, "template parameter redefines default argument"),
	ERR_TEMPLATE_PARAM_DIFFERENT_KIND(err_template_param_different_kind,CLASS_ERROR, MAP_ERROR, "template parameter has a different kind in template %select{|template parameter }0redeclaration"),
	ERR_TEMPLATE_PARAM_LIST_DIFFERENT_ARITY(err_template_param_list_different_arity,CLASS_ERROR, MAP_ERROR, "%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration"),
	ERR_TEMPLATE_PARAM_LIST_MATCHES_NONTEMPLATE(err_template_param_list_matches_nontemplate,CLASS_ERROR, MAP_ERROR, "template parameter list matching the non-templated nested type %0 should be empty ('template<>')"),
	ERR_TEMPLATE_PARAM_PACK_DEFAULT_ARG(err_template_param_pack_default_arg,CLASS_ERROR, MAP_ERROR, "template parameter pack cannot have a default argument"),
	ERR_TEMPLATE_PARAM_PACK_MUST_BE_LAST_TEMPLATE_PARAMETER(err_template_param_pack_must_be_last_template_parameter,CLASS_ERROR, MAP_ERROR, "template parameter pack must be the last template parameter"),
	ERR_TEMPLATE_PARAM_SHADOW(err_template_param_shadow,CLASS_ERROR, MAP_ERROR, "declaration of %0 shadows template parameter"),
	ERR_TEMPLATE_QUALIFIED_DECLARATOR_NO_MATCH(err_template_qualified_declarator_no_match,CLASS_ERROR, MAP_ERROR, "nested asmName specifier '%0' for declaration does not refer to a class template or class template partial specialization"),
	ERR_TEMPLATE_RECURSION_DEPTH_EXCEEDED(err_template_recursion_depth_exceeded,CLASS_ERROR, MAP_FATAL, "recursive template instantiation exceeded maximum depth of %0"),
	ERR_TEMPLATE_SPEC_DECL_FUNCTION_SCOPE(err_template_spec_decl_function_scope,CLASS_ERROR, MAP_ERROR, "%select{class template specialization|class template partial specialization|explicit instantiation}0 of %1 in function scope"),
	ERR_TEMPLATE_SPEC_DECL_OUT_OF_SCOPE(err_template_spec_decl_out_of_scope,CLASS_ERROR, MAP_ERROR, "class template %select{|partial }0specialization of %1 not in namespace %2"),
	ERR_TEMPLATE_SPEC_DECL_OUT_OF_SCOPE_GLOBAL(err_template_spec_decl_out_of_scope_global,CLASS_ERROR, MAP_ERROR, "class template %select{|partial }0specialization of %1 must occur in the global scope"),
	ERR_TEMPLATE_SPEC_EXTRA_HEADERS(err_template_spec_extra_headers,CLASS_ERROR, MAP_ERROR, "extraneous template parameter list in template specialization or out-of-line template definition"),
	ERR_TEMPLATE_SPEC_NEEDS_HEADER(err_template_spec_needs_header,CLASS_ERROR, MAP_ERROR, "template specialization requires 'template<>'"),
	ERR_TEMPLATE_SPEC_NEEDS_TEMPLATE_PARAMETERS(err_template_spec_needs_template_parameters,CLASS_ERROR, MAP_ERROR, "template specialization or definition requires a template parameter listcorresponding to the nested type %0"),
	ERR_TEMPLATE_SPEC_REDECL_GLOBAL_SCOPE(err_template_spec_redecl_global_scope,CLASS_ERROR, MAP_ERROR, "%select{class template specialization|class template partial specialization|explicit instantiation}0 of %1 must occur at global scope"),
	ERR_TEMPLATE_SPEC_REDECL_OUT_OF_SCOPE(err_template_spec_redecl_out_of_scope,CLASS_ERROR, MAP_ERROR, "%select{class template specialization|class template partial specialization|explicit instantiation}0 of %1 not in a namespace enclosing %2"),
	ERR_TEMPLATE_TYPEDEF(err_template_typedef,CLASS_ERROR, MAP_ERROR, "a typedef cannot be a template"),
	ERR_TEMPLATE_UNNAMED_CLASS(err_template_unnamed_class,CLASS_ERROR, MAP_ERROR, "cannot declare a class template with no asmName"),
	ERR_TEMPLATE_VARIABLE(err_template_variable,CLASS_ERROR, MAP_ERROR, "variable %0 declared as a template"),
	ERR_TEMPLATE_VARIABLE_NOPARAMS(err_template_variable_noparams,CLASS_ERROR, MAP_ERROR, "extraneous 'template<>' in declaration of variable %0"),
	ERR_TENTATIVE_DEF_INCOMPLETE_TYPE(err_tentative_def_incomplete_type,CLASS_ERROR, MAP_ERROR, "tentative definition has type %0 that is never completed"),
	ERR_TENTATIVE_DEF_INCOMPLETE_TYPE_ARR(err_tentative_def_incomplete_type_arr,CLASS_ERROR, MAP_ERROR, "tentative definition has array of type %0 that is never completed"),
	ERR_THREAD_NON_GLOBAL(err_thread_non_global,CLASS_ERROR, MAP_ERROR, "'__thread' variables must have global storage"),
	ERR_THREAD_NON_THREAD(err_thread_non_thread,CLASS_ERROR, MAP_ERROR, "thread-local declaration of %0 follows non-thread-local declaration"),
	ERR_THREAD_UNSUPPORTED(err_thread_unsupported,CLASS_ERROR, MAP_ERROR, "thread-local storage is unsupported for the current target"),
	ERR_THROW_INCOMPLETE(err_throw_incomplete,CLASS_ERROR, MAP_ERROR, "cannot throw object of incomplete type %0"),
	ERR_THROW_INCOMPLETE_PTR(err_throw_incomplete_ptr,CLASS_ERROR, MAP_ERROR, "cannot throw pointer to object of incomplete type %0"),
	ERR_TOOMANY_ELEMENT_DECLS(err_toomany_element_decls,CLASS_ERROR, MAP_ERROR, "only one element declaration is allowed"),
	ERR_TYPE_DEFINED_IN_CONDITION(err_type_defined_in_condition,CLASS_ERROR, MAP_ERROR, "types may not be defined in conditions"),
	ERR_TYPE_DEFINED_IN_PARAM_TYPE(err_type_defined_in_param_type,CLASS_ERROR, MAP_ERROR, "%0 can not be defined in a parameter type"),
	ERR_TYPE_DEFINED_IN_RESULT_TYPE(err_type_defined_in_result_type,CLASS_ERROR, MAP_ERROR, "%0 can not be defined in the result type of a function"),
	ERR_TYPE_DEFINED_IN_TYPE_SPECIFIER(err_type_defined_in_type_specifier,CLASS_ERROR, MAP_ERROR, "%0 can not be defined in a type specifier"),
	ERR_TYPECHECK_ADDRESS_OF(err_typecheck_address_of,CLASS_ERROR, MAP_ERROR, "address of %0 requested"),
	ERR_TYPECHECK_ARITHMETIC_INCOMPLETE_TYPE(err_typecheck_arithmetic_incomplete_type,CLASS_ERROR, MAP_ERROR, "arithmetic on pointer to incomplete type %0"),
	ERR_TYPECHECK_ARRAY_NOT_MODIFIABLE_LVALUE(err_typecheck_array_not_modifiable_lvalue,CLASS_ERROR, MAP_ERROR, "array type %0 is not assignable"),
	ERR_TYPECHECK_ASSIGN_CONST(err_typecheck_assign_const,CLASS_ERROR, MAP_ERROR, "read-only variable is not assignable"),
	ERR_TYPECHECK_BOOL_CONDITION(err_typecheck_bool_condition,CLASS_ERROR, MAP_ERROR, "value of type %0 is not contextually convertible to 'bool'"),
	ERR_TYPECHECK_CALL_INVALID_ORDERED_COMPARE(err_typecheck_call_invalid_ordered_compare,CLASS_ERROR, MAP_ERROR, "ordered compare requires two args of floating point type (%0 and %1)"),
	ERR_TYPECHECK_CALL_NOT_FUNCTION(err_typecheck_call_not_function,CLASS_ERROR, MAP_ERROR, "called object type %0 is not a function or function pointer"),
	ERR_TYPECHECK_CALL_TOO_FEW_ARGS(err_typecheck_call_too_few_args,CLASS_ERROR, MAP_ERROR, "too few arguments to %select{function|block|method}0 call"),
	ERR_TYPECHECK_CALL_TOO_FEW_ARGS_AT_LEAST(err_typecheck_call_too_few_args_at_least, CLASS_ERROR, MAP_ERROR,
			"too few %select{|||execution configuration }0arguments to " +
			"%select{function|block|method|kernel function}0 call, " +
			"expected at least %1, have %2"),
	ERR_TYPECHECK_CALL_TOO_MANY_ARGS(err_typecheck_call_too_many_args,CLASS_ERROR, MAP_ERROR, "too many arguments to %select{function|block|method}0 call"),
	ERR_TYPECHECK_TOO_MANY_ARGS_AT_LEAST(err_typecheck_call_too_many_args_at_most, CLASS_ERROR, MAP_ERROR,
			"too many %select{|||execution configuration }0arguments to " +
			"%select{function|block|method|kernel function}0 call, " +
			"expected at most %1, have %2"),
	ERR_TYPECHECK_CAST_TO_UNION_NO_TYPE(err_typecheck_cast_to_union_no_type,CLASS_ERROR, MAP_ERROR, "cast to union type from type %0 not present in union"),
	ERR_TYPECHECK_CHOOSE_EXPR_REQUIRES_CONSTANT(err_typecheck_choose_expr_requires_constant,CLASS_ERROR, MAP_ERROR, "'__builtin_choose_expr' requires a constant expression"),
	ERR_TYPECHECK_CLOSURE_TOO_MANY_ARGS(err_typecheck_closure_too_many_args,CLASS_ERROR, MAP_ERROR, "too many arguments to closure call"),
	ERR_TYPECHECK_COMPARISON_OF_DISTINCT_BLOCKS(err_typecheck_comparison_of_distinct_blocks,CLASS_ERROR, MAP_ERROR, "comparison of distinct block types (%0 and %1)"),
	ERR_TYPECHECK_COMPARISON_OF_DISTINCT_POINTERS(err_typecheck_comparison_of_distinct_pointers,CLASS_ERROR, MAP_ERROR, "comparison of distinct pointer types (%0 and %1)"),
	ERR_TYPECHECK_COND_EXPECT_SCALAR(err_typecheck_cond_expect_scalar,CLASS_ERROR, MAP_ERROR, "used type %0 where arithmetic or pointer type is required"),
	ERR_TYPECHECK_COND_INCOMPATIBLE_OPERANDS(err_typecheck_cond_incompatible_operands,CLASS_ERROR, MAP_ERROR, "incompatible operand types (%0 and %1)"),
	ERR_TYPECHECK_CONVERT_INCOMPATIBLE(err_typecheck_convert_incompatible,CLASS_ERROR, MAP_ERROR, "incompatible type %2 %1, expected %0"),
	ERR_TYPECHECK_CONVERT_INCOMPATIBLE_BLOCK_POINTER(err_typecheck_convert_incompatible_block_pointer,CLASS_ERROR, MAP_ERROR, "incompatible block pointer types %2 %1, expected %0"),
	ERR_TYPECHECK_DECL_INCOMPLETE_TYPE(err_typecheck_decl_incomplete_type,CLASS_ERROR, MAP_ERROR, "variable has incomplete type %0"),
	ERR_TYPECHECK_DUPLICATE_VECTOR_COMPONENTS_NOT_MLVALUE(err_typecheck_duplicate_vector_components_not_mlvalue,CLASS_ERROR, MAP_ERROR, "vector is not assignable (contains duplicate components)"),
	ERR_TYPECHECK_EXPECT_SCALAR_OPERAND(err_typecheck_expect_scalar_operand,CLASS_ERROR, MAP_ERROR, "operand of type %0 where arithmetic or pointer type is required"),
	ERR_TYPECHECK_EXPRESSION_NOT_MODIFIABLE_LVALUE(err_typecheck_expression_not_modifiable_lvalue,CLASS_ERROR, MAP_ERROR, "expression is not assignable"),
	ERR_TYPECHECK_EXT_VECTOR_NOT_TYPEDEF(err_typecheck_ext_vector_not_typedef,CLASS_ERROR, MAP_ERROR, "ext_vector_type only applies to types, not variables"),
	ERR_TYPECHECK_FIELD_VARIABLE_SIZE(err_typecheck_field_variable_size,CLASS_ERROR, MAP_ERROR, "fields must have a constant size: 'variable length array in structure' extension will never be supported"),
	ERR_TYPECHECK_ILLEGAL_INCREMENT_DECREMENT(err_typecheck_illegal_increment_decrement,CLASS_ERROR, MAP_ERROR, "cannot modify value of type %0"),
	ERR_INCOMPLETE_TYPE(err_incomplete_type, CLASS_ERROR, MAP_ERROR, "incomplete type %0 where a complete type is required"),
	ERR_TYPECHECK_INCOMPLETE_ARRAY_NEEDS_INITIALIZER(err_typecheck_incomplete_array_needs_initializer, CLASS_ERROR, MAP_ERROR, "definition of variable with array type needs an explicit size or an initializer"),
	ERR_TYPECHECK_INCOMPLETE_TAG(err_typecheck_incomplete_tag,CLASS_ERROR, MAP_ERROR, "incomplete definition of type %0"),
	ERR_TYPECHECK_INCOMPLETE_TYPE_NOT_MODIFIABLE_LVALUE(err_typecheck_incomplete_type_not_modifiable_lvalue,CLASS_ERROR, MAP_ERROR, "incomplete type %0 is not assignable"),
	ERR_TYPECHECK_INDIRECTION_REQUIRES_POINTER(err_typecheck_indirection_requires_pointer,CLASS_ERROR, MAP_ERROR, "indirection requires pointer operand (%0 invalid)"),
	ERR_TYPECHECK_INVALID_LVALUE_ADDROF(err_typecheck_invalid_lvalue_addrof,CLASS_ERROR, MAP_ERROR, "address expression must be an lvalue or a function designator"),
	ERR_TYPECHECK_INVALID_OPERANDS(err_typecheck_invalid_operands,CLASS_ERROR, MAP_ERROR, "invalid operands to binary expression (%0 and %1)"),
	ERR_TYPECHECK_INVALID_RESTRICT_INVALID_POINTEE(err_typecheck_invalid_restrict_invalid_pointee,CLASS_ERROR, MAP_ERROR, "pointer to function type %0 may not be 'restrict' qualified"),
	ERR_TYPECHECK_INVALID_RESTRICT_NOT_POINTER(err_typecheck_invalid_restrict_not_pointer,CLASS_ERROR, MAP_ERROR, "restrict requires a pointer or reference (%0 is invalid)"),
	ERR_TYPECHECK_IVAR_VARIABLE_SIZE(err_typecheck_ivar_variable_size,CLASS_ERROR, MAP_ERROR, "instance variables must have a constant size"),
	ERR_TYPECHECK_LVALUE_CASTS_NOT_SUPPORTED(err_typecheck_lvalue_casts_not_supported,CLASS_ERROR, MAP_ERROR, "assignment to cast is illegal, lvalue casts are not supported"),
	ERR_TYPECHECK_MEMBER_REFERENCE_ARROW(err_typecheck_member_reference_arrow,CLASS_ERROR, MAP_ERROR, "member reference type %0 is not a pointer"),
	ERR_TYPECHECK_MEMBER_REFERENCE_IVAR(err_typecheck_member_reference_ivar,CLASS_ERROR, MAP_ERROR, "%0 does not have a member named %1"),
	ERR_TYPECHECK_MEMBER_REFERENCE_STRUCT_UNION(err_typecheck_member_reference_struct_union,CLASS_ERROR, MAP_ERROR, "member reference base type %0 is not a structure or union"),
	ERR_TYPECHECK_MEMBER_REFERENCE_SUGGESTION(err_typecheck_member_reference_suggestion, CLASS_ERROR, MAP_ERROR, "member reference type %0 is %select{a|not a}1 pointer; maybe you meant to use '%select{->|.}1'?"),
	ERR_TYPECHECK_MEMBER_REFERENCE_TYPE(err_typecheck_member_reference_type,CLASS_ERROR, MAP_ERROR, "cannot refer to type member %0 with '%select{.|->}1'"),
	ERR_TYPECHECK_MEMBER_REFERENCE_UNKNOWN(err_typecheck_member_reference_unknown,CLASS_ERROR, MAP_ERROR, "cannot refer to member %0 with '%select{.|->}1'"),
	ERR_TYPECHECK_NEGATIVE_ARRAY_SIZE(err_typecheck_negative_array_size,CLASS_ERROR, MAP_ERROR, "array size is negative"),
	ERR_TYPECHECK_NO_MEMBER(err_typecheck_no_member,CLASS_ERROR, MAP_ERROR, "no member named %0"),
	ERR_TYPECHECK_NON_OBJECT_NOT_MODIFIABLE_LVALUE(err_typecheck_non_object_not_modifiable_lvalue,CLASS_ERROR, MAP_ERROR, "non-object type %0 is not assignable"),
	ERR_TYPECHECK_POINTER_ARITH_FUNCTION_TYPE(err_typecheck_pointer_arith_function_type,CLASS_ERROR, MAP_ERROR, "arithmetic on pointer to function type %0"),
	ERR_TYPECHECK_POINTER_ARITH_VOID_TYPE(err_typecheck_pointer_arith_void_type,CLASS_ERROR, MAP_ERROR, "arithmetic on pointer to void type"),
	ERR_TYPECHECK_SCLASS_FSCOPE(err_typecheck_sclass_fscope,CLASS_ERROR, MAP_ERROR, "illegal storage class on file-scoped variable"),
	ERR_TYPECHECK_SCLASS_FUNC(err_typecheck_sclass_func,CLASS_ERROR, MAP_ERROR, "illegal storage class on function"),
	ERR_TYPECHECK_STATEMENT_REQUIRES_INTEGER(err_typecheck_statement_requires_integer,CLASS_ERROR, MAP_ERROR, "statement requires expression of integer type (%0 invalid)"),
	ERR_TYPECHECK_STATEMENT_REQUIRES_SCALAR(err_typecheck_statement_requires_scalar,CLASS_ERROR, MAP_ERROR, "statement requires expression of scalar type (%0 invalid)"),
	ERR_TYPECHECK_SUB_PTR_COMPATIBLE(err_typecheck_sub_ptr_compatible,CLASS_ERROR, MAP_ERROR, "%0 and %1 are not pointers to compatible types"),
	ERR_TYPECHECK_SUB_PTR_OBJECT(err_typecheck_sub_ptr_object,CLASS_ERROR, MAP_ERROR, "subtraction of pointer %0 requires pointee to be a complete object type"),
	ERR_TYPECHECK_SUBSCRIPT_NOT_INTEGER(err_typecheck_subscript_not_integer,CLASS_ERROR, MAP_ERROR, "array subscript is not an integer"),
	ERR_TYPECHECK_SUBSCRIPT_VALUE(err_typecheck_subscript_value,CLASS_ERROR, MAP_ERROR, "subscripted value is not an array, pointer, or vector"),
	ERR_TYPECHECK_UNARY_EXPR(err_typecheck_unary_expr,CLASS_ERROR, MAP_ERROR, "invalid argument type %0 to unary expression"),
	ERR_TYPECHECK_VECTOR_COMPARISON(err_typecheck_vector_comparison,CLASS_ERROR, MAP_ERROR, "comparison of vector types (%0 and %1) not supported yet"),
	ERR_TYPECHECK_VECTOR_NOT_CONVERTABLE(err_typecheck_vector_not_convertable,CLASS_ERROR, MAP_ERROR, "can't convert between vector values of different size (%0 and %1)"),
	ERR_TYPEDEF_NOT_BITFIELD(err_typedef_not_bitfield,CLASS_ERROR, MAP_ERROR, "typedef member %0 cannot be a bit-field"),
	ERR_TYPENAME_NESTED_NOT_FOUND(err_typename_nested_not_found,CLASS_ERROR, MAP_ERROR, "no type named %0 in %1"),
	ERR_TYPENAME_NESTED_NOT_FOUND_GLOBAL(err_typename_nested_not_found_global,CLASS_ERROR, MAP_ERROR, "no type named %0 in the global namespace"),
	ERR_TYPENAME_NESTED_NOT_TYPE(err_typename_nested_not_type,CLASS_ERROR, MAP_ERROR, "typename specifier refers to non-type member %0"),
	ERR_TYPES_COMPATIBLE_P_IN_CPLUSPLUS(err_types_compatible_p_in_cplusplus,CLASS_ERROR, MAP_ERROR, "__builtin_types_compatible_p is not valid in C++"),
	ERR_UNDECLARED_LABEL_USE(err_undeclared_label_use,CLASS_ERROR, MAP_ERROR, "use of undeclared label '%0'"),
	ERR_UNDECLARED_PROTOCOL(err_undeclared_protocol,CLASS_ERROR, MAP_ERROR, "cannot find protocol declaration for %0"),
	ERR_UNDECLARED_USE(err_undeclared_use,CLASS_ERROR, MAP_ERROR, "use of undeclared '%0'"),
	ERR_UNDECLARED_VAR_USE(err_undeclared_var_use,CLASS_ERROR, MAP_ERROR, "use of undeclared identifier %0"),
	ERR_UNDEF_INTERFACE(err_undef_interface,CLASS_ERROR, MAP_ERROR, "cannot find interface declaration for %0"),
	ERR_UNDEF_SUPERCLASS(err_undef_superclass,CLASS_ERROR, MAP_ERROR, "cannot find interface declaration for %0, superclass of %1"),
	ERR_UNELABORATED_FRIEND_TYPE(err_unelaborated_friend_type,CLASS_ERROR, MAP_ERROR, "must specify '%select{class|union}0' in a friend %select{class|union}0 declaration"),
	ERR_UNEXPECTED_FRIEND(err_unexpected_friend,CLASS_ERROR, MAP_ERROR, "friends can only be classes or functions"),
	ERR_UNEXPECTED_INTERFACE(err_unexpected_interface,CLASS_ERROR, MAP_ERROR, "unexpected interface asmName %0: expected expression"),
	ERR_UNEXPECTED_NAMESPACE(err_unexpected_namespace,CLASS_ERROR, MAP_ERROR, "unexpected namespace asmName %0: expected expression"),
	ERR_UNEXPECTED_TYPEDEF(err_unexpected_typedef,CLASS_ERROR, MAP_ERROR, "unexpected type asmName %0: expected expression"),
	ERR_UNINITIALIZED_MEMBER_FOR_ASSIGN(err_uninitialized_member_for_assign,CLASS_ERROR, MAP_ERROR, "cannot define the implicit default assignment operator for %0, because non-static %select{reference|const}1 member %2 can't use default assignment operator"),
	ERR_UNINTIALIZED_MEMBER(err_unintialized_member,CLASS_ERROR, MAP_ERROR, "cannot define the implicit default constructor for %0, because %select{reference|const}1 member %2 cannot be default-initialized"),
	ERR_UNION_AS_BASE_CLASS(err_union_as_base_class,CLASS_ERROR, MAP_ERROR, "unions cannot be base classes"),
	ERR_UNKNOWN_MACHINE_MODE(err_unknown_machine_mode,CLASS_ERROR, MAP_ERROR, "unknown machine mode %0"),
	ERR_UNSUPPORTED_GLOBAL_REGISTER(err_unsupported_global_register,CLASS_ERROR, MAP_ERROR, "global register variables are not supported"),
	ERR_UNSUPPORTED_MACHINE_MODE(err_unsupported_machine_mode,CLASS_ERROR, MAP_ERROR, "unsupported machine mode %0"),
	ERR_UNSUPPORTED_PRAGMA_WEAK(err_unsupported_pragma_weak,CLASS_ERROR, MAP_ERROR, "using '#pragma weak' to refer to an undeclared identifier is not yet supported"),
	ERR_UNSUPPORTED_VECTOR_SIZE(err_unsupported_vector_size,CLASS_ERROR, MAP_ERROR, "unsupported type %0 for vector_size attribute, please use on typedef"),
	ERR_UNUSUAL_MAIN_DECL(err_unusual_main_decl,CLASS_ERROR, MAP_ERROR, "'main' is not allowed to be declared %select{static|inline|static or inline}0"),
	ERR_USE_CONTINUATION_CLASS(err_use_continuation_class,CLASS_ERROR, MAP_ERROR, "attribute of property in continuation class of %0 can only  be 'readwrite'"),
	ERR_USE_OF_DEFAULT_ARGUMENT_TO_FUNCTION_DECLARED_LATER(err_use_of_default_argument_to_function_declared_later,CLASS_ERROR, MAP_ERROR, "use of default argument to function %0 that is declared later in class %1"),
	ERR_USE_WITH_WRONG_TAG(err_use_with_wrong_tag,CLASS_ERROR, MAP_ERROR, "use of %0 with tc type that does not match previous declaration"),
	ERR_USING_REQUIRES_QUALNAME(err_using_requires_qualname,CLASS_ERROR, MAP_ERROR, "using declaration requires a qualified asmName"),
	ERR_USING_TYPENAME_NON_TYPE(err_using_typename_non_type,CLASS_ERROR, MAP_ERROR, "'typename' keyword used on a non-type"),
	ERR_VA_START_USED_IN_NON_VARIADIC_FUNCTION(err_va_start_used_in_non_variadic_function,CLASS_ERROR, MAP_ERROR, "'va_start' used in function with fixed args"),
	ERR_VALUE_INIT_FOR_ARRAY_TYPE(err_value_init_for_array_type,CLASS_ERROR, MAP_ERROR, "array types cannot be value-initialized"),
	ERR_VARIABLE_OBJECT_NO_INIT(err_variable_object_no_init,CLASS_ERROR, MAP_ERROR, "variable-sized object may not be initialized"),
	ERR_VECTOR_INCORRECT_NUM_INITIALIZERS(err_vector_incorrect_num_initializers,CLASS_ERROR, MAP_ERROR, "%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)"),
	ERR_VIRTUAL_NON_FUNCTION(err_virtual_non_function,CLASS_ERROR, MAP_ERROR, "'virtual' can only appear on non-static member functions"),
	ERR_VIRTUAL_OUT_OF_CLASS(err_virtual_out_of_class,CLASS_ERROR, MAP_ERROR, "'virtual' can only be specified inside the class definition"),
	ERR_VLA_DECL_HAS_EXTERN_LINKAGE(err_vla_decl_has_extern_linkage,CLASS_ERROR, MAP_ERROR, "variable length array declaration can not have 'extern' linkage"),
	ERR_VLA_DECL_HAS_STATIC_STORAGE(err_vla_decl_has_static_storage,CLASS_ERROR, MAP_ERROR, "variable length array declaration can not have 'static' storage duration"),
	ERR_VLA_DECL_IN_FILE_SCOPE(err_vla_decl_in_file_scope,CLASS_ERROR, MAP_ERROR, "variable length array declaration not allowed at file scope"),
	ERR_VM_DECL_HAS_EXTERN_LINKAGE(err_vm_decl_has_extern_linkage,CLASS_ERROR, MAP_ERROR, "variably modified type declaration can not have 'extern' linkage"),
	ERR_VM_DECL_IN_FILE_SCOPE(err_vm_decl_in_file_scope,CLASS_ERROR, MAP_ERROR, "variably modified type declaration not allowed at file scope"),
	ERR_VM_FUNC_DECL(err_vm_func_decl,CLASS_ERROR, MAP_ERROR, "function declaration cannot have variably modified type"),
	ERR_VOID_ONLY_PARAM(err_void_only_param,CLASS_ERROR, MAP_ERROR, "'void' must be the first and only parameter if specified"),
	ERR_VOID_PARAM_QUALIFIED(err_void_param_qualified,CLASS_ERROR, MAP_ERROR, "'void' as parameter must not have type qualifiers"),
	ERROR_BAD_CATEGORY_PROPERTY_DECL(error_bad_category_property_decl,CLASS_ERROR, MAP_ERROR, "property implementation must have its declaration in the category %0"),
	ERROR_BAD_PROPERTY_CONTEXT(error_bad_property_context,CLASS_ERROR, MAP_ERROR, "property implementation must be in a class or category implementation"),
	ERROR_BAD_PROPERTY_DECL(error_bad_property_decl,CLASS_ERROR, MAP_ERROR, "property implementation must have its declaration in interface %0"),
	ERROR_DUPLICATE_IVAR_USE(error_duplicate_ivar_use,CLASS_ERROR, MAP_ERROR, "synthesized properties %0 and %1 both claim ivar %2"),
	ERROR_DYNAMIC_PROPERTY_IVAR_DECL(error_dynamic_property_ivar_decl,CLASS_ERROR, MAP_ERROR, "dynamic property can not have ivar specification"),
	ERROR_IVAR_IN_SUPERCLASS_USE(error_ivar_in_superclass_use,CLASS_ERROR, MAP_ERROR, "property %0 attempting to use ivar %1 declared in super class %2"),
	ERROR_IVAR_USE_IN_CLASS_METHOD(error_ivar_use_in_class_method,CLASS_ERROR, MAP_ERROR, "instance variable %0 accessed in class method"),
	ERROR_MISSING_METHOD_CONTEXT(error_missing_method_context,CLASS_ERROR, MAP_ERROR, "missing context for method declaration"),
	ERROR_MISSING_PROPERTY_CONTEXT(error_missing_property_context,CLASS_ERROR, MAP_ERROR, "missing context for property implementation declaration"),
	ERROR_MISSING_PROPERTY_INTERFACE(error_missing_property_interface,CLASS_ERROR, MAP_ERROR, "property implementation in a category with no category declaration"),
	ERROR_MISSING_PROPERTY_IVAR_DECL(error_missing_property_ivar_decl,CLASS_ERROR, MAP_ERROR, "synthesized property %0 must either be named the same as a compatible ivar or must explicitly asmName an ivar"),
	ERROR_MULTIPLE_BASE_INITIALIZATION(error_multiple_base_initialization,CLASS_ERROR, MAP_ERROR, "multiple initializations given for base %0"),
	ERROR_MULTIPLE_MEM_INITIALIZATION(error_multiple_mem_initialization,CLASS_ERROR, MAP_ERROR, "multiple initializations given for non-static member '%0'"),
	ERROR_NO_SUPER_CLASS(error_no_super_class,CLASS_ERROR, MAP_ERROR, "no super class declared in @interface for %0"),
	ERROR_NO_SUPER_CLASS_MESSAGE(error_no_super_class_message,CLASS_ERROR, MAP_ERROR, "no @interface declaration found in class messaging of %0"),
	ERROR_NOSETTER_PROPERTY_ASSIGNMENT(error_nosetter_property_assignment,CLASS_ERROR, MAP_ERROR, "setter method is needed to assign to object using property assignment syntax"),
	ERROR_OBJC_SYNCHRONIZED_EXPECTS_OBJECT(error_objc_synchronized_expects_object,CLASS_ERROR, MAP_ERROR, "@synchronized requires an Objective-C object type (%0 invalid)"),
	ERROR_OBJC_THROW_EXPECTS_OBJECT(error_objc_throw_expects_object,CLASS_ERROR, MAP_ERROR, "@throw requires an Objective-C object type (%0 invalid)"),
	ERROR_PRIVATE_IVAR_ACCESS(error_private_ivar_access,CLASS_ERROR, MAP_ERROR, "instance variable %0 is private"),
	ERROR_PROPERTY_IMPLEMENTED(error_property_implemented,CLASS_ERROR, MAP_ERROR, "property %0 is already implemented"),
	ERROR_PROPERTY_IVAR_TYPE(error_property_ivar_type,CLASS_ERROR, MAP_ERROR, "type of property %0 does not match type of ivar %1"),
	ERROR_PROTECTED_IVAR_ACCESS(error_protected_ivar_access,CLASS_ERROR, MAP_ERROR, "instance variable %0 is protected"),
	ERROR_READONLY_PROPERTY_ASSIGNMENT(error_readonly_property_assignment,CLASS_ERROR, MAP_ERROR, "assigning to property with 'readonly' attribute not allowed"),
	ERROR_RETHROW_USED_OUTSIDE_CATCH(error_rethrow_used_outside_catch,CLASS_ERROR, MAP_ERROR, "@throw (rethrow) used outside of a @catch block"),
	ERROR_STRONG_PROPERTY(error_strong_property,CLASS_ERROR, MAP_ERROR, "existing ivar %1 for a __strong property %0 must be garbage collectable"),
	ERROR_SYNTHESIZE_CATEGORY_DECL(error_synthesize_category_decl,CLASS_ERROR, MAP_ERROR, "@synthesize not allowed in a category's implementation"),
	ERROR_SYNTHESIZED_IVAR_YET_NOT_SUPPORTED(error_synthesized_ivar_yet_not_supported,CLASS_ERROR, MAP_ERROR, "instance variable synthesis not yet supported (need to declare %0 explicitly)"),
	ERROR_WEAK_PROPERTY(error_weak_property,CLASS_ERROR, MAP_ERROR, "existing ivar %1 for __weak property %0 must be __weak"),
	EXT_ANON_PARAM_REQUIRES_TYPE_SPECIFIER(ext_anon_param_requires_type_specifier, CLASS_NOTE, MAP_IGNORE, "type specifier required for unnamed parameter, defaults to int"),
	EXT_ANONYMOUS_STRUCT(ext_anonymous_struct, CLASS_NOTE, MAP_IGNORE, "anonymous structs are a GNU extension"),
	EXT_ANONYMOUS_UNION(ext_anonymous_union, CLASS_NOTE, MAP_IGNORE, "anonymous unions are a GNU extension in C"),
	EXT_C99_ARRAY_USAGE(ext_c99_array_usage, CLASS_NOTE, MAP_IGNORE, "use of C99-specific array features, accepted as an extension"),
	EXT_CAST_FN_OBJ(ext_cast_fn_obj, CLASS_NOTE, MAP_IGNORE, "cast between pointer-to-function and pointer-to-object is an extension"),
	EXT_ENUM_VALUE_NOT_INT(ext_enum_value_not_int, CLASS_NOTE, MAP_IGNORE, "ISO C restricts enumerator values to range of 'int' (%0 is too large)"),
	EXT_EXPLICIT_INSTANTIATION_AFTER_SPECIALIZATION(ext_explicit_instantiation_after_specialization, CLASS_NOTE, MAP_IGNORE, "explicit instantiation of %0 that occurs after an explicit specialization will be ignored (C++0x extension)"),
	EXT_EXPR_NOT_ICE(ext_expr_not_ice, CLASS_NOTE, MAP_IGNORE, "expression is not integer constant expression (but is allowed as an extension)"),
	EXT_FLEXIBLE_ARRAY_IN_ARRAY(ext_flexible_array_in_array, CLASS_NOTE, MAP_IGNORE, "%0 may not be used as an array element due to flexible array member"),
	EXT_FLEXIBLE_ARRAY_IN_STRUCT(ext_flexible_array_in_struct, CLASS_NOTE, MAP_IGNORE, "%0 may not be nested in a struct due to flexible array member"),
	EXT_FLEXIBLE_ARRAY_INIT(ext_flexible_array_init, CLASS_NOTE, MAP_IGNORE, "flexible array initialization is a GNU extension"),
	EXT_FORWARD_REF_ENUM(ext_forward_ref_enum, CLASS_NOTE, MAP_IGNORE, "ISO C forbids forward references to 'enum' types"),
	EXT_FREESTANDING_COMPLEX(ext_freestanding_complex, CLASS_NOTE, MAP_IGNORE, "complex numbers are an extension in a freestanding C99 implementation"),
	EXT_FRIEND_INNER_CLASS(ext_friend_inner_class, CLASS_NOTE, MAP_IGNORE, "C++ 98 does not allow inner classes as friends"),
	EXT_GNU_PTR_FUNC_ARITH(ext_gnu_ptr_func_arith, CLASS_NOTE, MAP_IGNORE, "arithmetic on pointer to function type %0 is a GNU extension"),
	EXT_GNU_SUBSCRIPT_VOID_TYPE(ext_gnu_subscript_void_type, CLASS_NOTE, MAP_IGNORE, "subscript of a pointer to void is a GNU extension"),
	EXT_GNU_VOID_PTR(ext_gnu_void_ptr, CLASS_NOTE, MAP_IGNORE, "use of GNU void* extension"),
	EXT_IMPLICIT_FUNCTION_DECL(ext_implicit_function_decl, CLASS_NOTE, MAP_IGNORE, "implicit declaration of function %0 is invalid in C99"),
	EXT_IMPLICIT_LIB_FUNCTION_DECL(ext_implicit_lib_function_decl, CLASS_NOTE, MAP_WARNING, "implicitly declaring C library function '%0' with type %1"),
	EXT_INTEGER_COMPLEMENT_COMPLEX(ext_integer_complement_complex, CLASS_NOTE, MAP_IGNORE, "ISO C does not support '~' for complex conjugation of %0"),
	EXT_INTEGER_INCREMENT_COMPLEX(ext_integer_increment_complex, CLASS_NOTE, MAP_IGNORE, "ISO C does not support '++'/'--' on complex integer type %0"),
	EXT_INVALID_SIGN_SPEC(ext_invalid_sign_spec, CLASS_NOTE, MAP_IGNORE, "'%0' cannot be signed or unsigned"),
	EXT_MISSING_DECLSPEC(ext_missing_declspec, CLASS_NOTE, MAP_WARNING, "declaration specifier missing, defaulting to 'int'"),
	EXT_MISSING_TYPE_SPECIFIER(ext_missing_type_specifier, CLASS_NOTE, MAP_WARNING, "type specifier missing, defaults to 'int'"),
	EXT_MIXED_DECLS_CODE(ext_mixed_decls_code, CLASS_NOTE, MAP_IGNORE, "ISO C90 forbids mixing declarations and code"),
	EXT_NULL_POINTER_EXPR_NOT_ICE(ext_null_pointer_expr_not_ice, CLASS_NOTE, MAP_IGNORE, "null pointer expression is not an integer constant expression (but is allowed as an extension)"),
	EXT_OFFSETOF_EXTENDED_FIELD_DESIGNATOR(ext_offsetof_extended_field_designator, CLASS_NOTE, MAP_IGNORE, "using extended field designator is an extension"),
	EXT_PARAM_NOT_DECLARED(ext_param_not_declared, CLASS_NOTE, MAP_IGNORE, "parameter %0 was not declared, defaulting to type 'int'"),
	EXT_PARAM_PROMOTED_NOT_COMPATIBLE_WITH_PROTOTYPE(ext_param_promoted_not_compatible_with_prototype, CLASS_NOTE, MAP_WARNING, "promoted type %0 of K&R function parameter is not compatible with the parameter type %1 declared in a previous prototype"),
	EXT_PREDEF_OUTSIDE_FUNCTION(ext_predef_outside_function, CLASS_WARNING, MAP_WARNING, "predefined identifier is only valid inside function"),
	EXT_RETURN_HAS_EXPR(ext_return_has_expr, CLASS_NOTE, MAP_WARNING, "void %select{function|method}1 %0 should not return a value"),
	EXT_RETURN_HAS_VOID_EXPR(ext_return_has_void_expr, CLASS_NOTE, MAP_IGNORE, "void %select{function|method}1 %0 should not return void expression"),
	EXT_RETURN_MISSING_EXPR(ext_return_missing_expr, CLASS_NOTE, MAP_WARNING, "non-void %select{function|method}1 %0 should return a value"),
	EXT_SIZEOF_FUNCTION_TYPE(ext_sizeof_function_type, CLASS_NOTE, MAP_IGNORE, "invalid application of 'sizeof' to a function type"),
	EXT_SIZEOF_VOID_TYPE(ext_sizeof_void_type, CLASS_NOTE, MAP_IGNORE, "invalid application of '%0' to a void type"),
	EXT_SUBSCRIPT_NON_LVALUE(ext_subscript_non_lvalue, CLASS_NOTE, MAP_IGNORE, "ISO C90 does not allow subscripting non-lvalue array"),
	EXT_TYPECHECK_ADDROF_VOID(ext_typecheck_addrof_void, CLASS_NOTE, MAP_IGNORE, "ISO C forbids taking the address of an expression of type 'void'"),
	EXT_TYPECHECK_BASE_SUPER(ext_typecheck_base_super, CLASS_NOTE, MAP_WARNING, "method parameter type %0 does not match super class method parameter type %1"),
	EXT_TYPECHECK_CAST_NONSCALAR(ext_typecheck_cast_nonscalar, CLASS_NOTE, MAP_IGNORE, "C99 forbids casting nonscalar type %0 to the same type"),
	EXT_TYPECHECK_CAST_TO_UNION(ext_typecheck_cast_to_union, CLASS_NOTE, MAP_IGNORE, "C99 forbids casts to union type"),
	EXT_TYPECHECK_COMPARISON_OF_DISTINCT_POINTERS(ext_typecheck_comparison_of_distinct_pointers, CLASS_NOTE, MAP_WARNING, "comparison of distinct pointer types (%0 and %1)"),
	EXT_TYPECHECK_COMPARISON_OF_POINTER_INTEGER(ext_typecheck_comparison_of_pointer_integer, CLASS_NOTE, MAP_WARNING, "comparison between pointer and integer (%0 and %1)"),
	EXT_TYPECHECK_COND_INCOMPATIBLE_OPERANDS(ext_typecheck_cond_incompatible_operands, CLASS_NOTE, MAP_WARNING, "incompatible operand types (%0 and %1)"),
	EXT_TYPECHECK_COND_ONE_VOID(ext_typecheck_cond_one_void, CLASS_NOTE, MAP_IGNORE, "C99 forbids conditional expressions with only one void side"),
	EXT_TYPECHECK_CONVERT_DISCARDS_QUALIFIERS(ext_typecheck_convert_discards_qualifiers, CLASS_NOTE, MAP_WARNING, "%2 %1 discards qualifiers, expected %0"),
	EXT_TYPECHECK_CONVERT_INCOMPATIBLE_POINTER(ext_typecheck_convert_incompatible_pointer, CLASS_NOTE, MAP_WARNING, "incompatible pointer types %2 %1, expected %0"),
	EXT_TYPECHECK_CONVERT_INCOMPATIBLE_POINTER_SIGN(ext_typecheck_convert_incompatible_pointer_sign, CLASS_NOTE, MAP_WARNING, "pointer types point to integer types with different sign %2 %1, expected %0"),
	EXT_TYPECHECK_CONVERT_INT_POINTER(ext_typecheck_convert_int_pointer, CLASS_NOTE, MAP_WARNING, "incompatible integer to pointer conversion %2 %1, expected %0"),
	EXT_TYPECHECK_CONVERT_POINTER_INT(ext_typecheck_convert_pointer_int, CLASS_NOTE, MAP_WARNING, "incompatible pointer to integer conversion %2 %1, expected %0"),
	EXT_TYPECHECK_CONVERT_POINTER_VOID_FUNC(ext_typecheck_convert_pointer_void_func, CLASS_NOTE, MAP_IGNORE, "%2 %1 converts between void* and function pointer, expected %0"),
	EXT_TYPECHECK_DECL_INCOMPLETE_TYPE(ext_typecheck_decl_incomplete_type, CLASS_NOTE, MAP_WARNING, "tentative definition of variable with internal linkage has incomplete non-array type %0"),
	EXT_TYPECHECK_EXPRESSION_NOT_CONSTANT_BUT_ACCEPTED(ext_typecheck_expression_not_constant_but_accepted, CLASS_NOTE, MAP_IGNORE, "expression is not a constant, but is accepted as one by GNU extensions"),
	EXT_TYPECHECK_ORDERED_COMPARISON_OF_FUNCTION_POINTERS(ext_typecheck_ordered_comparison_of_function_pointers, CLASS_NOTE, MAP_WARNING, "ordered comparison of function pointers (%0 and %1)"),
	EXT_TYPECHECK_ORDERED_COMPARISON_OF_POINTER_INTEGER(ext_typecheck_ordered_comparison_of_pointer_integer, CLASS_NOTE, MAP_WARNING, "ordered comparison between pointer and integer (%0 and %1)"),
	EXT_TYPECHECK_ZERO_ARRAY_SIZE(ext_typecheck_zero_array_size, CLASS_NOTE, MAP_IGNORE, "zero size arrays are an extension"),
	EXT_TYPEDEF_WITHOUT_A_NAME(ext_typedef_without_a_name, CLASS_NOTE, MAP_WARNING, "typedef requires a asmName"),
	EXT_VARIABLE_SIZED_TYPE_IN_STRUCT(ext_variable_sized_type_in_struct, CLASS_NOTE, MAP_WARNING, "field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension"),
	EXT_VLA(ext_vla, CLASS_NOTE, MAP_IGNORE, "variable length arrays are a C99 feature, accepted as an extension"),
	NOTE_AMBIGUOUS_CANDIDATE(note_ambiguous_candidate, CLASS_NOTE, MAP_FATAL, "candidate found by asmName lookup is %q0"),
	NOTE_AMBIGUOUS_MEMBER_FOUND(note_ambiguous_member_found, CLASS_NOTE, MAP_FATAL, "member found by ambiguous asmName lookup"),
	NOTE_ATTRIBUTE_OVERLOADABLE_PREV_OVERLOAD(note_attribute_overloadable_prev_overload, CLASS_NOTE, MAP_FATAL, "previous overload of function is here"),
	NOTE_CALLEE_DECL(note_callee_decl, CLASS_NOTE, MAP_IGNORE, "%0 declared here"),
	NOTE_DECLARED_AT(note_declared_at, CLASS_NOTE, MAP_FATAL, "declared at"),
	NOTE_DEFAULT_ARG_INSTANTIATION_HERE(note_default_arg_instantiation_here, CLASS_NOTE, MAP_FATAL, "in instantiation of default argument for '%0' required here"),
	NOTE_DEFAULT_ARGUMENT_DECLARED_HERE(note_default_argument_declared_here, CLASS_NOTE, MAP_FATAL, "default argument declared here"),
	NOTE_EXPLICIT_TEMPLATE_ARG_SUBSTITUTION_HERE(note_explicit_template_arg_substitution_here, CLASS_NOTE, MAP_FATAL, "while substituting explicitly-specified template arguments into function template %f, here"),
	NOTE_FIELD_DESIGNATOR_FOUND(note_field_designator_found, CLASS_NOTE, MAP_FATAL, "field designator refers here"),
	NOTE_FIELDORBASE_INITIALIZED_HERE(note_fieldorbase_initialized_here, CLASS_NOTE, MAP_FATAL, "%select{field|base}0 %1"),
	NOTE_FIRST_REQUIRED_HERE(note_first_required_here, CLASS_NOTE, MAP_FATAL, "synthesized method is first required here"),
	NOTE_FLEXIBLE_ARRAY_MEMBER(note_flexible_array_member, CLASS_NOTE, MAP_FATAL, "initialized flexible array member %0 is here"),
	NOTE_FUNCTION_TEMPLATE_DEDUCTION_INSTANTIATION_HERE(note_function_template_deduction_instantiation_here, CLASS_NOTE, MAP_FATAL, "while substituting deduced template arguments into function template %0, here"),
	NOTE_FUNCTION_TEMPLATE_SPEC_HERE(note_function_template_spec_here, CLASS_NOTE, MAP_FATAL, "in instantiation of function template specialization %q0 requested here"),
	NOTE_FUNCTION_WITH_INCOMPLETE_RETURN_TYPE(note_function_with_incomplete_return_type_declared_here, CLASS_NOTE, MAP_WARNING, "%0 declared here"),
	NOTE_INHERITANCE_IMPLICITLY_PRIVATE_HERE(note_inheritance_implicitly_private_here, CLASS_NOTE, MAP_FATAL, "inheritance is implicitly 'private'"),
	NOTE_INHERITANCE_SPECIFIER_HERE(note_inheritance_specifier_here, CLASS_NOTE, MAP_FATAL, "'%0' inheritance specifier here"),
	NOTE_LOCAL_VARIABLE_DECLARED_HERE(note_local_variable_declared_here, CLASS_NOTE, MAP_FATAL, "%0 declared here"),
	NOTE_MEMBER_DECLARED_HERE(note_member_declared_here, CLASS_NOTE, MAP_FATAL, "member %0 declared here"),
	NOTE_MEMBER_DEF_CLOSE_MATCH(note_member_def_close_match, CLASS_NOTE, MAP_FATAL, "member declaration nearly matches"),
	NOTE_MEMBER_OF_TEMPLATE_HERE(note_member_of_template_here, CLASS_NOTE, MAP_FATAL, "member is declared here"),
	NOTE_MEMBER_REFERENCE_NEEDS_CALL(note_member_reference_needs_call, CLASS_NOTE, MAP_FATAL, "perhaps you meant to call this function with '()'?"),
	NOTE_METHOD_SENT_FORWARD_CLASS(note_method_sent_forward_class, CLASS_NOTE, MAP_FATAL, "method %0 is used for the forward class"),
	NOTE_NONTEMPLATE_DECL_HERE(note_nontemplate_decl_here, CLASS_NOTE, MAP_FATAL, "non-templated declaration is here"),
	NOTE_NONTRIVIAL_HAS_NONTRIVIAL(note_nontrivial_has_nontrivial, CLASS_NOTE, MAP_FATAL, "because type %0 has a %select{member|base class}1 with a non-trivial %select{constructor|copy constructor|copy assignment operator|destructor}2"),
	NOTE_NONTRIVIAL_HAS_VIRTUAL(note_nontrivial_has_virtual, CLASS_NOTE, MAP_FATAL, "because type %0 has a virtual %select{member function|base class}1"),
	NOTE_NONTRIVIAL_USER_DEFINED(note_nontrivial_user_defined, CLASS_NOTE, MAP_FATAL, "because type %0 has a user-declared %select{constructor|copy constructor|copy assignment operator|destructor}1"),
	NOTE_OVERRIDDEN_VIRTUAL_FUNCTION(note_overridden_virtual_function, CLASS_NOTE, MAP_FATAL, "overridden virtual function is here"),
	NOTE_PARTIAL_SPEC_DEDUCT_INSTANTIATION_HERE(note_partial_spec_deduct_instantiation_here, CLASS_NOTE, MAP_FATAL, "during template argument deduction for class template partial specialization %0, here"),
	NOTE_PARTIAL_SPEC_UNUSED_PARAMETER(note_partial_spec_unused_parameter, CLASS_NOTE, MAP_FATAL, "non-deducible template parameter %0"),
	NOTE_PLEASE_INCLUDE_HEADER(note_please_include_header, CLASS_NOTE, MAP_FATAL, "please include the header <%0> or explicitly provide a declaration for '%1'"),
	NOTE_PREVIOUS_ACCESS_DECLARATION(note_previous_access_declaration, CLASS_NOTE, MAP_FATAL, "previously declared '%1' here"),
	NOTE_PREVIOUS_BUILTIN_DECLARATION(note_previous_builtin_declaration, CLASS_NOTE, MAP_FATAL, "%0 is a builtin with type %1"),
	NOTE_PREVIOUS_CLASS_DECL(note_previous_class_decl, CLASS_NOTE, MAP_FATAL, "%0 declared here"),
	NOTE_PREVIOUS_EXCEPTION_HANDLER(note_previous_exception_handler, CLASS_NOTE, MAP_FATAL, "for type %0"),
	NOTE_PREVIOUS_EXPLICIT_INSTANTIATION(note_previous_explicit_instantiation, CLASS_NOTE, MAP_FATAL, "previous explicit instantiation is here"),
	NOTE_PREVIOUS_INITIALIZER(note_previous_initializer, CLASS_NOTE, MAP_FATAL, "previous initialization %select{|with side effects }0is here%select{| (side effects may not occur at run time)}0"),
	NOTE_PREVIOUS_TEMPLATE_SPECIALIZATION(note_previous_template_specialization, CLASS_NOTE, MAP_FATAL, "previous template specialization is here"),
	NOTE_PROPERTY_IMPL_REQUIRED(note_property_impl_required, CLASS_NOTE, MAP_FATAL, "implementation is here"),
	NOTE_PROTECTED_BY___BLOCK(note_protected_by___block, CLASS_NOTE, MAP_FATAL, "jump bypasses setup of __block variable"),
	NOTE_PROTECTED_BY_CLEANUP(note_protected_by_cleanup, CLASS_NOTE, MAP_FATAL, "jump bypasses initialization of declaration with __attribute__((cleanup))"),
	NOTE_PROTECTED_BY_CXX_CATCH(note_protected_by_cxx_catch, CLASS_NOTE, MAP_FATAL, "jump bypasses initialization of catch block"),
	NOTE_PROTECTED_BY_CXX_TRY(note_protected_by_cxx_try, CLASS_NOTE, MAP_FATAL, "jump bypasses initialization of try block"),
	NOTE_PROTECTED_BY_OBJC_CATCH(note_protected_by_objc_catch, CLASS_NOTE, MAP_FATAL, "jump bypasses initialization of @catch block"),
	NOTE_PROTECTED_BY_OBJC_FINALLY(note_protected_by_objc_finally, CLASS_NOTE, MAP_FATAL, "jump bypasses initialization of @finally block"),
	NOTE_PROTECTED_BY_OBJC_SYNCHRONIZED(note_protected_by_objc_synchronized, CLASS_NOTE, MAP_FATAL, "jump bypasses initialization of @synchronized block"),
	NOTE_PROTECTED_BY_OBJC_TRY(note_protected_by_objc_try, CLASS_NOTE, MAP_FATAL, "jump bypasses initialization of @try block"),
	NOTE_PROTECTED_BY_VLA(note_protected_by_vla, CLASS_NOTE, MAP_FATAL, "jump bypasses initialization of variable length array"),
	NOTE_PROTECTED_BY_VLA_TYPEDEF(note_protected_by_vla_typedef, CLASS_NOTE, MAP_FATAL, "jump bypasses initialization of VLA typedef"),
	NOTE_PURE_VIRTUAL_FUNCTION(note_pure_virtual_function, CLASS_NOTE, MAP_FATAL, "pure virtual function %0"),
	NOTE_SENTINEL_HERE(note_sentinel_here, CLASS_NOTE, MAP_FATAL, "%select{function|method|block}0 has been explicitly marked sentinel here"),
	NOTE_TEMPLATE_ARG_INTERNAL_OBJECT(note_template_arg_internal_object, CLASS_NOTE, MAP_FATAL, "non-template argument refers to %select{function|object}0 here"),
	NOTE_TEMPLATE_ARG_REFERS_HERE(note_template_arg_refers_here, CLASS_NOTE, MAP_FATAL, "non-template argument refers here"),
	NOTE_TEMPLATE_ARG_REFERS_HERE_FUNC(note_template_arg_refers_here_func, CLASS_NOTE, MAP_FATAL, "template argument refers to function template %0, here"),
	NOTE_TEMPLATE_CLASS_INSTANTIATION_HERE(note_template_class_instantiation_here, CLASS_NOTE, MAP_FATAL, "in instantiation of template class %0 requested here"),
	NOTE_TEMPLATE_DECL_HERE(note_template_decl_here, CLASS_NOTE, MAP_FATAL, "template is declared here"),
	NOTE_TEMPLATE_EXPORT_UNSUPPORTED(note_template_export_unsupported, CLASS_NOTE, MAP_FATAL, "exported templates are unsupported"),
	NOTE_TEMPLATE_MEMBER_CLASS_HERE(note_template_member_class_here, CLASS_NOTE, MAP_FATAL, "in instantiation of member class %0 requested here"),
	NOTE_TEMPLATE_MEMBER_FUNCTION_HERE(note_template_member_function_here, CLASS_NOTE, MAP_FATAL, "in instantiation of member function %q0 requested here"),
	NOTE_TEMPLATE_NONTYPE_PARM_DIFFERENT_TYPE(note_template_nontype_parm_different_type, CLASS_NOTE, MAP_FATAL, "template non-type parameter has a different type %0 in template argument"),
	NOTE_TEMPLATE_NONTYPE_PARM_PREV_DECLARATION(note_template_nontype_parm_prev_declaration, CLASS_NOTE, MAP_FATAL, "previous non-type template parameter with type %0 is here"),
	NOTE_TEMPLATE_PARAM_DIFFERENT_KIND(note_template_param_different_kind, CLASS_NOTE, MAP_FATAL, "template parameter has a different kind in template argument"),
	NOTE_TEMPLATE_PARAM_HERE(note_template_param_here, CLASS_NOTE, MAP_FATAL, "template parameter is declared here"),
	NOTE_TEMPLATE_PARAM_LIST_DIFFERENT_ARITY(note_template_param_list_different_arity, CLASS_NOTE, MAP_FATAL, "%select{too few|too many}0 template parameters in template template argument"),
	NOTE_TEMPLATE_PARAM_PREV_DEFAULT_ARG(note_template_param_prev_default_arg, CLASS_NOTE, MAP_FATAL, "previous default template argument defined here"),
	NOTE_TEMPLATE_PREV_DECLARATION(note_template_prev_declaration, CLASS_NOTE, MAP_FATAL, "previous template %select{declaration|template parameter}0 is here"),
	NOTE_TEMPLATE_RECURSION_DEPTH(note_template_recursion_depth, CLASS_NOTE, MAP_FATAL, "use -ftemplate-depth-N to increase recursive template instantiation depth"),
	NOTE_TEMPLATE_STATIC_DATA_MEMBER_DEF_HERE(note_template_static_data_member_def_here, CLASS_NOTE, MAP_FATAL, "in instantiation of static data member %q0 requested here"),
	NOTE_TEMPLATE_UNNAMED_TYPE_HERE(note_template_unnamed_type_here, CLASS_NOTE, MAP_FATAL, "unnamed type used in template argument was declared here"),
	NOTE_TRANSPARENT_UNION_FIRST_FIELD_SIZE_ALIGN(note_transparent_union_first_field_size_align, CLASS_NOTE, MAP_FATAL, "%select{alignment|size}0 of first field is %1 bits"),
	NOTE_TYPENAME_REFERS_HERE(note_typename_refers_here, CLASS_NOTE, MAP_FATAL, "referenced member %0 is declared here"),
	NOTE_UNAVAILABLE_HERE(note_unavailable_here, CLASS_NOTE, MAP_FATAL, "function has been explicitly marked %select{unavailable|deleted}0 here"),
	NOTE_UNINIT_REFERENCE_MEMBER(note_uninit_reference_member, CLASS_NOTE, MAP_FATAL, "uninitialized reference member is here"),
	UNSUP_FUNCTION_TEMPLATE_PARTIAL_ORDERING(unsup_function_template_partial_ordering, CLASS_WARNING, MAP_WARNING, "partial ordering of function templates is unsupported; overload resolution may result in an ambiguity that would not occur with a conforming compiler"),
	UNSUP_TEMPLATE_PARTIAL_SPEC_ORDERING(unsup_template_partial_spec_ordering,CLASS_ERROR, MAP_ERROR, "partial ordering of class template partial specializations is not yet supported"),
	WARN_ACCESSOR_PROPERTY_TYPE_MISMATCH(warn_accessor_property_type_mismatch, CLASS_WARNING, MAP_WARNING, "type of property %0 does not match type of accessor %1"),
	WARN_ATTRIBUTE_IGNORED(warn_attribute_ignored, CLASS_WARNING, MAP_WARNING, "%0 attribute ignored"),
	WARN_ATTRIBUTE_IGNORED_FOR_FIELD_OF_TYPE(warn_attribute_ignored_for_field_of_type, CLASS_WARNING, MAP_WARNING, "%0 attribute ignored for field of type %1"),
	WARN_ATTRIBUTE_MALLOC_POINTER_ONLY(warn_attribute_malloc_pointer_only, CLASS_WARNING, MAP_WARNING, "'malloc' attribute only applies to functions returning a pointer type"),
	WARN_ATTRIBUTE_METHOD_DEF(warn_attribute_method_def, CLASS_WARNING, MAP_WARNING, "method attribute can only be specified on method declarations"),
	WARN_ATTRIBUTE_NONNULL_NO_POINTERS(warn_attribute_nonnull_no_pointers, CLASS_WARNING, MAP_WARNING, "'nonnull' attribute applied to function with no pointer arguments"),
	WARN_ATTRIBUTE_PRECEDE_DEFINITION(warn_attribute_precede_definition, CLASS_WARNING, MAP_WARNING, "attribute declaration must precede definition"),
	WARN_ATTRIBUTE_SENTINEL_NAMED_ARGUMENTS(warn_attribute_sentinel_named_arguments, CLASS_WARNING, MAP_WARNING, "'sentinel' attribute requires named arguments"),
	WARN_ATTRIBUTE_SENTINEL_NOT_VARIADIC(warn_attribute_sentinel_not_variadic, CLASS_WARNING, MAP_WARNING, "'sentinel' attribute only supported for variadic %select{functions|blocks}0"),
	WARN_ATTRIBUTE_TYPE_NOT_SUPPORTED(warn_attribute_type_not_supported, CLASS_WARNING, MAP_WARNING, "'%0' attribute argument not supported: %1"),
	WARN_ATTRIBUTE_UNKNOWN_VISIBILITY(warn_attribute_unknown_visibility, CLASS_WARNING, MAP_WARNING, "unknown visibility '%1'"),
	WARN_ATTRIBUTE_WEAK_IMPORT_INVALID_ON_DEFINITION(warn_attribute_weak_import_invalid_on_definition, CLASS_WARNING, MAP_WARNING, "'weak_import' attribute cannot be specified on a definition"),
	WARN_ATTRIBUTE_WEAK_ON_FIELD(warn_attribute_weak_on_field, CLASS_WARNING, MAP_WARNING, "__weak attribute cannot be specified on a field declaration"),
	WARN_ATTRIBUTE_WEAK_ON_LOCAL(warn_attribute_weak_on_local, CLASS_WARNING, MAP_WARNING, "__weak attribute cannot be specified on an automatic variable"),
	WARN_ATTRIBUTE_WRONG_DECL_TYPE(warn_attribute_wrong_decl_type, CLASS_WARNING, MAP_WARNING, "%0 attribute only applies to %select{function|union|variable and function|function or method|parameter|parameter or Objective-C method |function, method or block}1 types"),
	WARN_BAD_RECEIVER_TYPE(warn_bad_receiver_type, CLASS_WARNING, MAP_WARNING, "receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'"),
	WARN_BASE_INITIALIZED(warn_base_initialized, CLASS_WARNING, MAP_IGNORE, "base class %0 will be initialized after"),
	WARN_BRACES_AROUND_SCALAR_INIT(warn_braces_around_scalar_init, CLASS_WARNING, MAP_WARNING, "braces around scalar initializer"),
	WARN_CALL_WRONG_NUMBER_OF_ARGUMENTS(warn_call_wrong_number_of_arguments, CLASS_WARNING, MAP_WARNING, "too %select{few|many}0 arguments in call to %1"),
	WARN_CANNOT_PASS_NON_POD_ARG_TO_VARARG(warn_cannot_pass_non_pod_arg_to_vararg, CLASS_WARNING, MAP_WARNING, "cannot pass object of non-POD type %0 through variadic %select{function|block|method}1; call will abort at runtime"),
	WARN_CASE_EMPTY_RANGE(warn_case_empty_range, CLASS_WARNING, MAP_WARNING, "empty case range specified"),
	WARN_CASE_VALUE_OVERFLOW(warn_case_value_overflow, CLASS_WARNING, MAP_WARNING, "overflow converting case value to switch condition type (%0 to %1)"),
	WARN_CFSTRING_LITERAL_CONTAINS_NUL_CHARACTER(warn_cfstring_literal_contains_nul_character, CLASS_WARNING, MAP_WARNING, "CFString literal contains NUL character"),
	WARN_CLASS_METHOD_NOT_FOUND(warn_class_method_not_found, CLASS_WARNING, MAP_WARNING, "method %objcclass0 not found (return type defaults to 'id')"),
	WARN_CONFLICTING_PARAM_TYPES(warn_conflicting_param_types, CLASS_WARNING, MAP_WARNING, "conflicting parameter types in implementation of %0: %1 vs %2"),
	WARN_CONFLICTING_RET_TYPES(warn_conflicting_ret_types, CLASS_WARNING, MAP_WARNING, "conflicting return type in implementation of %0: %1 vs %2"),
	WARN_CONV_TO_BASE_NOT_USED(warn_conv_to_base_not_used, CLASS_WARNING, MAP_WARNING, "conversion function converting %0 to its base class %1 will never be used"),
	WARN_CONV_TO_SELF_NOT_USED(warn_conv_to_self_not_used, CLASS_WARNING, MAP_WARNING, "conversion function converting %0 to itself will never be used"),
	WARN_CONV_TO_VOID_NOT_USED(warn_conv_to_void_not_used, CLASS_WARNING, MAP_WARNING, "conversion function converting %0 to %1 will never be used"),
	WARN_DECL_IN_PARAM_LIST(warn_decl_in_param_list, CLASS_WARNING, MAP_WARNING, "declaration of %0 will not be visible outside of this function"),
	WARN_DECL_SHADOW(warn_decl_shadow, CLASS_WARNING, MAP_WARNING, "declaration shadows a %select{"+
			"local variable|" +
			"variable in %2|" +
			"static data member of %2|" +
			"field of %2}1"),
	WARN_DELETE_INCOMPLETE(warn_delete_incomplete, CLASS_WARNING, MAP_WARNING, "deleting pointer to incomplete type %0 may cause undefined behaviour"),
	WARN_DEPRECATED(warn_deprecated, CLASS_WARNING, MAP_WARNING, "%0 is deprecated"),
	WARN_DUP_CATEGORY_DEF(warn_dup_category_def, CLASS_WARNING, MAP_WARNING, "duplicate definition of category %1 on interface %0"),
	WARN_DUPLICATE_PROTOCOL_DEF(warn_duplicate_protocol_def, CLASS_WARNING, MAP_WARNING, "duplicate protocol definition of %0 is ignored"),
	WARN_EMPTY_IF_BODY(warn_empty_if_body, CLASS_WARNING, MAP_WARNING, "if statement has empty body"),
	WARN_ENUM_TOO_LARGE(warn_enum_too_large, CLASS_WARNING, MAP_WARNING, "enumeration values exceed range of largest integer"),
	WARN_ENUM_VALUE_OVERFLOW(warn_enum_value_overflow, CLASS_WARNING, MAP_WARNING, "overflow in enumeration value"),
	WARN_EXCEPTION_CAUGHT_BY_EARLIER_HANDLER(warn_exception_caught_by_earlier_handler, CLASS_WARNING, MAP_WARNING, "exception of type %0 will be caught by earlier handler"),
	WARN_EXCESS_INITIALIZERS(warn_excess_initializers, CLASS_NOTE, MAP_WARNING, "excess elements in %select{array|vector|scalar|union|struct}0 initializer"),
	WARN_EXCESS_INITIALIZERS_IN_CHAR_ARRAY_INITIALIZER(warn_excess_initializers_in_char_array_initializer, CLASS_NOTE, MAP_WARNING, "excess elements in char array initializer"),
	WARN_EXPLICIT_CONVERSION_FUNCTIONS(warn_explicit_conversion_functions, CLASS_WARNING, MAP_WARNING, "explicit conversion functions are a C++0x extension"),
	WARN_EXTERN_INIT(warn_extern_init, CLASS_WARNING, MAP_WARNING, "'extern' variable has an initializer"),
	WARN_FALLOFF_NONVOID_FUNCTION(warn_falloff_nonvoid_function, CLASS_WARNING, MAP_WARNING, "control reaches end of non-void function"),
	WARN_FALLOFF_NORETURN_FUNCTION(warn_falloff_noreturn_function, CLASS_WARNING, MAP_ERROR, "function declared 'noreturn' should not return"),
	WARN_FIELD_INITIALIZED(warn_field_initialized, CLASS_WARNING, MAP_IGNORE, "member '%0' will be initialized after"),
	WARN_FLOATINGPOINT_EQ(warn_floatingpoint_eq, CLASS_WARNING, MAP_IGNORE, "comparing floating point with == or != is unsafe"),
	WARN_GNU_INLINE_ATTRIBUTE_REQUIRES_INLINE(warn_gnu_inline_attribute_requires_inline, CLASS_WARNING, MAP_WARNING, "'gnu_inline' attribute requires function to be marked 'inline', attribute ignored"),
	WARN_ILLEGAL_CONSTANT_ARRAY_SIZE(warn_illegal_constant_array_size, CLASS_NOTE, MAP_IGNORE, "size of static array must be an integer constant expression"),
	WARN_IMPLEMENTS_NSCOPYING(warn_implements_nscopying, CLASS_WARNING, MAP_WARNING, "default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]"),
	WARN_IMPLICIT_FUNCTION_DECL(warn_implicit_function_decl, CLASS_WARNING, MAP_IGNORE, "implicit declaration of function %0"),
	WARN_INCOMPATIBLE_QUALIFIED_ID(warn_incompatible_qualified_id, CLASS_WARNING, MAP_WARNING, "incompatible type %2 %1, expected %0"),
	WARN_INCOMPATIBLE_VECTORS(warn_incompatible_vectors, CLASS_WARNING, MAP_IGNORE, "incompatible vector types %2 %1, expected %0"),
	WARN_INCOMPLETE_IMPL(warn_incomplete_impl, CLASS_WARNING, MAP_WARNING, "incomplete implementation"),
	WARN_INCREMENT_BOOL(warn_increment_bool, CLASS_WARNING, MAP_WARNING, "incrementing expression of type bool is deprecated"),
	WARN_INITIALIZER_OVERRIDES(warn_initializer_overrides, CLASS_WARNING, MAP_WARNING, "initializer overrides prior initialization of this subobject"),
	WARN_INITIALIZER_STRING_FOR_CHAR_ARRAY_TOO_LONG(warn_initializer_string_for_char_array_too_long, CLASS_NOTE, MAP_WARNING, "initializer-string for char array is too long"),
	WARN_INST_METHOD_NOT_FOUND(warn_inst_method_not_found, CLASS_WARNING, MAP_WARNING, "method %objcinstance0 not found (return type defaults to 'id')"),
	WARN_INVALID_ASM_CAST_LVALUE(warn_invalid_asm_cast_lvalue, CLASS_WARNING, MAP_WARNING, "invalid use of a cast in a inline asm context requiring an l-value: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future"),
	WARN_IVAR_USE_HIDDEN(warn_ivar_use_hidden, CLASS_WARNING, MAP_WARNING, "local declaration of %0 hides instance variable"),
	WARN_MAIN_ONE_ARG(warn_main_one_arg, CLASS_WARNING, MAP_WARNING, "one-argument 'main' is usually a mistake"),
	WARN_MAYBE_FALLOFF_NONVOID_FUNCTION(warn_maybe_falloff_nonvoid_function, CLASS_WARNING, MAP_WARNING, "control may reach end of non-void function"),
	WARN_MAYNOT_RESPOND(warn_maynot_respond, CLASS_WARNING, MAP_WARNING, "%0  may not respond to %1"),
	WARN_MISSING_CASE_FOR_CONDITION(warn_missing_case_for_condition, CLASS_WARNING, MAP_WARNING, "no case matching constant switch condition '%0'"),
	WARN_MISSING_CASE1(warn_missing_case1, CLASS_WARNING, MAP_WARNING, "enumeration value %0 not handled in switch"),
	WARN_MISSING_CASE2(warn_missing_case2, CLASS_WARNING, MAP_WARNING, "enumeration values %0 and %1 not handled in switch"),
	WARN_MISSING_CASE3(warn_missing_case3, CLASS_WARNING, MAP_WARNING, "enumeration values %0, %1, and %2 not handled in switch"),
	WARN_MISSING_CASES(warn_missing_cases, CLASS_WARNING, MAP_WARNING, "%0 enumeration values not handled in switch: %1, %2, %3..."),
	WARN_MISSING_PROTOTYPE(warn_missing_prototype, CLASS_WARNING, MAP_IGNORE, "no previous prototype for function %0"),
	WARN_MISSING_SENTINEL(warn_missing_sentinel, CLASS_WARNING, MAP_WARNING, "missing sentinel in %select{function call|method dispatch|block call}0"),
	WARN_MULTIPLE_METHOD_DECL(warn_multiple_method_decl, CLASS_WARNING, MAP_WARNING, "multiple methods named %0 found"),
	WARN_NORETURN_FUNCTION_HAS_RETURN_EXPR(warn_noreturn_function_has_return_expr, CLASS_WARNING, MAP_ERROR, "function %0 declared 'noreturn' should not return"),
	WARN_NOT_COMPOUND_ASSIGN(warn_not_compound_assign, CLASS_WARNING, MAP_WARNING, "use of unary operator that may be intended as compound assignment (%0=)"),
	WARN_NOT_ENOUGH_ARGUMENT(warn_not_enough_argument, CLASS_WARNING, MAP_WARNING, "not enough variable arguments in %0 declaration to fit a sentinel"),
	WARN_NOT_IN_ENUM(warn_not_in_enum, CLASS_WARNING, MAP_WARNING, "case value not in enumerated type %0"),
	WARN_NS_ATTRIBUTE_WRONG_RETURN_TYPE(warn_ns_attribute_wrong_return_type, CLASS_WARNING, MAP_WARNING, "%0 attribute only applies to functions or methods that return a pointer or Objective-C object"),
	WARN_NULL_ARG(warn_null_arg, CLASS_WARNING, MAP_WARNING, "null passed to a callee which requires a non-null argument"),
	WARN_OBJC_PROPERTY_ATTR_MUTUALLY_EXCLUSIVE(warn_objc_property_attr_mutually_exclusive, CLASS_WARNING, MAP_IGNORE, "property attributes '%0' and '%1' are mutually exclusive"),
	WARN_OBJC_PROPERTY_COPY_MISSING_ON_BLOCK(warn_objc_property_copy_missing_on_block, CLASS_WARNING, MAP_WARNING, "'copy' attribute must be specified for the block property when -fobjc-gc-only is specified"),
	WARN_OBJC_PROPERTY_DEFAULT_ASSIGN_ON_OBJECT(warn_objc_property_default_assign_on_object, CLASS_WARNING, MAP_WARNING, "default property attribute 'assign' not appropriate for non-gc object"),
	WARN_OBJC_PROPERTY_NO_ASSIGNMENT_ATTRIBUTE(warn_objc_property_no_assignment_attribute, CLASS_WARNING, MAP_WARNING, "no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed"),
	WARN_OFFSETOF_NON_POD_TYPE(warn_offsetof_non_pod_type, CLASS_NOTE, MAP_WARNING, "offset of on non-POD type %0"),
	WARN_PARTIAL_SPECS_NOT_DEDUCIBLE(warn_partial_specs_not_deducible, CLASS_WARNING, MAP_WARNING, "class template partial specialization contains %select{a template parameter|template parameters}0 that can not be deduced; this partial specialization will never be used"),
	WARN_PRAGMA_PACK_INVALID_ALIGNMENT(warn_pragma_pack_invalid_alignment, CLASS_WARNING, MAP_WARNING, "expected #pragma pack parameter to be '1', '2', '4', '8', or '16'"),
	WARN_PRAGMA_PACK_POP_FAILED(warn_pragma_pack_pop_failed, CLASS_WARNING, MAP_WARNING, "#pragma pack(pop, ...) failed: %0"),
	WARN_PRAGMA_PACK_POP_IDENTIFER_AND_ALIGNMENT(warn_pragma_pack_pop_identifer_and_alignment, CLASS_WARNING, MAP_WARNING, "specifying both a asmName and alignment to 'pop' is undefined"),
	WARN_PRAGMA_PACK_SHOW(warn_pragma_pack_show, CLASS_WARNING, MAP_WARNING, "value of #pragma pack(show) == %0"),
	WARN_PRAGMA_UNUSED_EXPECTED_LOCALVAR(warn_pragma_unused_expected_localvar, CLASS_WARNING, MAP_WARNING, "only local variables can be arguments to '#pragma unused'"),
	WARN_PRAGMA_UNUSED_UNDECLARED_VAR(warn_pragma_unused_undeclared_var, CLASS_WARNING, MAP_WARNING, "undeclared variable %0 used as an argument for '#pragma unused'"),
	WARN_PREVIOUS_ALIAS_DECL(warn_previous_alias_decl, CLASS_WARNING, MAP_WARNING, "previously declared alias is ignored"),
	WARN_PRINTF_ASTERISK_PRECISION_MISSING_ARG(warn_printf_asterisk_precision_missing_arg, CLASS_WARNING, MAP_WARNING, "'.*' specified field precision is missing a matching 'int' argument"),
	WARN_PRINTF_ASTERISK_PRECISION_WRONG_TYPE(warn_printf_asterisk_precision_wrong_type, CLASS_WARNING, MAP_WARNING, "field precision should have type 'int', but argument has type %0"),
	WARN_PRINTF_ASTERISK_WIDTH_MISSING_ARG(warn_printf_asterisk_width_missing_arg, CLASS_WARNING, MAP_WARNING, "'*' specified field width is missing a matching 'int' argument"),
	WARN_PRINTF_ASTERISK_WIDTH_WRONG_TYPE(warn_printf_asterisk_width_wrong_type, CLASS_WARNING, MAP_WARNING, "field width should have type 'int', but argument has type %0"),
	WARN_PRINTF_EMPTY_FORMAT_STRING(warn_printf_empty_format_string, CLASS_WARNING, MAP_WARNING, "format string is empty"),
	WARN_PRINTF_FORMAT_STRING_CONTAINS_NULL_CHAR(warn_printf_format_string_contains_null_char, CLASS_WARNING, MAP_WARNING, "format string contains '\0' within the string body"),
	WARN_PRINTF_FORMAT_STRING_IS_WIDE_LITERAL(warn_printf_format_string_is_wide_literal, CLASS_WARNING, MAP_WARNING, "format string should not be a wide string"),
	WARN_PRINTF_INSUFFICIENT_DATA_ARGS(warn_printf_insufficient_data_args, CLASS_WARNING, MAP_WARNING, "more '%%' conversions than data arguments"),
	WARN_PRINTF_INVALID_CONVERSION(warn_printf_invalid_conversion, CLASS_WARNING, MAP_WARNING, "invalid conversion '%0'"),
	WARN_PRINTF_MISSING_FORMAT_STRING(warn_printf_missing_format_string, CLASS_WARNING, MAP_WARNING, "format string missing"),
	WARN_PRINTF_NONLITERAL(warn_printf_nonliteral, CLASS_WARNING, MAP_IGNORE, "format string is not a string literal"),
	WARN_PRINTF_NONLITERAL_NOARGS(warn_printf_nonliteral_noargs, CLASS_WARNING, MAP_WARNING, "format string is not a string literal (potentially insecure)"),
	WARN_PRINTF_TOO_MANY_DATA_ARGS(warn_printf_too_many_data_args, CLASS_WARNING, MAP_WARNING, "more data arguments than '%%' conversions"),
	WARN_PRINTF_WRITE_BACK(warn_printf_write_back, CLASS_WARNING, MAP_WARNING, "use of '%%n' in format string discouraged (potentially insecure)"),
	WARN_PROPERTY_ATTR_MISMATCH(warn_property_attr_mismatch, CLASS_WARNING, MAP_WARNING, "property attribute in continuation class does not match the primary class"),
	WARN_PROPERTY_ATTRIBUTE(warn_property_attribute, CLASS_WARNING, MAP_WARNING, "property %0 '%1' attribute does not match the property inherited from %2"),
	WARN_PROPERTY_TYPES_ARE_INCOMPATIBLE(warn_property_types_are_incompatible, CLASS_WARNING, MAP_WARNING, "property type %0 is incompatible with type %1 inherited from %2"),
	WARN_READONLY_PROPERTY(warn_readonly_property, CLASS_WARNING, MAP_WARNING, "attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1"),
	WARN_RECEIVER_FORWARD_CLASS(warn_receiver_forward_class, CLASS_WARNING, MAP_WARNING, "receiver %0 is a forward class and corresponding @interface may not exist"),
	WARN_REDECL_LIBRARY_BUILTIN(warn_redecl_library_builtin, CLASS_WARNING, MAP_WARNING, "incompatible redeclaration of library function %0"),
	WARN_REDECLARATION_WITHOUT_ATTRIBUTE_PREV_ATTRIBUTE_IGNORED(warn_redeclaration_without_attribute_prev_attribute_ignored, CLASS_WARNING, MAP_WARNING, "'%0' redeclared without %1 attribute: previous %1 ignored"),
	WARN_REDEFINITION_OF_TYPEDEF(warn_redefinition_of_typedef, CLASS_WARNING, MAP_ERROR, "redefinition of typedef %0 is invalid in C"),
	WARN_RET_STACK_ADDR(warn_ret_stack_addr, CLASS_WARNING, MAP_WARNING, "address of stack memory associated with local variable %0 returned"),
	WARN_RET_STACK_REF(warn_ret_stack_ref, CLASS_WARNING, MAP_WARNING, "reference to stack memory associated with local variable %0 returned"),
	WARN_RETURN_MISSING_EXPR(warn_return_missing_expr, CLASS_WARNING, MAP_WARNING, "non-void %select{function|method}1 %0 should return a value"),
	WARN_ROOT_INST_METHOD_NOT_FOUND(warn_root_inst_method_not_found, CLASS_WARNING, MAP_WARNING, "instance method %0 is being used on 'Class' which is not in the root class"),
	WARN_SECOND_PARAMETER_OF_VA_START_NOT_LAST_NAMED_ARGUMENT(warn_second_parameter_of_va_start_not_last_named_argument, CLASS_WARNING, MAP_WARNING, "second parameter of 'va_start' not last named argument"),
	WARN_SELFCOMPARISON(warn_selfcomparison, CLASS_WARNING, MAP_WARNING, "self-comparison always results in a constant value"),
	WARN_SETTER_GETTER_IMPL_REQUIRED(warn_setter_getter_impl_required, CLASS_WARNING, MAP_WARNING, "property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation"),
	WARN_SHIFT_GT_TYPEWIDTH(warn_shift_gt_typewidth, CLASS_WARNING, MAP_WARNING, "shift count >= width of type"),
	WARN_SHIFT_NEGATIVE(warn_shift_negative, CLASS_WARNING, MAP_WARNING, "shift count is negative"),
	WARN_STANDALONE_SPECIFIERS(warn_standalone_specifier, CLASS_WARNING, MAP_WARNING, "'%0' ignored on this declaration"),
	WARN_STRINGCOMPARE(warn_stringcompare, CLASS_WARNING, MAP_WARNING, "result of comparison against %select{a string literal|@encode}0 is unspecified (use strcmp instead)"),
	WARN_STRUCT_CLASS_TAG_MISMATCH(warn_struct_class_tag_mismatch, CLASS_WARNING, MAP_IGNORE, "%select{struct|class}0 %select{|template}1 %2 was previously declared as a %select{class|struct}0 %select{|template}1"),
	WARN_SUBOBJECT_INITIALIZER_OVERRIDES(warn_subobject_initializer_overrides, CLASS_WARNING, MAP_WARNING, "subobject initialization overrides initialization of other fields within its enclosing subobject"),
	WARN_SUBSCRIPT_IS_CHAR(warn_subscript_is_char, CLASS_WARNING, MAP_WARNING, "array subscript is of type 'char'"),
	WARN_SUGGEST_NORETURN_BLOCK(warn_suggest_noreturn_block, CLASS_WARNING, MAP_IGNORE, "block could be attribute 'noreturn'"),
	WARN_SUGGEST_NORETURN_FUNCTION(warn_suggest_noreturn_function, CLASS_WARNING, MAP_IGNORE, "function could be attribute 'noreturn'"),
	WARN_TENTATIVE_INCOMPLETE_ARRAY(warn_tentative_incomplete_array, CLASS_WARNING, MAP_WARNING, "tentative array definition assumed to have one element"),
	WARN_TRANSPARENT_UNION_ATTRIBUTE_FIELD_SIZE_ALIGN(warn_transparent_union_attribute_field_size_align, CLASS_WARNING, MAP_WARNING, "%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored"),
	WARN_TRANSPARENT_UNION_ATTRIBUTE_FLOATING(warn_transparent_union_attribute_floating, CLASS_WARNING, MAP_WARNING, "first field of a transparent union cannot have floating point or vector type; transparent_union attribute ignored"),
	WARN_TRANSPARENT_UNION_ATTRIBUTE_NOT_DEFINITION(warn_transparent_union_attribute_not_definition, CLASS_WARNING, MAP_WARNING, "transparent_union attribute can only be applied to a union definition; attribute ignored"),
	WARN_TRANSPARENT_UNION_ATTRIBUTE_ZERO_FIELDS(warn_transparent_union_attribute_zero_fields, CLASS_WARNING, MAP_WARNING, "transparent union definition must contain at least one field; transparent_union attribute ignored"),
	WARN_TRANSPARENT_UNION_NONPOINTER(warn_transparent_union_nonpointer, CLASS_WARNING, MAP_WARNING, "'transparent_union' attribute support incomplete; only supported for pointer unions"),
	WARN_TYPECHECK_COND_INCOMPATIBLE_POINTERS(warn_typecheck_cond_incompatible_pointers, CLASS_NOTE, MAP_WARNING, "pointer type mismatch (%0 and %1)"),
	WARN_TYPECHECK_COND_POINTER_INTEGER_MISMATCH(warn_typecheck_cond_pointer_integer_mismatch, CLASS_NOTE, MAP_WARNING, "pointer/integer type mismatch in conditional expression (%0 and %1)"),
	WARN_TYPECHECK_FUNCTION_QUALIFIERS(warn_typecheck_function_qualifiers, CLASS_WARNING, MAP_WARNING, "qualifier on function type %0 has unspecified behavior"),
	WARN_UNAVAILABLE(warn_unavailable, CLASS_WARNING, MAP_WARNING, "%0 is unavailable"),
	WARN_UNDECLARED_SELECTOR(warn_undeclared_selector, CLASS_WARNING, MAP_IGNORE, "undeclared selector %0"),
	WARN_UNDEF_INTERFACE(warn_undef_interface, CLASS_WARNING, MAP_WARNING, "cannot find interface declaration for %0"),
	WARN_UNDEF_METHOD_IMPL(warn_undef_method_impl, CLASS_WARNING, MAP_WARNING, "method definition for %0 not found"),
	WARN_UNDEF_PROTOCOLREF(warn_undef_protocolref, CLASS_WARNING, MAP_WARNING, "cannot find protocol definition for %0"),
	WARN_UNUSED_EXPR(warn_unused_expr, CLASS_WARNING, MAP_WARNING, "expression result unused"),
	WARN_UNUSED_PARAMETER(warn_unused_parameter, CLASS_WARNING, MAP_IGNORE, "unused parameter %0"),
	WARN_UNUSED_PROPERTY_EXPR(warn_unused_property_expr, CLASS_WARNING, MAP_WARNING, "property access result unused - getters should not have side effects"),
	WARN_UNUSUAL_MAIN_DECL(warn_unusual_main_decl, CLASS_WARNING, MAP_WARNING, "'main' should not be declared %select{static|inline|static or inline}0"),
	WARN_USE_OUT_OF_SCOPE_DECLARATION(warn_use_out_of_scope_declaration, CLASS_WARNING, MAP_WARNING, "use of out-of-scope declaration of %0"),
	WARN_VALUE_ALWAYS_FALSE(warn_value_always_false, CLASS_WARNING, MAP_WARNING, "%0 is always false in this context"),
	WARN_VALUE_ALWAYS_ZERO(warn_value_always_zero, CLASS_WARNING, MAP_WARNING, "%0 is always zero in this context"),
	WARN_WEAK_IDENTIFIER_UNDECLARED(warn_weak_identifier_undeclared, CLASS_WARNING, MAP_WARNING, "weak identifier %0 never declared");

	public int diagID;
	public Diagnostic.DiagnosticClass diagClass;
	public Diagnostic.Mapping diagMapping;
    public boolean sfinae;
    public String optionGroup;
	public String text;

	DiagnosticSemaKinds(int diagID,
			Diagnostic.DiagnosticClass diagClass,
			Diagnostic.Mapping diagMapping, 
			String text)
	{
		this.diagID = diagID;
		this.diagClass = diagClass;
		this.diagMapping = diagMapping;
		this.text = text;
	}
}
