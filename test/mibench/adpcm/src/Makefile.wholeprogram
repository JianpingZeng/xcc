#
# Makefile for adpcm and test programs
# -------------------

#####################################################################
# Added by C. Lee.
#
# On Sun machines, gcc need to be informed whether the machines have
# integer multipliers by specifying this option: -mv8.
#
# Also, on Sun machines, in order to use the SPIXTOOLS and SHADE,
# uncomment this option: -static.
#
#CC = /export/ramoth4/bishop/simplescalar/bin/ssbig-na-sstrix-gcc
#CC= /home/lqingrui/idriver/gcc.sh
#CC= /home/lqingrui/idriver/gcc_whole_module.sh
# LFLAGS = -mv8
# LFLAGS = $(LFLAGS) -static
#
# End of addition
######################################################################

# May need this on a sun:
# CFLAGS=-O -I/usr/demo/SOUND
include ../../Make_Config
CC=$(COMPILER) 
CFLAGS= $(IDEM_CFLAGS)
LDFLAGS= $(IDEM_LDFLAGS)

#static compilation
#IDEMFLAG = --idempotence-construction=none --idempotence-preservation=none --livein-checkpoint=none --reverse-compute=none --target=armv7 -funroll-loops -static
#CFLAGS=  $(IDEMFLAG) --target=armv7
#LDFLAGS= -O2 -static --target=armv7 -m32
LN= ${IDEM_LINKER}

#LLVM_LINK=/home/lqingrui/llvm-install/bin/llvm-link

##dynamic compilation
#IDEMFLAG = --idempotence-construction=none --idempotence-preservation=none --livein-checkpoint=none --reverse-compute=none --target=armv7 -funroll-loops
#CFLAGS= -O2  $(IDEMFLAG) --target=armv7
#LDFLAGS= -O2 --target=armv7 -m32

#LN= /home/lqingrui/gcc/gcc-arm-build/bin/arm-none-linux-gnueabi-gcc

ALLSRC=README adpcm.2 Makefile adpcm.h libst.h adpcm.c timing.c rawcaudio.c \
	rawdaudio.c suncaudio.c sgicaudio.c sgidaudio.c hello.adpcm.uu

all: adpcm.o rawcaudio rawdaudio timing
	cp rawcaudio rawdaudio timing ../bin/.

sgi: all sgicaudio sgidaudio

sun: all suncaudio sundaudio

#adpcm.o: adpcm.h

suncaudio: suncaudio.o adpcm.o
	$(LN) $(LDFLAGS) adpcm.o suncaudio.o -o suncaudio -L/usr/demo/SOUND -laudio

sundaudio: suncaudio
	cp suncaudio sundaudio

sgicaudio: sgicaudio.o adpcm.o
	$(LN) $(LDFLAGS) sgicaudio.o adpcm.o -o sgicaudio -laudiofile -lm

sgidaudio: sgidaudio.o adpcm.o
	$(LN) $(LDFLAGS) sgidaudio.o adpcm.o -o sgidaudio -laudiofile -lm

#rawcaudio: rawcaudio.o adpcm.o
#	$(LN) $(LDFLAGS) rawcaudio.o adpcm.o -o rawcaudio
rawcaudio: rawcaudio_whole.o
	$(LN) $(LDFLAGS) $< -o $@
rawcaudio_whole.o: rawcaudio.bc adpcm.bc
	$(LLVM_LINK) -o rawcaudio_whole.bc $^
	$(CC) $(CFLAGS) rawcaudio_whole.bc -c -o $@

#rawdaudio: rawdaudio.o adpcm.o
#	$(LN) $(LDFLAGS) rawdaudio.o adpcm.o -o rawdaudio
rawdaudio: rawdaudio_whole.o
	$(LN) $(LDFLAGS) $< -o $@
rawdaudio_whole.o: rawdaudio.bc adpcm.bc
	$(LLVM_LINK) -o rawdaudio_whole.bc $^
	$(CC) $(CFLAGS) rawdaudio_whole.bc -c -o $@

#timing: timing.o adpcm.o
#	$(LN) $(LDFLAGS) timing.o adpcm.o -o timing
timing: timing_whole.o
	$(LN) $(LDFLAGS) $< -o $@
timing_whole.o: timing.bc adpcm.bc
	$(LLVM_LINK) -o timing_whole.bc $^
	$(CC) $(CFLAGS) timing_whole.bc -c -o $@

adpcm.shar: $(ALLSRC)
	shar $(ALLSRC) > adpcm.shar
#%.o: %.c
#	$(CC) $(CFLAGS) $<
%.bc: %.c
	$(CC) $(CFLAGS) -E $< -o $@

# Added by C. Lee
clean:
	rm -f *.o ; rm rawcaudio rawdaudio timing ; rm -f ../bin/*; rm -f *.ll; rm -f *.s; rm -f *.bc
